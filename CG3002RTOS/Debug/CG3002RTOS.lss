
CG3002RTOS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d4  00800200  0000532e  000053c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000532e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000f24  008002d4  008002d4  00005496  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00005496  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000007c8  00000000  00000000  000054f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000eea8  00000000  00000000  00005cba  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002a78  00000000  00000000  00014b62  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00004dff  00000000  00000000  000175da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00001c1c  00000000  00000000  0001c3dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00003abe  00000000  00000000  0001dff8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00008c86  00000000  00000000  00021ab6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000800  00000000  00000000  0002a73c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	22 c2       	rjmp	.+1092   	; 0x446 <__ctors_end>
       2:	00 00       	nop
       4:	51 c2       	rjmp	.+1186   	; 0x4a8 <__bad_interrupt>
       6:	00 00       	nop
       8:	4f c2       	rjmp	.+1182   	; 0x4a8 <__bad_interrupt>
       a:	00 00       	nop
       c:	4d c2       	rjmp	.+1178   	; 0x4a8 <__bad_interrupt>
       e:	00 00       	nop
      10:	4b c2       	rjmp	.+1174   	; 0x4a8 <__bad_interrupt>
      12:	00 00       	nop
      14:	49 c2       	rjmp	.+1170   	; 0x4a8 <__bad_interrupt>
      16:	00 00       	nop
      18:	47 c2       	rjmp	.+1166   	; 0x4a8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	45 c2       	rjmp	.+1162   	; 0x4a8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	43 c2       	rjmp	.+1158   	; 0x4a8 <__bad_interrupt>
      22:	00 00       	nop
      24:	41 c2       	rjmp	.+1154   	; 0x4a8 <__bad_interrupt>
      26:	00 00       	nop
      28:	3f c2       	rjmp	.+1150   	; 0x4a8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3d c2       	rjmp	.+1146   	; 0x4a8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	3b c2       	rjmp	.+1142   	; 0x4a8 <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 9c 16 	jmp	0x2d38	; 0x2d38 <__vector_13>
      38:	37 c2       	rjmp	.+1134   	; 0x4a8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	35 c2       	rjmp	.+1130   	; 0x4a8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	33 c2       	rjmp	.+1126   	; 0x4a8 <__bad_interrupt>
      42:	00 00       	nop
      44:	31 c2       	rjmp	.+1122   	; 0x4a8 <__bad_interrupt>
      46:	00 00       	nop
      48:	2f c2       	rjmp	.+1118   	; 0x4a8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2d c2       	rjmp	.+1114   	; 0x4a8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	2b c2       	rjmp	.+1110   	; 0x4a8 <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 fc 14 	jmp	0x29f8	; 0x29f8 <__vector_21>
      58:	27 c2       	rjmp	.+1102   	; 0x4a8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 ef 24 	jmp	0x49de	; 0x49de <__vector_23>
      60:	23 c2       	rjmp	.+1094   	; 0x4a8 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 af 20 	jmp	0x415e	; 0x415e <__vector_25>
      68:	0c 94 2f 21 	jmp	0x425e	; 0x425e <__vector_26>
      6c:	1d c2       	rjmp	.+1082   	; 0x4a8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	1b c2       	rjmp	.+1078   	; 0x4a8 <__bad_interrupt>
      72:	00 00       	nop
      74:	19 c2       	rjmp	.+1074   	; 0x4a8 <__bad_interrupt>
      76:	00 00       	nop
      78:	17 c2       	rjmp	.+1070   	; 0x4a8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	15 c2       	rjmp	.+1066   	; 0x4a8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	13 c2       	rjmp	.+1062   	; 0x4a8 <__bad_interrupt>
      82:	00 00       	nop
      84:	11 c2       	rjmp	.+1058   	; 0x4a8 <__bad_interrupt>
      86:	00 00       	nop
      88:	0f c2       	rjmp	.+1054   	; 0x4a8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	0d c2       	rjmp	.+1050   	; 0x4a8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 ef 20 	jmp	0x41de	; 0x41de <__vector_36>
      94:	0c 94 6e 21 	jmp	0x42dc	; 0x42dc <__vector_37>
      98:	07 c2       	rjmp	.+1038   	; 0x4a8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 c3 1a 	jmp	0x3586	; 0x3586 <__vector_39>
      a0:	03 c2       	rjmp	.+1030   	; 0x4a8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	01 c2       	rjmp	.+1026   	; 0x4a8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	ff c1       	rjmp	.+1022   	; 0x4a8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	fd c1       	rjmp	.+1018   	; 0x4a8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	fb c1       	rjmp	.+1014   	; 0x4a8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	f9 c1       	rjmp	.+1010   	; 0x4a8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	f7 c1       	rjmp	.+1006   	; 0x4a8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	f5 c1       	rjmp	.+1002   	; 0x4a8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	f3 c1       	rjmp	.+998    	; 0x4a8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	f1 c1       	rjmp	.+994    	; 0x4a8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ef c1       	rjmp	.+990    	; 0x4a8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	ed c1       	rjmp	.+986    	; 0x4a8 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	0c 94 ad 21 	jmp	0x435a	; 0x435a <__vector_52>
      d4:	e9 c1       	rjmp	.+978    	; 0x4a8 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	e7 c1       	rjmp	.+974    	; 0x4a8 <__bad_interrupt>
      da:	00 00       	nop
      dc:	0c 94 ec 21 	jmp	0x43d8	; 0x43d8 <__vector_55>
      e0:	e3 c1       	rjmp	.+966    	; 0x4a8 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	c9 1b       	sub	r28, r25
      e6:	cc 1b       	sub	r28, r28
      e8:	cc 1b       	sub	r28, r28
      ea:	cc 1b       	sub	r28, r28
      ec:	cc 1b       	sub	r28, r28
      ee:	cc 1b       	sub	r28, r28
      f0:	cc 1b       	sub	r28, r28
      f2:	cc 1b       	sub	r28, r28
      f4:	e3 1a       	sub	r14, r19
      f6:	cc 1b       	sub	r28, r28
      f8:	cc 1b       	sub	r28, r28
      fa:	cc 1b       	sub	r28, r28
      fc:	cc 1b       	sub	r28, r28
      fe:	cc 1b       	sub	r28, r28
     100:	cc 1b       	sub	r28, r28
     102:	cc 1b       	sub	r28, r28
     104:	e3 1a       	sub	r14, r19
     106:	cc 1b       	sub	r28, r28
     108:	cc 1b       	sub	r28, r28
     10a:	cc 1b       	sub	r28, r28
     10c:	cc 1b       	sub	r28, r28
     10e:	cc 1b       	sub	r28, r28
     110:	cc 1b       	sub	r28, r28
     112:	cc 1b       	sub	r28, r28
     114:	eb 1a       	sub	r14, r27
     116:	cc 1b       	sub	r28, r28
     118:	cc 1b       	sub	r28, r28
     11a:	cc 1b       	sub	r28, r28
     11c:	cc 1b       	sub	r28, r28
     11e:	cc 1b       	sub	r28, r28
     120:	cc 1b       	sub	r28, r28
     122:	cc 1b       	sub	r28, r28
     124:	10 1b       	sub	r17, r16
     126:	cc 1b       	sub	r28, r28
     128:	cc 1b       	sub	r28, r28
     12a:	cc 1b       	sub	r28, r28
     12c:	cc 1b       	sub	r28, r28
     12e:	cc 1b       	sub	r28, r28
     130:	cc 1b       	sub	r28, r28
     132:	cc 1b       	sub	r28, r28
     134:	eb 1a       	sub	r14, r27
     136:	cc 1b       	sub	r28, r28
     138:	cc 1b       	sub	r28, r28
     13a:	cc 1b       	sub	r28, r28
     13c:	cc 1b       	sub	r28, r28
     13e:	cc 1b       	sub	r28, r28
     140:	cc 1b       	sub	r28, r28
     142:	cc 1b       	sub	r28, r28
     144:	15 1b       	sub	r17, r21
     146:	cc 1b       	sub	r28, r28
     148:	cc 1b       	sub	r28, r28
     14a:	cc 1b       	sub	r28, r28
     14c:	cc 1b       	sub	r28, r28
     14e:	cc 1b       	sub	r28, r28
     150:	cc 1b       	sub	r28, r28
     152:	cc 1b       	sub	r28, r28
     154:	1a 1b       	sub	r17, r26
     156:	cc 1b       	sub	r28, r28
     158:	cc 1b       	sub	r28, r28
     15a:	cc 1b       	sub	r28, r28
     15c:	cc 1b       	sub	r28, r28
     15e:	cc 1b       	sub	r28, r28
     160:	cc 1b       	sub	r28, r28
     162:	cc 1b       	sub	r28, r28
     164:	2b 1b       	sub	r18, r27
     166:	cc 1b       	sub	r28, r28
     168:	cc 1b       	sub	r28, r28
     16a:	cc 1b       	sub	r28, r28
     16c:	cc 1b       	sub	r28, r28
     16e:	cc 1b       	sub	r28, r28
     170:	cc 1b       	sub	r28, r28
     172:	cc 1b       	sub	r28, r28
     174:	54 1b       	sub	r21, r20
     176:	cc 1b       	sub	r28, r28
     178:	cc 1b       	sub	r28, r28
     17a:	cc 1b       	sub	r28, r28
     17c:	cc 1b       	sub	r28, r28
     17e:	cc 1b       	sub	r28, r28
     180:	cc 1b       	sub	r28, r28
     182:	cc 1b       	sub	r28, r28
     184:	1f 1b       	sub	r17, r31
     186:	cc 1b       	sub	r28, r28
     188:	cc 1b       	sub	r28, r28
     18a:	cc 1b       	sub	r28, r28
     18c:	cc 1b       	sub	r28, r28
     18e:	cc 1b       	sub	r28, r28
     190:	cc 1b       	sub	r28, r28
     192:	cc 1b       	sub	r28, r28
     194:	39 1b       	sub	r19, r25
     196:	cc 1b       	sub	r28, r28
     198:	cc 1b       	sub	r28, r28
     19a:	cc 1b       	sub	r28, r28
     19c:	cc 1b       	sub	r28, r28
     19e:	cc 1b       	sub	r28, r28
     1a0:	cc 1b       	sub	r28, r28
     1a2:	cc 1b       	sub	r28, r28
     1a4:	56 1b       	sub	r21, r22
     1a6:	cc 1b       	sub	r28, r28
     1a8:	cc 1b       	sub	r28, r28
     1aa:	cc 1b       	sub	r28, r28
     1ac:	cc 1b       	sub	r28, r28
     1ae:	cc 1b       	sub	r28, r28
     1b0:	cc 1b       	sub	r28, r28
     1b2:	cc 1b       	sub	r28, r28
     1b4:	56 1b       	sub	r21, r22
     1b6:	cc 1b       	sub	r28, r28
     1b8:	cc 1b       	sub	r28, r28
     1ba:	cc 1b       	sub	r28, r28
     1bc:	cc 1b       	sub	r28, r28
     1be:	cc 1b       	sub	r28, r28
     1c0:	cc 1b       	sub	r28, r28
     1c2:	cc 1b       	sub	r28, r28
     1c4:	56 1b       	sub	r21, r22
     1c6:	cc 1b       	sub	r28, r28
     1c8:	cc 1b       	sub	r28, r28
     1ca:	cc 1b       	sub	r28, r28
     1cc:	cc 1b       	sub	r28, r28
     1ce:	cc 1b       	sub	r28, r28
     1d0:	cc 1b       	sub	r28, r28
     1d2:	cc 1b       	sub	r28, r28
     1d4:	56 1b       	sub	r21, r22
     1d6:	cc 1b       	sub	r28, r28
     1d8:	cc 1b       	sub	r28, r28
     1da:	cc 1b       	sub	r28, r28
     1dc:	cc 1b       	sub	r28, r28
     1de:	cc 1b       	sub	r28, r28
     1e0:	cc 1b       	sub	r28, r28
     1e2:	cc 1b       	sub	r28, r28
     1e4:	5f 1b       	sub	r21, r31
     1e6:	cc 1b       	sub	r28, r28
     1e8:	cc 1b       	sub	r28, r28
     1ea:	cc 1b       	sub	r28, r28
     1ec:	cc 1b       	sub	r28, r28
     1ee:	cc 1b       	sub	r28, r28
     1f0:	cc 1b       	sub	r28, r28
     1f2:	cc 1b       	sub	r28, r28
     1f4:	90 1b       	sub	r25, r16
     1f6:	cc 1b       	sub	r28, r28
     1f8:	cc 1b       	sub	r28, r28
     1fa:	cc 1b       	sub	r28, r28
     1fc:	cc 1b       	sub	r28, r28
     1fe:	cc 1b       	sub	r28, r28
     200:	cc 1b       	sub	r28, r28
     202:	cc 1b       	sub	r28, r28
     204:	5f 1b       	sub	r21, r31
     206:	cc 1b       	sub	r28, r28
     208:	cc 1b       	sub	r28, r28
     20a:	cc 1b       	sub	r28, r28
     20c:	cc 1b       	sub	r28, r28
     20e:	cc 1b       	sub	r28, r28
     210:	cc 1b       	sub	r28, r28
     212:	cc 1b       	sub	r28, r28
     214:	90 1b       	sub	r25, r16
     216:	cc 1b       	sub	r28, r28
     218:	cc 1b       	sub	r28, r28
     21a:	cc 1b       	sub	r28, r28
     21c:	cc 1b       	sub	r28, r28
     21e:	cc 1b       	sub	r28, r28
     220:	cc 1b       	sub	r28, r28
     222:	cc 1b       	sub	r28, r28
     224:	77 1b       	sub	r23, r23
     226:	cc 1b       	sub	r28, r28
     228:	cc 1b       	sub	r28, r28
     22a:	cc 1b       	sub	r28, r28
     22c:	cc 1b       	sub	r28, r28
     22e:	cc 1b       	sub	r28, r28
     230:	cc 1b       	sub	r28, r28
     232:	cc 1b       	sub	r28, r28
     234:	94 1b       	sub	r25, r20
     236:	cc 1b       	sub	r28, r28
     238:	cc 1b       	sub	r28, r28
     23a:	cc 1b       	sub	r28, r28
     23c:	cc 1b       	sub	r28, r28
     23e:	cc 1b       	sub	r28, r28
     240:	cc 1b       	sub	r28, r28
     242:	cc 1b       	sub	r28, r28
     244:	94 1b       	sub	r25, r20
     246:	cc 1b       	sub	r28, r28
     248:	cc 1b       	sub	r28, r28
     24a:	cc 1b       	sub	r28, r28
     24c:	cc 1b       	sub	r28, r28
     24e:	cc 1b       	sub	r28, r28
     250:	cc 1b       	sub	r28, r28
     252:	cc 1b       	sub	r28, r28
     254:	a9 1b       	sub	r26, r25
     256:	cc 1b       	sub	r28, r28
     258:	cc 1b       	sub	r28, r28
     25a:	cc 1b       	sub	r28, r28
     25c:	cc 1b       	sub	r28, r28
     25e:	cc 1b       	sub	r28, r28
     260:	cc 1b       	sub	r28, r28
     262:	cc 1b       	sub	r28, r28
     264:	c3 1b       	sub	r28, r19
     266:	cc 1b       	sub	r28, r28
     268:	cc 1b       	sub	r28, r28
     26a:	cc 1b       	sub	r28, r28
     26c:	cc 1b       	sub	r28, r28
     26e:	cc 1b       	sub	r28, r28
     270:	cc 1b       	sub	r28, r28
     272:	cc 1b       	sub	r28, r28
     274:	c3 1b       	sub	r28, r19
     276:	03 6e       	ori	r16, 0xE3	; 227
     278:	db 36       	cpi	r29, 0x6B	; 107
     27a:	3d 9a       	sbi	0x07, 5	; 7
     27c:	99 99       	sbic	0x13, 1	; 19
     27e:	99 3d       	cpi	r25, 0xD9	; 217
     280:	ab aa       	std	Y+51, r10	; 0x33
     282:	aa 2a       	or	r10, r26
     284:	3e 00       	.word	0x003e	; ????
     286:	00 00       	nop
     288:	80 3f       	cpi	r24, 0xF0	; 240
     28a:	08 4a       	sbci	r16, 0xA8	; 168
     28c:	d7 3b       	cpi	r29, 0xB7	; 183
     28e:	3b ce       	rjmp	.-906    	; 0xffffff06 <__eeprom_end+0xff7eff06>
     290:	01 6e       	ori	r16, 0xE1	; 225
     292:	84 bc       	out	0x24, r8	; 36
     294:	bf fd       	.word	0xfdbf	; ????
     296:	c1 2f       	mov	r28, r17
     298:	3d 6c       	ori	r19, 0xCD	; 205
     29a:	74 31       	cpi	r23, 0x14	; 20
     29c:	9a bd       	out	0x2a, r25	; 42
     29e:	56 83       	std	Z+6, r21	; 0x06
     2a0:	3d da       	rcall	.-2950   	; 0xfffff71c <__eeprom_end+0xff7ef71c>
     2a2:	3d 00       	.word	0x003d	; ????
     2a4:	c7 7f       	andi	r28, 0xF7	; 247
     2a6:	11 be       	out	0x31, r1	; 49
     2a8:	d9 e4       	ldi	r29, 0x49	; 73
     2aa:	bb 4c       	sbci	r27, 0xCB	; 203
     2ac:	3e 91       	ld	r19, -X
     2ae:	6b aa       	std	Y+51, r6	; 0x33
     2b0:	aa be       	out	0x3a, r10	; 58
     2b2:	00 00       	nop
     2b4:	00 80       	ld	r0, Z
     2b6:	3f 07       	cpc	r19, r31
     2b8:	2c 7a       	andi	r18, 0xAC	; 172
     2ba:	a5 ba       	out	0x15, r10	; 21
     2bc:	6c c5       	rjmp	.+2776   	; 0xd96 <_Z16Drift_correctionv+0x1c0>
     2be:	90 da       	rcall	.-2784   	; 0xfffff7e0 <__eeprom_end+0xff7ef7e0>
     2c0:	3b 93       	.word	0x933b	; ????
     2c2:	65 fc       	sbrc	r6, 5
     2c4:	8b bc       	out	0x2b, r8	; 43
     2c6:	53 f8       	bld	r5, 3
     2c8:	10 fd       	sbrc	r17, 0
     2ca:	3c 56       	subi	r19, 0x6C	; 108
     2cc:	92 83       	std	Z+2, r25	; 0x02
     2ce:	4d bd       	out	0x2d, r20	; 45
     2d0:	87 9d       	mul	r24, r7
     2d2:	3a b6       	in	r3, 0x3a	; 58
     2d4:	3d cb       	rjmp	.-2438   	; 0xfffff950 <__eeprom_end+0xff7ef950>
     2d6:	c9 bf       	out	0x39, r28	; 57
     2d8:	5b be       	out	0x3b, r5	; 59
     2da:	73 da       	rcall	.-2842   	; 0xfffff7c2 <__eeprom_end+0xff7ef7c2>
     2dc:	0f c9       	rjmp	.-3554   	; 0xfffff4fc <__eeprom_end+0xff7ef4fc>
     2de:	3f 05       	cpc	r19, r15
     2e0:	a8 4c       	sbci	r26, 0xC8	; 200
     2e2:	cd b2       	in	r12, 0x1d	; 29
     2e4:	d4 4e       	sbci	r29, 0xE4	; 228
     2e6:	b9 38       	cpi	r27, 0x89	; 137
     2e8:	36 a9       	ldd	r19, Z+54	; 0x36
     2ea:	02 0c       	add	r0, r2
     2ec:	50 b9       	out	0x00, r21	; 0
     2ee:	91 86       	std	Z+9, r9	; 0x09
     2f0:	88 08       	sbc	r8, r8
     2f2:	3c a6       	std	Y+44, r3	; 0x2c
     2f4:	aa aa       	std	Y+50, r10	; 0x32
     2f6:	2a be       	out	0x3a, r2	; 58
     2f8:	00 00       	nop
     2fa:	00 80       	ld	r0, Z
     2fc:	3f 00       	.word	0x003f	; ????
     2fe:	0b 26       	eor	r0, r27
     300:	0f 26       	eor	r0, r31
     302:	ff 25       	eor	r31, r15
     304:	05 26       	eor	r0, r21
     306:	54 26       	eor	r5, r20
     308:	13 26       	eor	r1, r19
     30a:	19 26       	eor	r1, r25
     30c:	1f 26       	eor	r1, r31
     30e:	25 26       	eor	r2, r21
     310:	2b 26       	eor	r2, r27
     312:	31 26       	eor	r3, r17
     314:	37 26       	eor	r3, r23
     316:	3d 26       	eor	r3, r29
     318:	54 26       	eor	r5, r20
     31a:	43 26       	eor	r4, r19
     31c:	49 26       	eor	r4, r25
     31e:	4f 26       	eor	r4, r31

00000320 <__trampolines_end>:
     320:	00 00       	nop
     322:	09 0a       	sbc	r0, r25
     324:	02 08       	sbc	r0, r2
     326:	0b 0c       	add	r0, r11
     328:	0d 07       	cpc	r16, r29
     32a:	06 03       	mulsu	r16, r22
     32c:	04 01       	movw	r0, r8
	...
     34a:	00 00       	nop
     34c:	11 10       	cpse	r1, r1
     34e:	0f 00       	.word	0x000f	; ????
	...

00000366 <digital_pin_to_bit_mask_PGM>:
     366:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
     376:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
     386:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
     396:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
     3a6:	04 08 10 20 40 80                                   ... @.

000003ac <digital_pin_to_port_PGM>:
     3ac:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
     3bc:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
     3cc:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
     3dc:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
     3ec:	0b 0b 0b 0b 0b 0b                                   ......

000003f2 <port_to_input_PGM>:
     3f2:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
     402:	00 01 00 00 03 01 06 01 09 01                       ..........

0000040c <port_to_output_PGM>:
     40c:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
     41c:	02 01 00 00 05 01 08 01 0b 01                       ..........

00000426 <port_to_mode_PGM>:
     426:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
     436:	01 01 00 00 04 01 07 01 0a 01                       ..........

00000440 <__ctors_start>:
     440:	a0 0a       	sbc	r10, r16
     442:	b1 1c       	adc	r11, r1
     444:	f2 22       	and	r15, r18

00000446 <__ctors_end>:
     446:	11 24       	eor	r1, r1
     448:	1f be       	out	0x3f, r1	; 63
     44a:	cf ef       	ldi	r28, 0xFF	; 255
     44c:	d1 e2       	ldi	r29, 0x21	; 33
     44e:	de bf       	out	0x3e, r29	; 62
     450:	cd bf       	out	0x3d, r28	; 61
     452:	00 e0       	ldi	r16, 0x00	; 0
     454:	0c bf       	out	0x3c, r16	; 60

00000456 <__do_copy_data>:
     456:	12 e0       	ldi	r17, 0x02	; 2
     458:	a0 e0       	ldi	r26, 0x00	; 0
     45a:	b2 e0       	ldi	r27, 0x02	; 2
     45c:	ee e2       	ldi	r30, 0x2E	; 46
     45e:	f3 e5       	ldi	r31, 0x53	; 83
     460:	00 e0       	ldi	r16, 0x00	; 0
     462:	0b bf       	out	0x3b, r16	; 59
     464:	02 c0       	rjmp	.+4      	; 0x46a <__do_copy_data+0x14>
     466:	07 90       	elpm	r0, Z+
     468:	0d 92       	st	X+, r0
     46a:	a4 3d       	cpi	r26, 0xD4	; 212
     46c:	b1 07       	cpc	r27, r17
     46e:	d9 f7       	brne	.-10     	; 0x466 <__do_copy_data+0x10>

00000470 <__do_clear_bss>:
     470:	21 e1       	ldi	r18, 0x11	; 17
     472:	a4 ed       	ldi	r26, 0xD4	; 212
     474:	b2 e0       	ldi	r27, 0x02	; 2
     476:	01 c0       	rjmp	.+2      	; 0x47a <.do_clear_bss_start>

00000478 <.do_clear_bss_loop>:
     478:	1d 92       	st	X+, r1

0000047a <.do_clear_bss_start>:
     47a:	a8 3f       	cpi	r26, 0xF8	; 248
     47c:	b2 07       	cpc	r27, r18
     47e:	e1 f7       	brne	.-8      	; 0x478 <.do_clear_bss_loop>

00000480 <__do_global_ctors>:
     480:	14 e0       	ldi	r17, 0x04	; 4
     482:	c6 e4       	ldi	r28, 0x46	; 70
     484:	d4 e0       	ldi	r29, 0x04	; 4
     486:	00 e0       	ldi	r16, 0x00	; 0
     488:	06 c0       	rjmp	.+12     	; 0x496 <__do_global_ctors+0x16>
     48a:	22 97       	sbiw	r28, 0x02	; 2
     48c:	01 09       	sbc	r16, r1
     48e:	fe 01       	movw	r30, r28
     490:	0b bf       	out	0x3b, r16	; 59
     492:	0e 94 d5 26 	call	0x4daa	; 0x4daa <__tablejump_elpm__>
     496:	c0 34       	cpi	r28, 0x40	; 64
     498:	d1 07       	cpc	r29, r17
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	08 07       	cpc	r16, r24
     49e:	a9 f7       	brne	.-22     	; 0x48a <__do_global_ctors+0xa>
     4a0:	0e 94 55 0c 	call	0x18aa	; 0x18aa <main>
     4a4:	0c 94 95 29 	jmp	0x532a	; 0x532a <_exit>

000004a8 <__bad_interrupt>:
     4a8:	ab cd       	rjmp	.-1194   	; 0x0 <__vectors>

000004aa <_Z15Matrix_MultiplyPA3_fS0_S0_>:
			onVMotor(1);
		else if (ir_distance>=100 && ir_distance<=150)
			onVMotor(2);	
		vTaskDelay(70);	
		
	}
     4aa:	2f 92       	push	r2
     4ac:	3f 92       	push	r3
     4ae:	4f 92       	push	r4
     4b0:	5f 92       	push	r5
     4b2:	6f 92       	push	r6
     4b4:	7f 92       	push	r7
     4b6:	8f 92       	push	r8
     4b8:	9f 92       	push	r9
     4ba:	af 92       	push	r10
     4bc:	bf 92       	push	r11
     4be:	cf 92       	push	r12
     4c0:	df 92       	push	r13
     4c2:	ef 92       	push	r14
     4c4:	ff 92       	push	r15
     4c6:	0f 93       	push	r16
     4c8:	1f 93       	push	r17
     4ca:	cf 93       	push	r28
     4cc:	df 93       	push	r29
     4ce:	cd b7       	in	r28, 0x3d	; 61
     4d0:	de b7       	in	r29, 0x3e	; 62
     4d2:	62 97       	sbiw	r28, 0x12	; 18
     4d4:	0f b6       	in	r0, 0x3f	; 63
     4d6:	f8 94       	cli
     4d8:	de bf       	out	0x3e, r29	; 62
     4da:	0f be       	out	0x3f, r0	; 63
     4dc:	cd bf       	out	0x3d, r28	; 61
     4de:	98 8b       	std	Y+16, r25	; 0x10
     4e0:	8f 87       	std	Y+15, r24	; 0x0f
     4e2:	5a 8b       	std	Y+18, r21	; 0x12
     4e4:	49 8b       	std	Y+17, r20	; 0x11
     4e6:	81 2c       	mov	r8, r1
     4e8:	91 2c       	mov	r9, r1
     4ea:	2e 01       	movw	r4, r28
     4ec:	8d e0       	ldi	r24, 0x0D	; 13
     4ee:	48 0e       	add	r4, r24
     4f0:	51 1c       	adc	r5, r1
     4f2:	7e 87       	std	Y+14, r23	; 0x0e
     4f4:	6d 87       	std	Y+13, r22	; 0x0d
     4f6:	46 c0       	rjmp	.+140    	; 0x584 <_Z15Matrix_MultiplyPA3_fS0_S0_+0xda>
     4f8:	f5 01       	movw	r30, r10
     4fa:	61 91       	ld	r22, Z+
     4fc:	71 91       	ld	r23, Z+
     4fe:	81 91       	ld	r24, Z+
     500:	91 91       	ld	r25, Z+
     502:	5f 01       	movw	r10, r30
     504:	f7 01       	movw	r30, r14
     506:	20 81       	ld	r18, Z
     508:	31 81       	ldd	r19, Z+1	; 0x01
     50a:	42 81       	ldd	r20, Z+2	; 0x02
     50c:	53 81       	ldd	r21, Z+3	; 0x03
     50e:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     512:	f8 01       	movw	r30, r16
     514:	61 93       	st	Z+, r22
     516:	71 93       	st	Z+, r23
     518:	81 93       	st	Z+, r24
     51a:	91 93       	st	Z+, r25
     51c:	8f 01       	movw	r16, r30
     51e:	fc e0       	ldi	r31, 0x0C	; 12
     520:	ef 0e       	add	r14, r31
     522:	f1 1c       	adc	r15, r1
     524:	04 15       	cp	r16, r4
     526:	15 05       	cpc	r17, r5
     528:	39 f7       	brne	.-50     	; 0x4f8 <_Z15Matrix_MultiplyPA3_fS0_S0_+0x4e>
     52a:	2d 81       	ldd	r18, Y+5	; 0x05
     52c:	3e 81       	ldd	r19, Y+6	; 0x06
     52e:	4f 81       	ldd	r20, Y+7	; 0x07
     530:	58 85       	ldd	r21, Y+8	; 0x08
     532:	69 81       	ldd	r22, Y+1	; 0x01
     534:	7a 81       	ldd	r23, Y+2	; 0x02
     536:	8b 81       	ldd	r24, Y+3	; 0x03
     538:	9c 81       	ldd	r25, Y+4	; 0x04
     53a:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     53e:	29 85       	ldd	r18, Y+9	; 0x09
     540:	3a 85       	ldd	r19, Y+10	; 0x0a
     542:	4b 85       	ldd	r20, Y+11	; 0x0b
     544:	5c 85       	ldd	r21, Y+12	; 0x0c
     546:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     54a:	f3 01       	movw	r30, r6
     54c:	61 93       	st	Z+, r22
     54e:	71 93       	st	Z+, r23
     550:	81 93       	st	Z+, r24
     552:	91 93       	st	Z+, r25
     554:	3f 01       	movw	r6, r30
     556:	f4 e0       	ldi	r31, 0x04	; 4
     558:	cf 0e       	add	r12, r31
     55a:	d1 1c       	adc	r13, r1
     55c:	8c e0       	ldi	r24, 0x0C	; 12
     55e:	c8 16       	cp	r12, r24
     560:	d1 04       	cpc	r13, r1
     562:	49 f0       	breq	.+18     	; 0x576 <_Z15Matrix_MultiplyPA3_fS0_S0_+0xcc>
     564:	8e 01       	movw	r16, r28
     566:	0f 5f       	subi	r16, 0xFF	; 255
     568:	1f 4f       	sbci	r17, 0xFF	; 255
     56a:	ed 84       	ldd	r14, Y+13	; 0x0d
     56c:	fe 84       	ldd	r15, Y+14	; 0x0e
     56e:	ec 0c       	add	r14, r12
     570:	fd 1c       	adc	r15, r13
     572:	51 01       	movw	r10, r2
     574:	c1 cf       	rjmp	.-126    	; 0x4f8 <_Z15Matrix_MultiplyPA3_fS0_S0_+0x4e>
     576:	ec e0       	ldi	r30, 0x0C	; 12
     578:	8e 0e       	add	r8, r30
     57a:	91 1c       	adc	r9, r1
     57c:	f4 e2       	ldi	r31, 0x24	; 36
     57e:	8f 16       	cp	r8, r31
     580:	91 04       	cpc	r9, r1
     582:	59 f0       	breq	.+22     	; 0x59a <_Z15Matrix_MultiplyPA3_fS0_S0_+0xf0>
     584:	69 88       	ldd	r6, Y+17	; 0x11
     586:	7a 88       	ldd	r7, Y+18	; 0x12
     588:	68 0c       	add	r6, r8
     58a:	79 1c       	adc	r7, r9
     58c:	c1 2c       	mov	r12, r1
     58e:	d1 2c       	mov	r13, r1
     590:	2f 84       	ldd	r2, Y+15	; 0x0f
     592:	38 88       	ldd	r3, Y+16	; 0x10
     594:	28 0c       	add	r2, r8
     596:	39 1c       	adc	r3, r9
     598:	e5 cf       	rjmp	.-54     	; 0x564 <_Z15Matrix_MultiplyPA3_fS0_S0_+0xba>
     59a:	62 96       	adiw	r28, 0x12	; 18
     59c:	0f b6       	in	r0, 0x3f	; 63
     59e:	f8 94       	cli
     5a0:	de bf       	out	0x3e, r29	; 62
     5a2:	0f be       	out	0x3f, r0	; 63
     5a4:	cd bf       	out	0x3d, r28	; 61
     5a6:	df 91       	pop	r29
     5a8:	cf 91       	pop	r28
     5aa:	1f 91       	pop	r17
     5ac:	0f 91       	pop	r16
     5ae:	ff 90       	pop	r15
     5b0:	ef 90       	pop	r14
     5b2:	df 90       	pop	r13
     5b4:	cf 90       	pop	r12
     5b6:	bf 90       	pop	r11
     5b8:	af 90       	pop	r10
     5ba:	9f 90       	pop	r9
     5bc:	8f 90       	pop	r8
     5be:	7f 90       	pop	r7
     5c0:	6f 90       	pop	r6
     5c2:	5f 90       	pop	r5
     5c4:	4f 90       	pop	r4
     5c6:	3f 90       	pop	r3
     5c8:	2f 90       	pop	r2
     5ca:	08 95       	ret

000005cc <_Z18Vector_Dot_ProductPfS_>:
     5cc:	af 92       	push	r10
     5ce:	bf 92       	push	r11
     5d0:	cf 92       	push	r12
     5d2:	df 92       	push	r13
     5d4:	ef 92       	push	r14
     5d6:	ff 92       	push	r15
     5d8:	0f 93       	push	r16
     5da:	1f 93       	push	r17
     5dc:	cf 93       	push	r28
     5de:	df 93       	push	r29
     5e0:	5c 01       	movw	r10, r24
     5e2:	06 2f       	mov	r16, r22
     5e4:	17 2f       	mov	r17, r23
     5e6:	c3 e0       	ldi	r28, 0x03	; 3
     5e8:	d0 e0       	ldi	r29, 0x00	; 0
     5ea:	c1 2c       	mov	r12, r1
     5ec:	d1 2c       	mov	r13, r1
     5ee:	76 01       	movw	r14, r12
     5f0:	f5 01       	movw	r30, r10
     5f2:	61 91       	ld	r22, Z+
     5f4:	71 91       	ld	r23, Z+
     5f6:	81 91       	ld	r24, Z+
     5f8:	91 91       	ld	r25, Z+
     5fa:	5f 01       	movw	r10, r30
     5fc:	f8 01       	movw	r30, r16
     5fe:	21 91       	ld	r18, Z+
     600:	31 91       	ld	r19, Z+
     602:	41 91       	ld	r20, Z+
     604:	51 91       	ld	r21, Z+
     606:	8f 01       	movw	r16, r30
     608:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     60c:	9b 01       	movw	r18, r22
     60e:	ac 01       	movw	r20, r24
     610:	c7 01       	movw	r24, r14
     612:	b6 01       	movw	r22, r12
     614:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     618:	6b 01       	movw	r12, r22
     61a:	7c 01       	movw	r14, r24
     61c:	21 97       	sbiw	r28, 0x01	; 1
     61e:	20 97       	sbiw	r28, 0x00	; 0
     620:	39 f7       	brne	.-50     	; 0x5f0 <_Z18Vector_Dot_ProductPfS_+0x24>
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	1f 91       	pop	r17
     628:	0f 91       	pop	r16
     62a:	ff 90       	pop	r15
     62c:	ef 90       	pop	r14
     62e:	df 90       	pop	r13
     630:	cf 90       	pop	r12
     632:	bf 90       	pop	r11
     634:	af 90       	pop	r10
     636:	08 95       	ret

00000638 <_Z20Vector_Cross_ProductPfS_S_>:
     638:	af 92       	push	r10
     63a:	bf 92       	push	r11
     63c:	cf 92       	push	r12
     63e:	df 92       	push	r13
     640:	ef 92       	push	r14
     642:	ff 92       	push	r15
     644:	0f 93       	push	r16
     646:	1f 93       	push	r17
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	5c 01       	movw	r10, r24
     64e:	eb 01       	movw	r28, r22
     650:	8a 01       	movw	r16, r20
     652:	fa 01       	movw	r30, r20
     654:	20 85       	ldd	r18, Z+8	; 0x08
     656:	31 85       	ldd	r19, Z+9	; 0x09
     658:	42 85       	ldd	r20, Z+10	; 0x0a
     65a:	53 85       	ldd	r21, Z+11	; 0x0b
     65c:	6c 81       	ldd	r22, Y+4	; 0x04
     65e:	7d 81       	ldd	r23, Y+5	; 0x05
     660:	8e 81       	ldd	r24, Y+6	; 0x06
     662:	9f 81       	ldd	r25, Y+7	; 0x07
     664:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     668:	6b 01       	movw	r12, r22
     66a:	7c 01       	movw	r14, r24
     66c:	f8 01       	movw	r30, r16
     66e:	24 81       	ldd	r18, Z+4	; 0x04
     670:	35 81       	ldd	r19, Z+5	; 0x05
     672:	46 81       	ldd	r20, Z+6	; 0x06
     674:	57 81       	ldd	r21, Z+7	; 0x07
     676:	68 85       	ldd	r22, Y+8	; 0x08
     678:	79 85       	ldd	r23, Y+9	; 0x09
     67a:	8a 85       	ldd	r24, Y+10	; 0x0a
     67c:	9b 85       	ldd	r25, Y+11	; 0x0b
     67e:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     682:	9b 01       	movw	r18, r22
     684:	ac 01       	movw	r20, r24
     686:	c7 01       	movw	r24, r14
     688:	b6 01       	movw	r22, r12
     68a:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     68e:	f5 01       	movw	r30, r10
     690:	60 83       	st	Z, r22
     692:	71 83       	std	Z+1, r23	; 0x01
     694:	82 83       	std	Z+2, r24	; 0x02
     696:	93 83       	std	Z+3, r25	; 0x03
     698:	f8 01       	movw	r30, r16
     69a:	20 81       	ld	r18, Z
     69c:	31 81       	ldd	r19, Z+1	; 0x01
     69e:	42 81       	ldd	r20, Z+2	; 0x02
     6a0:	53 81       	ldd	r21, Z+3	; 0x03
     6a2:	68 85       	ldd	r22, Y+8	; 0x08
     6a4:	79 85       	ldd	r23, Y+9	; 0x09
     6a6:	8a 85       	ldd	r24, Y+10	; 0x0a
     6a8:	9b 85       	ldd	r25, Y+11	; 0x0b
     6aa:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     6ae:	6b 01       	movw	r12, r22
     6b0:	7c 01       	movw	r14, r24
     6b2:	f8 01       	movw	r30, r16
     6b4:	20 85       	ldd	r18, Z+8	; 0x08
     6b6:	31 85       	ldd	r19, Z+9	; 0x09
     6b8:	42 85       	ldd	r20, Z+10	; 0x0a
     6ba:	53 85       	ldd	r21, Z+11	; 0x0b
     6bc:	68 81       	ld	r22, Y
     6be:	79 81       	ldd	r23, Y+1	; 0x01
     6c0:	8a 81       	ldd	r24, Y+2	; 0x02
     6c2:	9b 81       	ldd	r25, Y+3	; 0x03
     6c4:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     6c8:	9b 01       	movw	r18, r22
     6ca:	ac 01       	movw	r20, r24
     6cc:	c7 01       	movw	r24, r14
     6ce:	b6 01       	movw	r22, r12
     6d0:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     6d4:	f5 01       	movw	r30, r10
     6d6:	64 83       	std	Z+4, r22	; 0x04
     6d8:	75 83       	std	Z+5, r23	; 0x05
     6da:	86 83       	std	Z+6, r24	; 0x06
     6dc:	97 83       	std	Z+7, r25	; 0x07
     6de:	f8 01       	movw	r30, r16
     6e0:	24 81       	ldd	r18, Z+4	; 0x04
     6e2:	35 81       	ldd	r19, Z+5	; 0x05
     6e4:	46 81       	ldd	r20, Z+6	; 0x06
     6e6:	57 81       	ldd	r21, Z+7	; 0x07
     6e8:	68 81       	ld	r22, Y
     6ea:	79 81       	ldd	r23, Y+1	; 0x01
     6ec:	8a 81       	ldd	r24, Y+2	; 0x02
     6ee:	9b 81       	ldd	r25, Y+3	; 0x03
     6f0:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     6f4:	6b 01       	movw	r12, r22
     6f6:	7c 01       	movw	r14, r24
     6f8:	f8 01       	movw	r30, r16
     6fa:	20 81       	ld	r18, Z
     6fc:	31 81       	ldd	r19, Z+1	; 0x01
     6fe:	42 81       	ldd	r20, Z+2	; 0x02
     700:	53 81       	ldd	r21, Z+3	; 0x03
     702:	6c 81       	ldd	r22, Y+4	; 0x04
     704:	7d 81       	ldd	r23, Y+5	; 0x05
     706:	8e 81       	ldd	r24, Y+6	; 0x06
     708:	9f 81       	ldd	r25, Y+7	; 0x07
     70a:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     70e:	9b 01       	movw	r18, r22
     710:	ac 01       	movw	r20, r24
     712:	c7 01       	movw	r24, r14
     714:	b6 01       	movw	r22, r12
     716:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     71a:	f5 01       	movw	r30, r10
     71c:	60 87       	std	Z+8, r22	; 0x08
     71e:	71 87       	std	Z+9, r23	; 0x09
     720:	82 87       	std	Z+10, r24	; 0x0a
     722:	93 87       	std	Z+11, r25	; 0x0b
     724:	df 91       	pop	r29
     726:	cf 91       	pop	r28
     728:	1f 91       	pop	r17
     72a:	0f 91       	pop	r16
     72c:	ff 90       	pop	r15
     72e:	ef 90       	pop	r14
     730:	df 90       	pop	r13
     732:	cf 90       	pop	r12
     734:	bf 90       	pop	r11
     736:	af 90       	pop	r10
     738:	08 95       	ret

0000073a <_Z12Vector_ScalePfS_f>:
     73a:	8f 92       	push	r8
     73c:	9f 92       	push	r9
     73e:	af 92       	push	r10
     740:	bf 92       	push	r11
     742:	ef 92       	push	r14
     744:	ff 92       	push	r15
     746:	0f 93       	push	r16
     748:	1f 93       	push	r17
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	49 01       	movw	r8, r18
     750:	5a 01       	movw	r10, r20
     752:	06 2f       	mov	r16, r22
     754:	17 2f       	mov	r17, r23
     756:	7c 01       	movw	r14, r24
     758:	c0 e0       	ldi	r28, 0x00	; 0
     75a:	d0 e0       	ldi	r29, 0x00	; 0
     75c:	f8 01       	movw	r30, r16
     75e:	61 91       	ld	r22, Z+
     760:	71 91       	ld	r23, Z+
     762:	81 91       	ld	r24, Z+
     764:	91 91       	ld	r25, Z+
     766:	8f 01       	movw	r16, r30
     768:	a5 01       	movw	r20, r10
     76a:	94 01       	movw	r18, r8
     76c:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     770:	f7 01       	movw	r30, r14
     772:	61 93       	st	Z+, r22
     774:	71 93       	st	Z+, r23
     776:	81 93       	st	Z+, r24
     778:	91 93       	st	Z+, r25
     77a:	7f 01       	movw	r14, r30
     77c:	21 96       	adiw	r28, 0x01	; 1
     77e:	c3 30       	cpi	r28, 0x03	; 3
     780:	d1 05       	cpc	r29, r1
     782:	61 f7       	brne	.-40     	; 0x75c <_Z12Vector_ScalePfS_f+0x22>
     784:	df 91       	pop	r29
     786:	cf 91       	pop	r28
     788:	1f 91       	pop	r17
     78a:	0f 91       	pop	r16
     78c:	ff 90       	pop	r15
     78e:	ef 90       	pop	r14
     790:	bf 90       	pop	r11
     792:	af 90       	pop	r10
     794:	9f 90       	pop	r9
     796:	8f 90       	pop	r8
     798:	08 95       	ret

0000079a <_Z10Vector_AddPfS_S_>:
     79a:	cf 92       	push	r12
     79c:	df 92       	push	r13
     79e:	ef 92       	push	r14
     7a0:	ff 92       	push	r15
     7a2:	0f 93       	push	r16
     7a4:	1f 93       	push	r17
     7a6:	cf 93       	push	r28
     7a8:	df 93       	push	r29
     7aa:	e6 2e       	mov	r14, r22
     7ac:	f7 2e       	mov	r15, r23
     7ae:	04 2f       	mov	r16, r20
     7b0:	15 2f       	mov	r17, r21
     7b2:	6c 01       	movw	r12, r24
     7b4:	c0 e0       	ldi	r28, 0x00	; 0
     7b6:	d0 e0       	ldi	r29, 0x00	; 0
     7b8:	f7 01       	movw	r30, r14
     7ba:	61 91       	ld	r22, Z+
     7bc:	71 91       	ld	r23, Z+
     7be:	81 91       	ld	r24, Z+
     7c0:	91 91       	ld	r25, Z+
     7c2:	7f 01       	movw	r14, r30
     7c4:	f8 01       	movw	r30, r16
     7c6:	21 91       	ld	r18, Z+
     7c8:	31 91       	ld	r19, Z+
     7ca:	41 91       	ld	r20, Z+
     7cc:	51 91       	ld	r21, Z+
     7ce:	8f 01       	movw	r16, r30
     7d0:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     7d4:	f6 01       	movw	r30, r12
     7d6:	61 93       	st	Z+, r22
     7d8:	71 93       	st	Z+, r23
     7da:	81 93       	st	Z+, r24
     7dc:	91 93       	st	Z+, r25
     7de:	6f 01       	movw	r12, r30
     7e0:	21 96       	adiw	r28, 0x01	; 1
     7e2:	c3 30       	cpi	r28, 0x03	; 3
     7e4:	d1 05       	cpc	r29, r1
     7e6:	41 f7       	brne	.-48     	; 0x7b8 <_Z10Vector_AddPfS_S_+0x1e>
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	1f 91       	pop	r17
     7ee:	0f 91       	pop	r16
     7f0:	ff 90       	pop	r15
     7f2:	ef 90       	pop	r14
     7f4:	df 90       	pop	r13
     7f6:	cf 90       	pop	r12
     7f8:	08 95       	ret

000007fa <_Z8I2C_Initv>:
     7fa:	85 ef       	ldi	r24, 0xF5	; 245
     7fc:	9e e0       	ldi	r25, 0x0E	; 14
     7fe:	0c 94 79 1c 	jmp	0x38f2	; 0x38f2 <_ZN7TwoWire5beginEv>
     802:	08 95       	ret

00000804 <_Z9Gyro_Initv>:
     804:	42 e0       	ldi	r20, 0x02	; 2
     806:	63 e0       	ldi	r22, 0x03	; 3
     808:	82 e1       	ldi	r24, 0x12	; 18
     80a:	97 e0       	ldi	r25, 0x07	; 7
     80c:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE>
     810:	82 e1       	ldi	r24, 0x12	; 18
     812:	97 e0       	ldi	r25, 0x07	; 7
     814:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <_ZN3L3G13enableDefaultEv>
     818:	40 e2       	ldi	r20, 0x20	; 32
     81a:	63 e2       	ldi	r22, 0x23	; 35
     81c:	82 e1       	ldi	r24, 0x12	; 18
     81e:	97 e0       	ldi	r25, 0x07	; 7
     820:	0e 94 c4 0c 	call	0x1988	; 0x1988 <_ZN3L3G8writeRegEhh>
     824:	4f e0       	ldi	r20, 0x0F	; 15
     826:	60 e2       	ldi	r22, 0x20	; 32
     828:	82 e1       	ldi	r24, 0x12	; 18
     82a:	97 e0       	ldi	r25, 0x07	; 7
     82c:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <_ZN3L3G8writeRegEhh>
     830:	08 95       	ret

00000832 <_Z9Read_Gyrov>:
     832:	82 e1       	ldi	r24, 0x12	; 18
     834:	97 e0       	ldi	r25, 0x07	; 7
     836:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <_ZN3L3G4readEv>
     83a:	40 91 12 07 	lds	r20, 0x0712
     83e:	50 91 13 07 	lds	r21, 0x0713
     842:	50 93 df 07 	sts	0x07DF, r21
     846:	40 93 de 07 	sts	0x07DE, r20
     84a:	20 91 14 07 	lds	r18, 0x0714
     84e:	30 91 15 07 	lds	r19, 0x0715
     852:	30 93 e1 07 	sts	0x07E1, r19
     856:	20 93 e0 07 	sts	0x07E0, r18
     85a:	80 91 16 07 	lds	r24, 0x0716
     85e:	90 91 17 07 	lds	r25, 0x0717
     862:	90 93 e3 07 	sts	0x07E3, r25
     866:	80 93 e2 07 	sts	0x07E2, r24
     86a:	60 91 d2 07 	lds	r22, 0x07D2
     86e:	70 91 d3 07 	lds	r23, 0x07D3
     872:	46 1b       	sub	r20, r22
     874:	57 0b       	sbc	r21, r23
     876:	e0 91 4c 02 	lds	r30, 0x024C
     87a:	f0 91 4d 02 	lds	r31, 0x024D
     87e:	e4 9f       	mul	r30, r20
     880:	b0 01       	movw	r22, r0
     882:	e5 9f       	mul	r30, r21
     884:	70 0d       	add	r23, r0
     886:	f4 9f       	mul	r31, r20
     888:	70 0d       	add	r23, r0
     88a:	11 24       	eor	r1, r1
     88c:	70 93 d1 07 	sts	0x07D1, r23
     890:	60 93 d0 07 	sts	0x07D0, r22
     894:	40 91 d4 07 	lds	r20, 0x07D4
     898:	50 91 d5 07 	lds	r21, 0x07D5
     89c:	24 1b       	sub	r18, r20
     89e:	35 0b       	sbc	r19, r21
     8a0:	60 91 4e 02 	lds	r22, 0x024E
     8a4:	70 91 4f 02 	lds	r23, 0x024F
     8a8:	62 9f       	mul	r22, r18
     8aa:	a0 01       	movw	r20, r0
     8ac:	63 9f       	mul	r22, r19
     8ae:	50 0d       	add	r21, r0
     8b0:	72 9f       	mul	r23, r18
     8b2:	50 0d       	add	r21, r0
     8b4:	11 24       	eor	r1, r1
     8b6:	50 93 cf 07 	sts	0x07CF, r21
     8ba:	40 93 ce 07 	sts	0x07CE, r20
     8be:	20 91 d6 07 	lds	r18, 0x07D6
     8c2:	30 91 d7 07 	lds	r19, 0x07D7
     8c6:	82 1b       	sub	r24, r18
     8c8:	93 0b       	sbc	r25, r19
     8ca:	40 91 50 02 	lds	r20, 0x0250
     8ce:	50 91 51 02 	lds	r21, 0x0251
     8d2:	48 9f       	mul	r20, r24
     8d4:	90 01       	movw	r18, r0
     8d6:	49 9f       	mul	r20, r25
     8d8:	30 0d       	add	r19, r0
     8da:	58 9f       	mul	r21, r24
     8dc:	30 0d       	add	r19, r0
     8de:	11 24       	eor	r1, r1
     8e0:	30 93 cd 07 	sts	0x07CD, r19
     8e4:	20 93 cc 07 	sts	0x07CC, r18
     8e8:	08 95       	ret

000008ea <_Z10Accel_Initv>:
     8ea:	42 e0       	ldi	r20, 0x02	; 2
     8ec:	64 e0       	ldi	r22, 0x04	; 4
     8ee:	8c ee       	ldi	r24, 0xEC	; 236
     8f0:	96 e0       	ldi	r25, 0x06	; 6
     8f2:	0e 94 ca 13 	call	0x2794	; 0x2794 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE>
     8f6:	8c ee       	ldi	r24, 0xEC	; 236
     8f8:	96 e0       	ldi	r25, 0x06	; 6
     8fa:	0e 94 2d 12 	call	0x245a	; 0x245a <_ZN6LSM30313enableDefaultEv>
     8fe:	80 91 05 07 	lds	r24, 0x0705
     902:	82 30       	cpi	r24, 0x02	; 2
     904:	49 f0       	breq	.+18     	; 0x918 <_Z10Accel_Initv+0x2e>
     906:	83 30       	cpi	r24, 0x03	; 3
     908:	71 f4       	brne	.+28     	; 0x926 <_Z10Accel_Initv+0x3c>
     90a:	48 e1       	ldi	r20, 0x18	; 24
     90c:	61 e2       	ldi	r22, 0x21	; 33
     90e:	8c ee       	ldi	r24, 0xEC	; 236
     910:	96 e0       	ldi	r25, 0x06	; 6
     912:	0c 94 23 12 	jmp	0x2446	; 0x2446 <_ZN6LSM3038writeRegEhh>
     916:	08 95       	ret
     918:	48 e2       	ldi	r20, 0x28	; 40
     91a:	63 e2       	ldi	r22, 0x23	; 35
     91c:	8c ee       	ldi	r24, 0xEC	; 236
     91e:	96 e0       	ldi	r25, 0x06	; 6
     920:	0c 94 23 12 	jmp	0x2446	; 0x2446 <_ZN6LSM3038writeRegEhh>
     924:	08 95       	ret
     926:	40 e3       	ldi	r20, 0x30	; 48
     928:	63 e2       	ldi	r22, 0x23	; 35
     92a:	8c ee       	ldi	r24, 0xEC	; 236
     92c:	96 e0       	ldi	r25, 0x06	; 6
     92e:	0c 94 23 12 	jmp	0x2446	; 0x2446 <_ZN6LSM3038writeRegEhh>
     932:	08 95       	ret

00000934 <_Z10Read_Accelv>:
     934:	8c ee       	ldi	r24, 0xEC	; 236
     936:	96 e0       	ldi	r25, 0x06	; 6
     938:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <_ZN6LSM3037readAccEv>
     93c:	40 91 ec 06 	lds	r20, 0x06EC
     940:	50 91 ed 06 	lds	r21, 0x06ED
     944:	55 95       	asr	r21
     946:	47 95       	ror	r20
     948:	55 95       	asr	r21
     94a:	47 95       	ror	r20
     94c:	55 95       	asr	r21
     94e:	47 95       	ror	r20
     950:	55 95       	asr	r21
     952:	47 95       	ror	r20
     954:	50 93 e5 07 	sts	0x07E5, r21
     958:	40 93 e4 07 	sts	0x07E4, r20
     95c:	20 91 ee 06 	lds	r18, 0x06EE
     960:	30 91 ef 06 	lds	r19, 0x06EF
     964:	35 95       	asr	r19
     966:	27 95       	ror	r18
     968:	35 95       	asr	r19
     96a:	27 95       	ror	r18
     96c:	35 95       	asr	r19
     96e:	27 95       	ror	r18
     970:	35 95       	asr	r19
     972:	27 95       	ror	r18
     974:	30 93 e7 07 	sts	0x07E7, r19
     978:	20 93 e6 07 	sts	0x07E6, r18
     97c:	80 91 f0 06 	lds	r24, 0x06F0
     980:	90 91 f1 06 	lds	r25, 0x06F1
     984:	95 95       	asr	r25
     986:	87 95       	ror	r24
     988:	95 95       	asr	r25
     98a:	87 95       	ror	r24
     98c:	95 95       	asr	r25
     98e:	87 95       	ror	r24
     990:	95 95       	asr	r25
     992:	87 95       	ror	r24
     994:	90 93 e9 07 	sts	0x07E9, r25
     998:	80 93 e8 07 	sts	0x07E8, r24
     99c:	60 91 d8 07 	lds	r22, 0x07D8
     9a0:	70 91 d9 07 	lds	r23, 0x07D9
     9a4:	46 1b       	sub	r20, r22
     9a6:	57 0b       	sbc	r21, r23
     9a8:	e0 91 52 02 	lds	r30, 0x0252
     9ac:	f0 91 53 02 	lds	r31, 0x0253
     9b0:	e4 9f       	mul	r30, r20
     9b2:	b0 01       	movw	r22, r0
     9b4:	e5 9f       	mul	r30, r21
     9b6:	70 0d       	add	r23, r0
     9b8:	f4 9f       	mul	r31, r20
     9ba:	70 0d       	add	r23, r0
     9bc:	11 24       	eor	r1, r1
     9be:	70 93 cb 07 	sts	0x07CB, r23
     9c2:	60 93 ca 07 	sts	0x07CA, r22
     9c6:	40 91 da 07 	lds	r20, 0x07DA
     9ca:	50 91 db 07 	lds	r21, 0x07DB
     9ce:	24 1b       	sub	r18, r20
     9d0:	35 0b       	sbc	r19, r21
     9d2:	60 91 54 02 	lds	r22, 0x0254
     9d6:	70 91 55 02 	lds	r23, 0x0255
     9da:	62 9f       	mul	r22, r18
     9dc:	a0 01       	movw	r20, r0
     9de:	63 9f       	mul	r22, r19
     9e0:	50 0d       	add	r21, r0
     9e2:	72 9f       	mul	r23, r18
     9e4:	50 0d       	add	r21, r0
     9e6:	11 24       	eor	r1, r1
     9e8:	50 93 c9 07 	sts	0x07C9, r21
     9ec:	40 93 c8 07 	sts	0x07C8, r20
     9f0:	20 91 dc 07 	lds	r18, 0x07DC
     9f4:	30 91 dd 07 	lds	r19, 0x07DD
     9f8:	82 1b       	sub	r24, r18
     9fa:	93 0b       	sbc	r25, r19
     9fc:	40 91 56 02 	lds	r20, 0x0256
     a00:	50 91 57 02 	lds	r21, 0x0257
     a04:	48 9f       	mul	r20, r24
     a06:	90 01       	movw	r18, r0
     a08:	49 9f       	mul	r20, r25
     a0a:	30 0d       	add	r19, r0
     a0c:	58 9f       	mul	r21, r24
     a0e:	30 0d       	add	r19, r0
     a10:	11 24       	eor	r1, r1
     a12:	30 93 c7 07 	sts	0x07C7, r19
     a16:	20 93 c6 07 	sts	0x07C6, r18
     a1a:	08 95       	ret

00000a1c <_Z12Read_Compassv>:
     a1c:	8c ee       	ldi	r24, 0xEC	; 236
     a1e:	96 e0       	ldi	r25, 0x06	; 6
     a20:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZN6LSM3037readMagEv>
     a24:	40 91 58 02 	lds	r20, 0x0258
     a28:	50 91 59 02 	lds	r21, 0x0259
     a2c:	20 91 f2 06 	lds	r18, 0x06F2
     a30:	30 91 f3 06 	lds	r19, 0x06F3
     a34:	42 9f       	mul	r20, r18
     a36:	c0 01       	movw	r24, r0
     a38:	43 9f       	mul	r20, r19
     a3a:	90 0d       	add	r25, r0
     a3c:	52 9f       	mul	r21, r18
     a3e:	90 0d       	add	r25, r0
     a40:	11 24       	eor	r1, r1
     a42:	90 93 c5 07 	sts	0x07C5, r25
     a46:	80 93 c4 07 	sts	0x07C4, r24
     a4a:	40 91 5a 02 	lds	r20, 0x025A
     a4e:	50 91 5b 02 	lds	r21, 0x025B
     a52:	20 91 f4 06 	lds	r18, 0x06F4
     a56:	30 91 f5 06 	lds	r19, 0x06F5
     a5a:	42 9f       	mul	r20, r18
     a5c:	c0 01       	movw	r24, r0
     a5e:	43 9f       	mul	r20, r19
     a60:	90 0d       	add	r25, r0
     a62:	52 9f       	mul	r21, r18
     a64:	90 0d       	add	r25, r0
     a66:	11 24       	eor	r1, r1
     a68:	90 93 c3 07 	sts	0x07C3, r25
     a6c:	80 93 c2 07 	sts	0x07C2, r24
     a70:	40 91 5c 02 	lds	r20, 0x025C
     a74:	50 91 5d 02 	lds	r21, 0x025D
     a78:	20 91 f6 06 	lds	r18, 0x06F6
     a7c:	30 91 f7 06 	lds	r19, 0x06F7
     a80:	42 9f       	mul	r20, r18
     a82:	c0 01       	movw	r24, r0
     a84:	43 9f       	mul	r20, r19
     a86:	90 0d       	add	r25, r0
     a88:	52 9f       	mul	r21, r18
     a8a:	90 0d       	add	r25, r0
     a8c:	11 24       	eor	r1, r1
     a8e:	90 93 c1 07 	sts	0x07C1, r25
     a92:	80 93 c0 07 	sts	0x07C0, r24
     a96:	08 95       	ret

00000a98 <_Z9Normalizev>:
     a98:	cf 92       	push	r12
     a9a:	df 92       	push	r13
     a9c:	ef 92       	push	r14
     a9e:	ff 92       	push	r15
     aa0:	cf 93       	push	r28
     aa2:	df 93       	push	r29
     aa4:	cd b7       	in	r28, 0x3d	; 61
     aa6:	de b7       	in	r29, 0x3e	; 62
     aa8:	a4 97       	sbiw	r28, 0x24	; 36
     aaa:	0f b6       	in	r0, 0x3f	; 63
     aac:	f8 94       	cli
     aae:	de bf       	out	0x3e, r29	; 62
     ab0:	0f be       	out	0x3f, r0	; 63
     ab2:	cd bf       	out	0x3d, r28	; 61
     ab4:	60 e3       	ldi	r22, 0x30	; 48
     ab6:	72 e0       	ldi	r23, 0x02	; 2
     ab8:	84 e2       	ldi	r24, 0x24	; 36
     aba:	92 e0       	ldi	r25, 0x02	; 2
     abc:	87 dd       	rcall	.-1266   	; 0x5cc <_Z18Vector_Dot_ProductPfS_>
     abe:	90 58       	subi	r25, 0x80	; 128
     ac0:	20 e0       	ldi	r18, 0x00	; 0
     ac2:	30 e0       	ldi	r19, 0x00	; 0
     ac4:	40 e0       	ldi	r20, 0x00	; 0
     ac6:	5f e3       	ldi	r21, 0x3F	; 63
     ac8:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     acc:	6b 01       	movw	r12, r22
     ace:	7c 01       	movw	r14, r24
     ad0:	9b 01       	movw	r18, r22
     ad2:	ac 01       	movw	r20, r24
     ad4:	60 e3       	ldi	r22, 0x30	; 48
     ad6:	72 e0       	ldi	r23, 0x02	; 2
     ad8:	ce 01       	movw	r24, r28
     ada:	01 96       	adiw	r24, 0x01	; 1
     adc:	2e de       	rcall	.-932    	; 0x73a <_Z12Vector_ScalePfS_f>
     ade:	a7 01       	movw	r20, r14
     ae0:	96 01       	movw	r18, r12
     ae2:	64 e2       	ldi	r22, 0x24	; 36
     ae4:	72 e0       	ldi	r23, 0x02	; 2
     ae6:	ce 01       	movw	r24, r28
     ae8:	0d 96       	adiw	r24, 0x0d	; 13
     aea:	27 de       	rcall	.-946    	; 0x73a <_Z12Vector_ScalePfS_f>
     aec:	44 e2       	ldi	r20, 0x24	; 36
     aee:	52 e0       	ldi	r21, 0x02	; 2
     af0:	be 01       	movw	r22, r28
     af2:	6f 5f       	subi	r22, 0xFF	; 255
     af4:	7f 4f       	sbci	r23, 0xFF	; 255
     af6:	cb 01       	movw	r24, r22
     af8:	50 de       	rcall	.-864    	; 0x79a <_Z10Vector_AddPfS_S_>
     afa:	40 e3       	ldi	r20, 0x30	; 48
     afc:	52 e0       	ldi	r21, 0x02	; 2
     afe:	be 01       	movw	r22, r28
     b00:	63 5f       	subi	r22, 0xF3	; 243
     b02:	7f 4f       	sbci	r23, 0xFF	; 255
     b04:	cb 01       	movw	r24, r22
     b06:	49 de       	rcall	.-878    	; 0x79a <_Z10Vector_AddPfS_S_>
     b08:	ae 01       	movw	r20, r28
     b0a:	43 5f       	subi	r20, 0xF3	; 243
     b0c:	5f 4f       	sbci	r21, 0xFF	; 255
     b0e:	be 01       	movw	r22, r28
     b10:	6f 5f       	subi	r22, 0xFF	; 255
     b12:	7f 4f       	sbci	r23, 0xFF	; 255
     b14:	ce 01       	movw	r24, r28
     b16:	49 96       	adiw	r24, 0x19	; 25
     b18:	8f dd       	rcall	.-1250   	; 0x638 <_Z20Vector_Cross_ProductPfS_S_>
     b1a:	be 01       	movw	r22, r28
     b1c:	6f 5f       	subi	r22, 0xFF	; 255
     b1e:	7f 4f       	sbci	r23, 0xFF	; 255
     b20:	cb 01       	movw	r24, r22
     b22:	54 dd       	rcall	.-1368   	; 0x5cc <_Z18Vector_Dot_ProductPfS_>
     b24:	9b 01       	movw	r18, r22
     b26:	ac 01       	movw	r20, r24
     b28:	60 e0       	ldi	r22, 0x00	; 0
     b2a:	70 e0       	ldi	r23, 0x00	; 0
     b2c:	80 e4       	ldi	r24, 0x40	; 64
     b2e:	90 e4       	ldi	r25, 0x40	; 64
     b30:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     b34:	20 e0       	ldi	r18, 0x00	; 0
     b36:	30 e0       	ldi	r19, 0x00	; 0
     b38:	40 e0       	ldi	r20, 0x00	; 0
     b3a:	5f e3       	ldi	r21, 0x3F	; 63
     b3c:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     b40:	9b 01       	movw	r18, r22
     b42:	ac 01       	movw	r20, r24
     b44:	be 01       	movw	r22, r28
     b46:	6f 5f       	subi	r22, 0xFF	; 255
     b48:	7f 4f       	sbci	r23, 0xFF	; 255
     b4a:	84 e2       	ldi	r24, 0x24	; 36
     b4c:	92 e0       	ldi	r25, 0x02	; 2
     b4e:	f5 dd       	rcall	.-1046   	; 0x73a <_Z12Vector_ScalePfS_f>
     b50:	be 01       	movw	r22, r28
     b52:	63 5f       	subi	r22, 0xF3	; 243
     b54:	7f 4f       	sbci	r23, 0xFF	; 255
     b56:	cb 01       	movw	r24, r22
     b58:	39 dd       	rcall	.-1422   	; 0x5cc <_Z18Vector_Dot_ProductPfS_>
     b5a:	9b 01       	movw	r18, r22
     b5c:	ac 01       	movw	r20, r24
     b5e:	60 e0       	ldi	r22, 0x00	; 0
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	80 e4       	ldi	r24, 0x40	; 64
     b64:	90 e4       	ldi	r25, 0x40	; 64
     b66:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     b6a:	20 e0       	ldi	r18, 0x00	; 0
     b6c:	30 e0       	ldi	r19, 0x00	; 0
     b6e:	40 e0       	ldi	r20, 0x00	; 0
     b70:	5f e3       	ldi	r21, 0x3F	; 63
     b72:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     b76:	9b 01       	movw	r18, r22
     b78:	ac 01       	movw	r20, r24
     b7a:	be 01       	movw	r22, r28
     b7c:	63 5f       	subi	r22, 0xF3	; 243
     b7e:	7f 4f       	sbci	r23, 0xFF	; 255
     b80:	80 e3       	ldi	r24, 0x30	; 48
     b82:	92 e0       	ldi	r25, 0x02	; 2
     b84:	da dd       	rcall	.-1100   	; 0x73a <_Z12Vector_ScalePfS_f>
     b86:	be 01       	movw	r22, r28
     b88:	67 5e       	subi	r22, 0xE7	; 231
     b8a:	7f 4f       	sbci	r23, 0xFF	; 255
     b8c:	cb 01       	movw	r24, r22
     b8e:	1e dd       	rcall	.-1476   	; 0x5cc <_Z18Vector_Dot_ProductPfS_>
     b90:	9b 01       	movw	r18, r22
     b92:	ac 01       	movw	r20, r24
     b94:	60 e0       	ldi	r22, 0x00	; 0
     b96:	70 e0       	ldi	r23, 0x00	; 0
     b98:	80 e4       	ldi	r24, 0x40	; 64
     b9a:	90 e4       	ldi	r25, 0x40	; 64
     b9c:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     ba0:	20 e0       	ldi	r18, 0x00	; 0
     ba2:	30 e0       	ldi	r19, 0x00	; 0
     ba4:	40 e0       	ldi	r20, 0x00	; 0
     ba6:	5f e3       	ldi	r21, 0x3F	; 63
     ba8:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     bac:	9b 01       	movw	r18, r22
     bae:	ac 01       	movw	r20, r24
     bb0:	be 01       	movw	r22, r28
     bb2:	67 5e       	subi	r22, 0xE7	; 231
     bb4:	7f 4f       	sbci	r23, 0xFF	; 255
     bb6:	8c e3       	ldi	r24, 0x3C	; 60
     bb8:	92 e0       	ldi	r25, 0x02	; 2
     bba:	bf dd       	rcall	.-1154   	; 0x73a <_Z12Vector_ScalePfS_f>
     bbc:	a4 96       	adiw	r28, 0x24	; 36
     bbe:	0f b6       	in	r0, 0x3f	; 63
     bc0:	f8 94       	cli
     bc2:	de bf       	out	0x3e, r29	; 62
     bc4:	0f be       	out	0x3f, r0	; 63
     bc6:	cd bf       	out	0x3d, r28	; 61
     bc8:	df 91       	pop	r29
     bca:	cf 91       	pop	r28
     bcc:	ff 90       	pop	r15
     bce:	ef 90       	pop	r14
     bd0:	df 90       	pop	r13
     bd2:	cf 90       	pop	r12
     bd4:	08 95       	ret

00000bd6 <_Z16Drift_correctionv>:
     bd6:	4f 92       	push	r4
     bd8:	5f 92       	push	r5
     bda:	6f 92       	push	r6
     bdc:	7f 92       	push	r7
     bde:	8f 92       	push	r8
     be0:	9f 92       	push	r9
     be2:	af 92       	push	r10
     be4:	bf 92       	push	r11
     be6:	cf 92       	push	r12
     be8:	df 92       	push	r13
     bea:	ef 92       	push	r14
     bec:	ff 92       	push	r15
     bee:	60 91 a4 07 	lds	r22, 0x07A4
     bf2:	70 91 a5 07 	lds	r23, 0x07A5
     bf6:	80 91 a6 07 	lds	r24, 0x07A6
     bfa:	90 91 a7 07 	lds	r25, 0x07A7
     bfe:	80 90 a8 07 	lds	r8, 0x07A8
     c02:	90 90 a9 07 	lds	r9, 0x07A9
     c06:	a0 90 aa 07 	lds	r10, 0x07AA
     c0a:	b0 90 ab 07 	lds	r11, 0x07AB
     c0e:	c0 90 ac 07 	lds	r12, 0x07AC
     c12:	d0 90 ad 07 	lds	r13, 0x07AD
     c16:	e0 90 ae 07 	lds	r14, 0x07AE
     c1a:	f0 90 af 07 	lds	r15, 0x07AF
     c1e:	9b 01       	movw	r18, r22
     c20:	ac 01       	movw	r20, r24
     c22:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     c26:	2b 01       	movw	r4, r22
     c28:	3c 01       	movw	r6, r24
     c2a:	a5 01       	movw	r20, r10
     c2c:	94 01       	movw	r18, r8
     c2e:	c5 01       	movw	r24, r10
     c30:	b4 01       	movw	r22, r8
     c32:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     c36:	9b 01       	movw	r18, r22
     c38:	ac 01       	movw	r20, r24
     c3a:	c3 01       	movw	r24, r6
     c3c:	b2 01       	movw	r22, r4
     c3e:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     c42:	4b 01       	movw	r8, r22
     c44:	5c 01       	movw	r10, r24
     c46:	a7 01       	movw	r20, r14
     c48:	96 01       	movw	r18, r12
     c4a:	c7 01       	movw	r24, r14
     c4c:	b6 01       	movw	r22, r12
     c4e:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     c52:	9b 01       	movw	r18, r22
     c54:	ac 01       	movw	r20, r24
     c56:	c5 01       	movw	r24, r10
     c58:	b4 01       	movw	r22, r8
     c5a:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     c5e:	0e 94 b6 1f 	call	0x3f6c	; 0x3f6c <sqrt>
     c62:	20 e0       	ldi	r18, 0x00	; 0
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	40 e8       	ldi	r20, 0x80	; 128
     c68:	5b e3       	ldi	r21, 0x3B	; 59
     c6a:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     c6e:	9b 01       	movw	r18, r22
     c70:	ac 01       	movw	r20, r24
     c72:	60 e0       	ldi	r22, 0x00	; 0
     c74:	70 e0       	ldi	r23, 0x00	; 0
     c76:	80 e8       	ldi	r24, 0x80	; 128
     c78:	9f e3       	ldi	r25, 0x3F	; 63
     c7a:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     c7e:	6b 01       	movw	r12, r22
     c80:	7c 01       	movw	r14, r24
     c82:	20 e0       	ldi	r18, 0x00	; 0
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	a9 01       	movw	r20, r18
     c88:	0e 94 3e 1f 	call	0x3e7c	; 0x3e7c <__gesf2>
     c8c:	18 16       	cp	r1, r24
     c8e:	b4 f4       	brge	.+44     	; 0xcbc <_Z16Drift_correctionv+0xe6>
     c90:	a7 01       	movw	r20, r14
     c92:	96 01       	movw	r18, r12
     c94:	c7 01       	movw	r24, r14
     c96:	b6 01       	movw	r22, r12
     c98:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     c9c:	9b 01       	movw	r18, r22
     c9e:	ac 01       	movw	r20, r24
     ca0:	60 e0       	ldi	r22, 0x00	; 0
     ca2:	70 e0       	ldi	r23, 0x00	; 0
     ca4:	80 e8       	ldi	r24, 0x80	; 128
     ca6:	9f e3       	ldi	r25, 0x3F	; 63
     ca8:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     cac:	20 e0       	ldi	r18, 0x00	; 0
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	a9 01       	movw	r20, r18
     cb2:	0e 94 93 1d 	call	0x3b26	; 0x3b26 <__cmpsf2>
     cb6:	88 23       	and	r24, r24
     cb8:	04 f5       	brge	.+64     	; 0xcfa <_Z16Drift_correctionv+0x124>
     cba:	5a c0       	rjmp	.+180    	; 0xd70 <_Z16Drift_correctionv+0x19a>
     cbc:	a7 01       	movw	r20, r14
     cbe:	96 01       	movw	r18, r12
     cc0:	c7 01       	movw	r24, r14
     cc2:	b6 01       	movw	r22, r12
     cc4:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     cc8:	20 e0       	ldi	r18, 0x00	; 0
     cca:	30 e0       	ldi	r19, 0x00	; 0
     ccc:	40 e8       	ldi	r20, 0x80	; 128
     cce:	5f e3       	ldi	r21, 0x3F	; 63
     cd0:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     cd4:	4b 01       	movw	r8, r22
     cd6:	5c 01       	movw	r10, r24
     cd8:	20 e0       	ldi	r18, 0x00	; 0
     cda:	30 e0       	ldi	r19, 0x00	; 0
     cdc:	a9 01       	movw	r20, r18
     cde:	0e 94 93 1d 	call	0x3b26	; 0x3b26 <__cmpsf2>
     ce2:	88 23       	and	r24, r24
     ce4:	0c f4       	brge	.+2      	; 0xce8 <_Z16Drift_correctionv+0x112>
     ce6:	48 c0       	rjmp	.+144    	; 0xd78 <_Z16Drift_correctionv+0x1a2>
     ce8:	20 e0       	ldi	r18, 0x00	; 0
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	a9 01       	movw	r20, r18
     cee:	c7 01       	movw	r24, r14
     cf0:	b6 01       	movw	r22, r12
     cf2:	0e 94 3e 1f 	call	0x3e7c	; 0x3e7c <__gesf2>
     cf6:	18 16       	cp	r1, r24
     cf8:	bc f4       	brge	.+46     	; 0xd28 <_Z16Drift_correctionv+0x152>
     cfa:	a7 01       	movw	r20, r14
     cfc:	96 01       	movw	r18, r12
     cfe:	c7 01       	movw	r24, r14
     d00:	b6 01       	movw	r22, r12
     d02:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     d06:	9b 01       	movw	r18, r22
     d08:	ac 01       	movw	r20, r24
     d0a:	60 e0       	ldi	r22, 0x00	; 0
     d0c:	70 e0       	ldi	r23, 0x00	; 0
     d0e:	80 e8       	ldi	r24, 0x80	; 128
     d10:	9f e3       	ldi	r25, 0x3F	; 63
     d12:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     d16:	20 e0       	ldi	r18, 0x00	; 0
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	40 e8       	ldi	r20, 0x80	; 128
     d1c:	5f e3       	ldi	r21, 0x3F	; 63
     d1e:	0e 94 3e 1f 	call	0x3e7c	; 0x3e7c <__gesf2>
     d22:	18 16       	cp	r1, r24
     d24:	6c f1       	brlt	.+90     	; 0xd80 <_Z16Drift_correctionv+0x1aa>
     d26:	13 c0       	rjmp	.+38     	; 0xd4e <_Z16Drift_correctionv+0x178>
     d28:	20 e0       	ldi	r18, 0x00	; 0
     d2a:	30 e0       	ldi	r19, 0x00	; 0
     d2c:	40 e8       	ldi	r20, 0x80	; 128
     d2e:	5f e3       	ldi	r21, 0x3F	; 63
     d30:	c5 01       	movw	r24, r10
     d32:	b4 01       	movw	r22, r8
     d34:	0e 94 3e 1f 	call	0x3e7c	; 0x3e7c <__gesf2>
     d38:	18 16       	cp	r1, r24
     d3a:	5c f1       	brlt	.+86     	; 0xd92 <_Z16Drift_correctionv+0x1bc>
     d3c:	20 e0       	ldi	r18, 0x00	; 0
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	a9 01       	movw	r20, r18
     d42:	c7 01       	movw	r24, r14
     d44:	b6 01       	movw	r22, r12
     d46:	0e 94 3e 1f 	call	0x3e7c	; 0x3e7c <__gesf2>
     d4a:	18 16       	cp	r1, r24
     d4c:	54 f5       	brge	.+84     	; 0xda2 <_Z16Drift_correctionv+0x1cc>
     d4e:	a7 01       	movw	r20, r14
     d50:	96 01       	movw	r18, r12
     d52:	c7 01       	movw	r24, r14
     d54:	b6 01       	movw	r22, r12
     d56:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
     d5a:	9b 01       	movw	r18, r22
     d5c:	ac 01       	movw	r20, r24
     d5e:	60 e0       	ldi	r22, 0x00	; 0
     d60:	70 e0       	ldi	r23, 0x00	; 0
     d62:	80 e8       	ldi	r24, 0x80	; 128
     d64:	9f e3       	ldi	r25, 0x3F	; 63
     d66:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     d6a:	4b 01       	movw	r8, r22
     d6c:	5c 01       	movw	r10, r24
     d6e:	19 c0       	rjmp	.+50     	; 0xda2 <_Z16Drift_correctionv+0x1cc>
     d70:	81 2c       	mov	r8, r1
     d72:	91 2c       	mov	r9, r1
     d74:	54 01       	movw	r10, r8
     d76:	15 c0       	rjmp	.+42     	; 0xda2 <_Z16Drift_correctionv+0x1cc>
     d78:	81 2c       	mov	r8, r1
     d7a:	91 2c       	mov	r9, r1
     d7c:	54 01       	movw	r10, r8
     d7e:	11 c0       	rjmp	.+34     	; 0xda2 <_Z16Drift_correctionv+0x1cc>
     d80:	0f 2e       	mov	r0, r31
     d82:	81 2c       	mov	r8, r1
     d84:	91 2c       	mov	r9, r1
     d86:	f0 e8       	ldi	r31, 0x80	; 128
     d88:	af 2e       	mov	r10, r31
     d8a:	ff e3       	ldi	r31, 0x3F	; 63
     d8c:	bf 2e       	mov	r11, r31
     d8e:	f0 2d       	mov	r31, r0
     d90:	08 c0       	rjmp	.+16     	; 0xda2 <_Z16Drift_correctionv+0x1cc>
     d92:	0f 2e       	mov	r0, r31
     d94:	81 2c       	mov	r8, r1
     d96:	91 2c       	mov	r9, r1
     d98:	f0 e8       	ldi	r31, 0x80	; 128
     d9a:	af 2e       	mov	r10, r31
     d9c:	ff e3       	ldi	r31, 0x3F	; 63
     d9e:	bf 2e       	mov	r11, r31
     da0:	f0 2d       	mov	r31, r0
     da2:	4c e3       	ldi	r20, 0x3C	; 60
     da4:	52 e0       	ldi	r21, 0x02	; 2
     da6:	64 ea       	ldi	r22, 0xA4	; 164
     da8:	77 e0       	ldi	r23, 0x07	; 7
     daa:	80 e5       	ldi	r24, 0x50	; 80
     dac:	97 e0       	ldi	r25, 0x07	; 7
     dae:	44 dc       	rcall	.-1912   	; 0x638 <_Z20Vector_Cross_ProductPfS_S_>
     db0:	2a e0       	ldi	r18, 0x0A	; 10
     db2:	37 ed       	ldi	r19, 0xD7	; 215
     db4:	43 ea       	ldi	r20, 0xA3	; 163
     db6:	5c e3       	ldi	r21, 0x3C	; 60
     db8:	c5 01       	movw	r24, r10
     dba:	b4 01       	movw	r22, r8
     dbc:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     dc0:	9b 01       	movw	r18, r22
     dc2:	ac 01       	movw	r20, r24
     dc4:	60 e5       	ldi	r22, 0x50	; 80
     dc6:	77 e0       	ldi	r23, 0x07	; 7
     dc8:	80 e8       	ldi	r24, 0x80	; 128
     dca:	97 e0       	ldi	r25, 0x07	; 7
     dcc:	b6 dc       	rcall	.-1684   	; 0x73a <_Z12Vector_ScalePfS_f>
     dce:	2c ea       	ldi	r18, 0xAC	; 172
     dd0:	35 ec       	ldi	r19, 0xC5	; 197
     dd2:	47 ea       	ldi	r20, 0xA7	; 167
     dd4:	57 e3       	ldi	r21, 0x37	; 55
     dd6:	c5 01       	movw	r24, r10
     dd8:	b4 01       	movw	r22, r8
     dda:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     dde:	9b 01       	movw	r18, r22
     de0:	ac 01       	movw	r20, r24
     de2:	60 e5       	ldi	r22, 0x50	; 80
     de4:	77 e0       	ldi	r23, 0x07	; 7
     de6:	80 ee       	ldi	r24, 0xE0	; 224
     de8:	92 e0       	ldi	r25, 0x02	; 2
     dea:	a7 dc       	rcall	.-1714   	; 0x73a <_Z12Vector_ScalePfS_f>
     dec:	40 ee       	ldi	r20, 0xE0	; 224
     dee:	52 e0       	ldi	r21, 0x02	; 2
     df0:	64 e7       	ldi	r22, 0x74	; 116
     df2:	77 e0       	ldi	r23, 0x07	; 7
     df4:	cb 01       	movw	r24, r22
     df6:	d1 dc       	rcall	.-1630   	; 0x79a <_Z10Vector_AddPfS_S_>
     df8:	c0 90 b0 07 	lds	r12, 0x07B0
     dfc:	d0 90 b1 07 	lds	r13, 0x07B1
     e00:	e0 90 b2 07 	lds	r14, 0x07B2
     e04:	f0 90 b3 07 	lds	r15, 0x07B3
     e08:	c7 01       	movw	r24, r14
     e0a:	b6 01       	movw	r22, r12
     e0c:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <cos>
     e10:	4b 01       	movw	r8, r22
     e12:	5c 01       	movw	r10, r24
     e14:	c7 01       	movw	r24, r14
     e16:	b6 01       	movw	r22, r12
     e18:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <sin>
     e1c:	20 91 24 02 	lds	r18, 0x0224
     e20:	30 91 25 02 	lds	r19, 0x0225
     e24:	40 91 26 02 	lds	r20, 0x0226
     e28:	50 91 27 02 	lds	r21, 0x0227
     e2c:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     e30:	6b 01       	movw	r12, r22
     e32:	7c 01       	movw	r14, r24
     e34:	20 91 30 02 	lds	r18, 0x0230
     e38:	30 91 31 02 	lds	r19, 0x0231
     e3c:	40 91 32 02 	lds	r20, 0x0232
     e40:	50 91 33 02 	lds	r21, 0x0233
     e44:	c5 01       	movw	r24, r10
     e46:	b4 01       	movw	r22, r8
     e48:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     e4c:	9b 01       	movw	r18, r22
     e4e:	ac 01       	movw	r20, r24
     e50:	c7 01       	movw	r24, r14
     e52:	b6 01       	movw	r22, r12
     e54:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
     e58:	9b 01       	movw	r18, r22
     e5a:	ac 01       	movw	r20, r24
     e5c:	6c e3       	ldi	r22, 0x3C	; 60
     e5e:	72 e0       	ldi	r23, 0x02	; 2
     e60:	84 e4       	ldi	r24, 0x44	; 68
     e62:	97 e0       	ldi	r25, 0x07	; 7
     e64:	6a dc       	rcall	.-1836   	; 0x73a <_Z12Vector_ScalePfS_f>
     e66:	2a e9       	ldi	r18, 0x9A	; 154
     e68:	39 e9       	ldi	r19, 0x99	; 153
     e6a:	49 e9       	ldi	r20, 0x99	; 153
     e6c:	5f e3       	ldi	r21, 0x3F	; 63
     e6e:	64 e4       	ldi	r22, 0x44	; 68
     e70:	77 e0       	ldi	r23, 0x07	; 7
     e72:	84 ed       	ldi	r24, 0xD4	; 212
     e74:	92 e0       	ldi	r25, 0x02	; 2
     e76:	61 dc       	rcall	.-1854   	; 0x73a <_Z12Vector_ScalePfS_f>
     e78:	44 ed       	ldi	r20, 0xD4	; 212
     e7a:	52 e0       	ldi	r21, 0x02	; 2
     e7c:	60 e8       	ldi	r22, 0x80	; 128
     e7e:	77 e0       	ldi	r23, 0x07	; 7
     e80:	cb 01       	movw	r24, r22
     e82:	8b dc       	rcall	.-1770   	; 0x79a <_Z10Vector_AddPfS_S_>
     e84:	2c ea       	ldi	r18, 0xAC	; 172
     e86:	35 ec       	ldi	r19, 0xC5	; 197
     e88:	47 ea       	ldi	r20, 0xA7	; 167
     e8a:	57 e3       	ldi	r21, 0x37	; 55
     e8c:	64 e4       	ldi	r22, 0x44	; 68
     e8e:	77 e0       	ldi	r23, 0x07	; 7
     e90:	80 ee       	ldi	r24, 0xE0	; 224
     e92:	92 e0       	ldi	r25, 0x02	; 2
     e94:	52 dc       	rcall	.-1884   	; 0x73a <_Z12Vector_ScalePfS_f>
     e96:	40 ee       	ldi	r20, 0xE0	; 224
     e98:	52 e0       	ldi	r21, 0x02	; 2
     e9a:	64 e7       	ldi	r22, 0x74	; 116
     e9c:	77 e0       	ldi	r23, 0x07	; 7
     e9e:	cb 01       	movw	r24, r22
     ea0:	7c dc       	rcall	.-1800   	; 0x79a <_Z10Vector_AddPfS_S_>
     ea2:	ff 90       	pop	r15
     ea4:	ef 90       	pop	r14
     ea6:	df 90       	pop	r13
     ea8:	cf 90       	pop	r12
     eaa:	bf 90       	pop	r11
     eac:	af 90       	pop	r10
     eae:	9f 90       	pop	r9
     eb0:	8f 90       	pop	r8
     eb2:	7f 90       	pop	r7
     eb4:	6f 90       	pop	r6
     eb6:	5f 90       	pop	r5
     eb8:	4f 90       	pop	r4
     eba:	08 95       	ret

00000ebc <_Z13Matrix_updatev>:
     ebc:	4f 92       	push	r4
     ebe:	5f 92       	push	r5
     ec0:	6f 92       	push	r6
     ec2:	7f 92       	push	r7
     ec4:	8f 92       	push	r8
     ec6:	9f 92       	push	r9
     ec8:	af 92       	push	r10
     eca:	bf 92       	push	r11
     ecc:	cf 92       	push	r12
     ece:	df 92       	push	r13
     ed0:	ef 92       	push	r14
     ed2:	ff 92       	push	r15
     ed4:	0f 93       	push	r16
     ed6:	1f 93       	push	r17
     ed8:	cf 93       	push	r28
     eda:	df 93       	push	r29
     edc:	00 d0       	rcall	.+0      	; 0xede <_Z13Matrix_updatev+0x22>
     ede:	1f 92       	push	r1
     ee0:	cd b7       	in	r28, 0x3d	; 61
     ee2:	de b7       	in	r29, 0x3e	; 62
     ee4:	60 91 d0 07 	lds	r22, 0x07D0
     ee8:	70 91 d1 07 	lds	r23, 0x07D1
     eec:	88 27       	eor	r24, r24
     eee:	77 fd       	sbrc	r23, 7
     ef0:	80 95       	com	r24
     ef2:	98 2f       	mov	r25, r24
     ef4:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
     ef8:	29 e7       	ldi	r18, 0x79	; 121
     efa:	32 e2       	ldi	r19, 0x22	; 34
     efc:	40 ea       	ldi	r20, 0xA0	; 160
     efe:	5a e3       	ldi	r21, 0x3A	; 58
     f00:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     f04:	60 93 98 07 	sts	0x0798, r22
     f08:	70 93 99 07 	sts	0x0799, r23
     f0c:	80 93 9a 07 	sts	0x079A, r24
     f10:	90 93 9b 07 	sts	0x079B, r25
     f14:	60 91 ce 07 	lds	r22, 0x07CE
     f18:	70 91 cf 07 	lds	r23, 0x07CF
     f1c:	88 27       	eor	r24, r24
     f1e:	77 fd       	sbrc	r23, 7
     f20:	80 95       	com	r24
     f22:	98 2f       	mov	r25, r24
     f24:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
     f28:	29 e7       	ldi	r18, 0x79	; 121
     f2a:	32 e2       	ldi	r19, 0x22	; 34
     f2c:	40 ea       	ldi	r20, 0xA0	; 160
     f2e:	5a e3       	ldi	r21, 0x3A	; 58
     f30:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     f34:	60 93 9c 07 	sts	0x079C, r22
     f38:	70 93 9d 07 	sts	0x079D, r23
     f3c:	80 93 9e 07 	sts	0x079E, r24
     f40:	90 93 9f 07 	sts	0x079F, r25
     f44:	60 91 cc 07 	lds	r22, 0x07CC
     f48:	70 91 cd 07 	lds	r23, 0x07CD
     f4c:	88 27       	eor	r24, r24
     f4e:	77 fd       	sbrc	r23, 7
     f50:	80 95       	com	r24
     f52:	98 2f       	mov	r25, r24
     f54:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
     f58:	29 e7       	ldi	r18, 0x79	; 121
     f5a:	32 e2       	ldi	r19, 0x22	; 34
     f5c:	40 ea       	ldi	r20, 0xA0	; 160
     f5e:	5a e3       	ldi	r21, 0x3A	; 58
     f60:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
     f64:	60 93 a0 07 	sts	0x07A0, r22
     f68:	70 93 a1 07 	sts	0x07A1, r23
     f6c:	80 93 a2 07 	sts	0x07A2, r24
     f70:	90 93 a3 07 	sts	0x07A3, r25
     f74:	60 91 ca 07 	lds	r22, 0x07CA
     f78:	70 91 cb 07 	lds	r23, 0x07CB
     f7c:	88 27       	eor	r24, r24
     f7e:	77 fd       	sbrc	r23, 7
     f80:	80 95       	com	r24
     f82:	98 2f       	mov	r25, r24
     f84:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
     f88:	60 93 a4 07 	sts	0x07A4, r22
     f8c:	70 93 a5 07 	sts	0x07A5, r23
     f90:	80 93 a6 07 	sts	0x07A6, r24
     f94:	90 93 a7 07 	sts	0x07A7, r25
     f98:	60 91 c8 07 	lds	r22, 0x07C8
     f9c:	70 91 c9 07 	lds	r23, 0x07C9
     fa0:	88 27       	eor	r24, r24
     fa2:	77 fd       	sbrc	r23, 7
     fa4:	80 95       	com	r24
     fa6:	98 2f       	mov	r25, r24
     fa8:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
     fac:	60 93 a8 07 	sts	0x07A8, r22
     fb0:	70 93 a9 07 	sts	0x07A9, r23
     fb4:	80 93 aa 07 	sts	0x07AA, r24
     fb8:	90 93 ab 07 	sts	0x07AB, r25
     fbc:	60 91 c6 07 	lds	r22, 0x07C6
     fc0:	70 91 c7 07 	lds	r23, 0x07C7
     fc4:	88 27       	eor	r24, r24
     fc6:	77 fd       	sbrc	r23, 7
     fc8:	80 95       	com	r24
     fca:	98 2f       	mov	r25, r24
     fcc:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
     fd0:	60 93 ac 07 	sts	0x07AC, r22
     fd4:	70 93 ad 07 	sts	0x07AD, r23
     fd8:	80 93 ae 07 	sts	0x07AE, r24
     fdc:	90 93 af 07 	sts	0x07AF, r25
     fe0:	44 e7       	ldi	r20, 0x74	; 116
     fe2:	57 e0       	ldi	r21, 0x07	; 7
     fe4:	68 e9       	ldi	r22, 0x98	; 152
     fe6:	77 e0       	ldi	r23, 0x07	; 7
     fe8:	88 e6       	ldi	r24, 0x68	; 104
     fea:	97 e0       	ldi	r25, 0x07	; 7
     fec:	d6 db       	rcall	.-2132   	; 0x79a <_Z10Vector_AddPfS_S_>
     fee:	40 e8       	ldi	r20, 0x80	; 128
     ff0:	57 e0       	ldi	r21, 0x07	; 7
     ff2:	68 e6       	ldi	r22, 0x68	; 104
     ff4:	77 e0       	ldi	r23, 0x07	; 7
     ff6:	8c e8       	ldi	r24, 0x8C	; 140
     ff8:	97 e0       	ldi	r25, 0x07	; 7
     ffa:	cf db       	rcall	.-2146   	; 0x79a <_Z10Vector_AddPfS_S_>
     ffc:	10 92 00 02 	sts	0x0200, r1
    1000:	10 92 01 02 	sts	0x0201, r1
    1004:	10 92 02 02 	sts	0x0202, r1
    1008:	10 92 03 02 	sts	0x0203, r1
    100c:	c0 90 48 02 	lds	r12, 0x0248
    1010:	d0 90 49 02 	lds	r13, 0x0249
    1014:	e0 90 4a 02 	lds	r14, 0x024A
    1018:	f0 90 4b 02 	lds	r15, 0x024B
    101c:	46 01       	movw	r8, r12
    101e:	57 01       	movw	r10, r14
    1020:	b7 fa       	bst	r11, 7
    1022:	b0 94       	com	r11
    1024:	b7 f8       	bld	r11, 7
    1026:	b0 94       	com	r11
    1028:	40 90 94 07 	lds	r4, 0x0794
    102c:	50 90 95 07 	lds	r5, 0x0795
    1030:	60 90 96 07 	lds	r6, 0x0796
    1034:	70 90 97 07 	lds	r7, 0x0797
    1038:	a3 01       	movw	r20, r6
    103a:	92 01       	movw	r18, r4
    103c:	c5 01       	movw	r24, r10
    103e:	b4 01       	movw	r22, r8
    1040:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    1044:	60 93 04 02 	sts	0x0204, r22
    1048:	70 93 05 02 	sts	0x0205, r23
    104c:	80 93 06 02 	sts	0x0206, r24
    1050:	90 93 07 02 	sts	0x0207, r25
    1054:	80 91 90 07 	lds	r24, 0x0790
    1058:	90 91 91 07 	lds	r25, 0x0791
    105c:	a0 91 92 07 	lds	r26, 0x0792
    1060:	b0 91 93 07 	lds	r27, 0x0793
    1064:	89 83       	std	Y+1, r24	; 0x01
    1066:	9a 83       	std	Y+2, r25	; 0x02
    1068:	ab 83       	std	Y+3, r26	; 0x03
    106a:	bc 83       	std	Y+4, r27	; 0x04
    106c:	9c 01       	movw	r18, r24
    106e:	ad 01       	movw	r20, r26
    1070:	c7 01       	movw	r24, r14
    1072:	b6 01       	movw	r22, r12
    1074:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    1078:	60 93 08 02 	sts	0x0208, r22
    107c:	70 93 09 02 	sts	0x0209, r23
    1080:	80 93 0a 02 	sts	0x020A, r24
    1084:	90 93 0b 02 	sts	0x020B, r25
    1088:	a3 01       	movw	r20, r6
    108a:	92 01       	movw	r18, r4
    108c:	c7 01       	movw	r24, r14
    108e:	b6 01       	movw	r22, r12
    1090:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    1094:	60 93 0c 02 	sts	0x020C, r22
    1098:	70 93 0d 02 	sts	0x020D, r23
    109c:	80 93 0e 02 	sts	0x020E, r24
    10a0:	90 93 0f 02 	sts	0x020F, r25
    10a4:	10 92 10 02 	sts	0x0210, r1
    10a8:	10 92 11 02 	sts	0x0211, r1
    10ac:	10 92 12 02 	sts	0x0212, r1
    10b0:	10 92 13 02 	sts	0x0213, r1
    10b4:	40 90 8c 07 	lds	r4, 0x078C
    10b8:	50 90 8d 07 	lds	r5, 0x078D
    10bc:	60 90 8e 07 	lds	r6, 0x078E
    10c0:	70 90 8f 07 	lds	r7, 0x078F
    10c4:	a3 01       	movw	r20, r6
    10c6:	92 01       	movw	r18, r4
    10c8:	c5 01       	movw	r24, r10
    10ca:	b4 01       	movw	r22, r8
    10cc:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    10d0:	60 93 14 02 	sts	0x0214, r22
    10d4:	70 93 15 02 	sts	0x0215, r23
    10d8:	80 93 16 02 	sts	0x0216, r24
    10dc:	90 93 17 02 	sts	0x0217, r25
    10e0:	29 81       	ldd	r18, Y+1	; 0x01
    10e2:	3a 81       	ldd	r19, Y+2	; 0x02
    10e4:	4b 81       	ldd	r20, Y+3	; 0x03
    10e6:	5c 81       	ldd	r21, Y+4	; 0x04
    10e8:	c5 01       	movw	r24, r10
    10ea:	b4 01       	movw	r22, r8
    10ec:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    10f0:	60 93 18 02 	sts	0x0218, r22
    10f4:	70 93 19 02 	sts	0x0219, r23
    10f8:	80 93 1a 02 	sts	0x021A, r24
    10fc:	90 93 1b 02 	sts	0x021B, r25
    1100:	a3 01       	movw	r20, r6
    1102:	92 01       	movw	r18, r4
    1104:	c7 01       	movw	r24, r14
    1106:	b6 01       	movw	r22, r12
    1108:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    110c:	60 93 1c 02 	sts	0x021C, r22
    1110:	70 93 1d 02 	sts	0x021D, r23
    1114:	80 93 1e 02 	sts	0x021E, r24
    1118:	90 93 1f 02 	sts	0x021F, r25
    111c:	10 92 20 02 	sts	0x0220, r1
    1120:	10 92 21 02 	sts	0x0221, r1
    1124:	10 92 22 02 	sts	0x0222, r1
    1128:	10 92 23 02 	sts	0x0223, r1
    112c:	4e e1       	ldi	r20, 0x1E	; 30
    112e:	57 e0       	ldi	r21, 0x07	; 7
    1130:	60 e0       	ldi	r22, 0x00	; 0
    1132:	72 e0       	ldi	r23, 0x02	; 2
    1134:	84 e2       	ldi	r24, 0x24	; 36
    1136:	92 e0       	ldi	r25, 0x02	; 2
    1138:	b8 d9       	rcall	.-3216   	; 0x4aa <_Z15Matrix_MultiplyPA3_fS0_S0_>
    113a:	c1 2c       	mov	r12, r1
    113c:	d1 2c       	mov	r13, r1
    113e:	a1 2c       	mov	r10, r1
    1140:	b1 2c       	mov	r11, r1
    1142:	21 c0       	rjmp	.+66     	; 0x1186 <_Z13Matrix_updatev+0x2ca>
    1144:	d8 01       	movw	r26, r16
    1146:	2d 91       	ld	r18, X+
    1148:	3d 91       	ld	r19, X+
    114a:	4d 91       	ld	r20, X+
    114c:	5d 91       	ld	r21, X+
    114e:	8d 01       	movw	r16, r26
    1150:	f4 01       	movw	r30, r8
    1152:	60 81       	ld	r22, Z
    1154:	71 81       	ldd	r23, Z+1	; 0x01
    1156:	82 81       	ldd	r24, Z+2	; 0x02
    1158:	93 81       	ldd	r25, Z+3	; 0x03
    115a:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
    115e:	d4 01       	movw	r26, r8
    1160:	6d 93       	st	X+, r22
    1162:	7d 93       	st	X+, r23
    1164:	8d 93       	st	X+, r24
    1166:	9d 93       	st	X+, r25
    1168:	4d 01       	movw	r8, r26
    116a:	bf ef       	ldi	r27, 0xFF	; 255
    116c:	eb 1a       	sub	r14, r27
    116e:	fb 0a       	sbc	r15, r27
    1170:	e3 e0       	ldi	r30, 0x03	; 3
    1172:	ee 16       	cp	r14, r30
    1174:	f1 04       	cpc	r15, r1
    1176:	31 f7       	brne	.-52     	; 0x1144 <_Z13Matrix_updatev+0x288>
    1178:	fc e0       	ldi	r31, 0x0C	; 12
    117a:	cf 0e       	add	r12, r31
    117c:	d1 1c       	adc	r13, r1
    117e:	84 e2       	ldi	r24, 0x24	; 36
    1180:	c8 16       	cp	r12, r24
    1182:	d1 04       	cpc	r13, r1
    1184:	51 f0       	breq	.+20     	; 0x119a <_Z13Matrix_updatev+0x2de>
    1186:	d6 01       	movw	r26, r12
    1188:	ac 5d       	subi	r26, 0xDC	; 220
    118a:	bd 4f       	sbci	r27, 0xFD	; 253
    118c:	4d 01       	movw	r8, r26
    118e:	86 01       	movw	r16, r12
    1190:	02 5e       	subi	r16, 0xE2	; 226
    1192:	18 4f       	sbci	r17, 0xF8	; 248
    1194:	ea 2c       	mov	r14, r10
    1196:	fb 2c       	mov	r15, r11
    1198:	d5 cf       	rjmp	.-86     	; 0x1144 <_Z13Matrix_updatev+0x288>
    119a:	0f 90       	pop	r0
    119c:	0f 90       	pop	r0
    119e:	0f 90       	pop	r0
    11a0:	0f 90       	pop	r0
    11a2:	df 91       	pop	r29
    11a4:	cf 91       	pop	r28
    11a6:	1f 91       	pop	r17
    11a8:	0f 91       	pop	r16
    11aa:	ff 90       	pop	r15
    11ac:	ef 90       	pop	r14
    11ae:	df 90       	pop	r13
    11b0:	cf 90       	pop	r12
    11b2:	bf 90       	pop	r11
    11b4:	af 90       	pop	r10
    11b6:	9f 90       	pop	r9
    11b8:	8f 90       	pop	r8
    11ba:	7f 90       	pop	r7
    11bc:	6f 90       	pop	r6
    11be:	5f 90       	pop	r5
    11c0:	4f 90       	pop	r4
    11c2:	08 95       	ret

000011c4 <_Z12Euler_anglesv>:
    11c4:	60 91 3c 02 	lds	r22, 0x023C
    11c8:	70 91 3d 02 	lds	r23, 0x023D
    11cc:	80 91 3e 02 	lds	r24, 0x023E
    11d0:	90 91 3f 02 	lds	r25, 0x023F
    11d4:	0e 94 1a 1d 	call	0x3a34	; 0x3a34 <asin>
    11d8:	dc 01       	movw	r26, r24
    11da:	cb 01       	movw	r24, r22
    11dc:	b0 58       	subi	r27, 0x80	; 128
    11de:	80 93 60 07 	sts	0x0760, r24
    11e2:	90 93 61 07 	sts	0x0761, r25
    11e6:	a0 93 62 07 	sts	0x0762, r26
    11ea:	b0 93 63 07 	sts	0x0763, r27
    11ee:	20 91 44 02 	lds	r18, 0x0244
    11f2:	30 91 45 02 	lds	r19, 0x0245
    11f6:	40 91 46 02 	lds	r20, 0x0246
    11fa:	50 91 47 02 	lds	r21, 0x0247
    11fe:	60 91 40 02 	lds	r22, 0x0240
    1202:	70 91 41 02 	lds	r23, 0x0241
    1206:	80 91 42 02 	lds	r24, 0x0242
    120a:	90 91 43 02 	lds	r25, 0x0243
    120e:	0e 94 40 1d 	call	0x3a80	; 0x3a80 <atan2>
    1212:	60 93 64 07 	sts	0x0764, r22
    1216:	70 93 65 07 	sts	0x0765, r23
    121a:	80 93 66 07 	sts	0x0766, r24
    121e:	90 93 67 07 	sts	0x0767, r25
    1222:	20 91 24 02 	lds	r18, 0x0224
    1226:	30 91 25 02 	lds	r19, 0x0225
    122a:	40 91 26 02 	lds	r20, 0x0226
    122e:	50 91 27 02 	lds	r21, 0x0227
    1232:	60 91 30 02 	lds	r22, 0x0230
    1236:	70 91 31 02 	lds	r23, 0x0231
    123a:	80 91 32 02 	lds	r24, 0x0232
    123e:	90 91 33 02 	lds	r25, 0x0233
    1242:	0e 94 40 1d 	call	0x3a80	; 0x3a80 <atan2>
    1246:	60 93 5c 07 	sts	0x075C, r22
    124a:	70 93 5d 07 	sts	0x075D, r23
    124e:	80 93 5e 07 	sts	0x075E, r24
    1252:	90 93 5f 07 	sts	0x075F, r25
    1256:	08 95       	ret

00001258 <_Z15Compass_Headingv>:
    1258:	4f 92       	push	r4
    125a:	5f 92       	push	r5
    125c:	6f 92       	push	r6
    125e:	7f 92       	push	r7
    1260:	8f 92       	push	r8
    1262:	9f 92       	push	r9
    1264:	af 92       	push	r10
    1266:	bf 92       	push	r11
    1268:	cf 92       	push	r12
    126a:	df 92       	push	r13
    126c:	ef 92       	push	r14
    126e:	ff 92       	push	r15
    1270:	0f 93       	push	r16
    1272:	1f 93       	push	r17
    1274:	cf 93       	push	r28
    1276:	df 93       	push	r29
    1278:	cd b7       	in	r28, 0x3d	; 61
    127a:	de b7       	in	r29, 0x3e	; 62
    127c:	60 97       	sbiw	r28, 0x10	; 16
    127e:	0f b6       	in	r0, 0x3f	; 63
    1280:	f8 94       	cli
    1282:	de bf       	out	0x3e, r29	; 62
    1284:	0f be       	out	0x3f, r0	; 63
    1286:	cd bf       	out	0x3d, r28	; 61
    1288:	c0 90 64 07 	lds	r12, 0x0764
    128c:	d0 90 65 07 	lds	r13, 0x0765
    1290:	e0 90 66 07 	lds	r14, 0x0766
    1294:	f0 90 67 07 	lds	r15, 0x0767
    1298:	c7 01       	movw	r24, r14
    129a:	b6 01       	movw	r22, r12
    129c:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <cos>
    12a0:	69 83       	std	Y+1, r22	; 0x01
    12a2:	7a 83       	std	Y+2, r23	; 0x02
    12a4:	8b 83       	std	Y+3, r24	; 0x03
    12a6:	9c 83       	std	Y+4, r25	; 0x04
    12a8:	c7 01       	movw	r24, r14
    12aa:	b6 01       	movw	r22, r12
    12ac:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <sin>
    12b0:	6d 83       	std	Y+5, r22	; 0x05
    12b2:	7e 83       	std	Y+6, r23	; 0x06
    12b4:	8f 83       	std	Y+7, r24	; 0x07
    12b6:	98 87       	std	Y+8, r25	; 0x08
    12b8:	c0 90 60 07 	lds	r12, 0x0760
    12bc:	d0 90 61 07 	lds	r13, 0x0761
    12c0:	e0 90 62 07 	lds	r14, 0x0762
    12c4:	f0 90 63 07 	lds	r15, 0x0763
    12c8:	c7 01       	movw	r24, r14
    12ca:	b6 01       	movw	r22, r12
    12cc:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <cos>
    12d0:	6d 87       	std	Y+13, r22	; 0x0d
    12d2:	7e 87       	std	Y+14, r23	; 0x0e
    12d4:	8f 87       	std	Y+15, r24	; 0x0f
    12d6:	98 8b       	std	Y+16, r25	; 0x10
    12d8:	c7 01       	movw	r24, r14
    12da:	b6 01       	movw	r22, r12
    12dc:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <sin>
    12e0:	69 87       	std	Y+9, r22	; 0x09
    12e2:	7a 87       	std	Y+10, r23	; 0x0a
    12e4:	8b 87       	std	Y+11, r24	; 0x0b
    12e6:	9c 87       	std	Y+12, r25	; 0x0c
    12e8:	a0 90 58 02 	lds	r10, 0x0258
    12ec:	b0 90 59 02 	lds	r11, 0x0259
    12f0:	80 e0       	ldi	r24, 0x00	; 0
    12f2:	99 e0       	ldi	r25, 0x09	; 9
    12f4:	a8 9e       	mul	r10, r24
    12f6:	b0 01       	movw	r22, r0
    12f8:	a9 9e       	mul	r10, r25
    12fa:	70 0d       	add	r23, r0
    12fc:	b8 9e       	mul	r11, r24
    12fe:	70 0d       	add	r23, r0
    1300:	11 24       	eor	r1, r1
    1302:	80 91 c4 07 	lds	r24, 0x07C4
    1306:	90 91 c5 07 	lds	r25, 0x07C5
    130a:	68 0f       	add	r22, r24
    130c:	79 1f       	adc	r23, r25
    130e:	88 27       	eor	r24, r24
    1310:	77 fd       	sbrc	r23, 7
    1312:	80 95       	com	r24
    1314:	98 2f       	mov	r25, r24
    1316:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    131a:	20 e0       	ldi	r18, 0x00	; 0
    131c:	38 e9       	ldi	r19, 0x98	; 152
    131e:	4e e9       	ldi	r20, 0x9E	; 158
    1320:	55 e4       	ldi	r21, 0x45	; 69
    1322:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <__divsf3>
    1326:	6b 01       	movw	r12, r22
    1328:	7c 01       	movw	r14, r24
    132a:	b5 01       	movw	r22, r10
    132c:	88 27       	eor	r24, r24
    132e:	77 fd       	sbrc	r23, 7
    1330:	80 95       	com	r24
    1332:	98 2f       	mov	r25, r24
    1334:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    1338:	20 e0       	ldi	r18, 0x00	; 0
    133a:	30 e0       	ldi	r19, 0x00	; 0
    133c:	40 e0       	ldi	r20, 0x00	; 0
    133e:	5f e3       	ldi	r21, 0x3F	; 63
    1340:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    1344:	9b 01       	movw	r18, r22
    1346:	ac 01       	movw	r20, r24
    1348:	c7 01       	movw	r24, r14
    134a:	b6 01       	movw	r22, r12
    134c:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
    1350:	2b 01       	movw	r4, r22
    1352:	3c 01       	movw	r6, r24
    1354:	60 93 bc 07 	sts	0x07BC, r22
    1358:	70 93 bd 07 	sts	0x07BD, r23
    135c:	80 93 be 07 	sts	0x07BE, r24
    1360:	90 93 bf 07 	sts	0x07BF, r25
    1364:	a0 90 5a 02 	lds	r10, 0x025A
    1368:	b0 90 5b 02 	lds	r11, 0x025B
    136c:	82 e9       	ldi	r24, 0x92	; 146
    136e:	98 e0       	ldi	r25, 0x08	; 8
    1370:	a8 9e       	mul	r10, r24
    1372:	b0 01       	movw	r22, r0
    1374:	a9 9e       	mul	r10, r25
    1376:	70 0d       	add	r23, r0
    1378:	b8 9e       	mul	r11, r24
    137a:	70 0d       	add	r23, r0
    137c:	11 24       	eor	r1, r1
    137e:	80 91 c2 07 	lds	r24, 0x07C2
    1382:	90 91 c3 07 	lds	r25, 0x07C3
    1386:	68 0f       	add	r22, r24
    1388:	79 1f       	adc	r23, r25
    138a:	88 27       	eor	r24, r24
    138c:	77 fd       	sbrc	r23, 7
    138e:	80 95       	com	r24
    1390:	98 2f       	mov	r25, r24
    1392:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    1396:	20 e0       	ldi	r18, 0x00	; 0
    1398:	30 ef       	ldi	r19, 0xF0	; 240
    139a:	4d e9       	ldi	r20, 0x9D	; 157
    139c:	55 e4       	ldi	r21, 0x45	; 69
    139e:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <__divsf3>
    13a2:	6b 01       	movw	r12, r22
    13a4:	7c 01       	movw	r14, r24
    13a6:	b5 01       	movw	r22, r10
    13a8:	88 27       	eor	r24, r24
    13aa:	77 fd       	sbrc	r23, 7
    13ac:	80 95       	com	r24
    13ae:	98 2f       	mov	r25, r24
    13b0:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    13b4:	20 e0       	ldi	r18, 0x00	; 0
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	40 e0       	ldi	r20, 0x00	; 0
    13ba:	5f e3       	ldi	r21, 0x3F	; 63
    13bc:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    13c0:	9b 01       	movw	r18, r22
    13c2:	ac 01       	movw	r20, r24
    13c4:	c7 01       	movw	r24, r14
    13c6:	b6 01       	movw	r22, r12
    13c8:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
    13cc:	4b 01       	movw	r8, r22
    13ce:	5c 01       	movw	r10, r24
    13d0:	60 93 b8 07 	sts	0x07B8, r22
    13d4:	70 93 b9 07 	sts	0x07B9, r23
    13d8:	80 93 ba 07 	sts	0x07BA, r24
    13dc:	90 93 bb 07 	sts	0x07BB, r25
    13e0:	00 91 5c 02 	lds	r16, 0x025C
    13e4:	10 91 5d 02 	lds	r17, 0x025D
    13e8:	8c e6       	ldi	r24, 0x6C	; 108
    13ea:	98 e0       	ldi	r25, 0x08	; 8
    13ec:	08 9f       	mul	r16, r24
    13ee:	b0 01       	movw	r22, r0
    13f0:	09 9f       	mul	r16, r25
    13f2:	70 0d       	add	r23, r0
    13f4:	18 9f       	mul	r17, r24
    13f6:	70 0d       	add	r23, r0
    13f8:	11 24       	eor	r1, r1
    13fa:	80 91 c0 07 	lds	r24, 0x07C0
    13fe:	90 91 c1 07 	lds	r25, 0x07C1
    1402:	68 0f       	add	r22, r24
    1404:	79 1f       	adc	r23, r25
    1406:	88 27       	eor	r24, r24
    1408:	77 fd       	sbrc	r23, 7
    140a:	80 95       	com	r24
    140c:	98 2f       	mov	r25, r24
    140e:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    1412:	20 e0       	ldi	r18, 0x00	; 0
    1414:	38 e6       	ldi	r19, 0x68	; 104
    1416:	49 e9       	ldi	r20, 0x99	; 153
    1418:	55 e4       	ldi	r21, 0x45	; 69
    141a:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <__divsf3>
    141e:	6b 01       	movw	r12, r22
    1420:	7c 01       	movw	r14, r24
    1422:	b8 01       	movw	r22, r16
    1424:	88 27       	eor	r24, r24
    1426:	77 fd       	sbrc	r23, 7
    1428:	80 95       	com	r24
    142a:	98 2f       	mov	r25, r24
    142c:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    1430:	20 e0       	ldi	r18, 0x00	; 0
    1432:	30 e0       	ldi	r19, 0x00	; 0
    1434:	40 e0       	ldi	r20, 0x00	; 0
    1436:	5f e3       	ldi	r21, 0x3F	; 63
    1438:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    143c:	9b 01       	movw	r18, r22
    143e:	ac 01       	movw	r20, r24
    1440:	c7 01       	movw	r24, r14
    1442:	b6 01       	movw	r22, r12
    1444:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
    1448:	6b 01       	movw	r12, r22
    144a:	7c 01       	movw	r14, r24
    144c:	60 93 b4 07 	sts	0x07B4, r22
    1450:	70 93 b5 07 	sts	0x07B5, r23
    1454:	80 93 b6 07 	sts	0x07B6, r24
    1458:	90 93 b7 07 	sts	0x07B7, r25
    145c:	a3 01       	movw	r20, r6
    145e:	92 01       	movw	r18, r4
    1460:	6d 85       	ldd	r22, Y+13	; 0x0d
    1462:	7e 85       	ldd	r23, Y+14	; 0x0e
    1464:	8f 85       	ldd	r24, Y+15	; 0x0f
    1466:	98 89       	ldd	r25, Y+16	; 0x10
    1468:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    146c:	2b 01       	movw	r4, r22
    146e:	3c 01       	movw	r6, r24
    1470:	a5 01       	movw	r20, r10
    1472:	94 01       	movw	r18, r8
    1474:	6d 81       	ldd	r22, Y+5	; 0x05
    1476:	7e 81       	ldd	r23, Y+6	; 0x06
    1478:	8f 81       	ldd	r24, Y+7	; 0x07
    147a:	98 85       	ldd	r25, Y+8	; 0x08
    147c:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    1480:	29 85       	ldd	r18, Y+9	; 0x09
    1482:	3a 85       	ldd	r19, Y+10	; 0x0a
    1484:	4b 85       	ldd	r20, Y+11	; 0x0b
    1486:	5c 85       	ldd	r21, Y+12	; 0x0c
    1488:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    148c:	9b 01       	movw	r18, r22
    148e:	ac 01       	movw	r20, r24
    1490:	c3 01       	movw	r24, r6
    1492:	b2 01       	movw	r22, r4
    1494:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
    1498:	2b 01       	movw	r4, r22
    149a:	3c 01       	movw	r6, r24
    149c:	a7 01       	movw	r20, r14
    149e:	96 01       	movw	r18, r12
    14a0:	69 81       	ldd	r22, Y+1	; 0x01
    14a2:	7a 81       	ldd	r23, Y+2	; 0x02
    14a4:	8b 81       	ldd	r24, Y+3	; 0x03
    14a6:	9c 81       	ldd	r25, Y+4	; 0x04
    14a8:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    14ac:	29 85       	ldd	r18, Y+9	; 0x09
    14ae:	3a 85       	ldd	r19, Y+10	; 0x0a
    14b0:	4b 85       	ldd	r20, Y+11	; 0x0b
    14b2:	5c 85       	ldd	r21, Y+12	; 0x0c
    14b4:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    14b8:	9b 01       	movw	r18, r22
    14ba:	ac 01       	movw	r20, r24
    14bc:	c3 01       	movw	r24, r6
    14be:	b2 01       	movw	r22, r4
    14c0:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
    14c4:	2b 01       	movw	r4, r22
    14c6:	3c 01       	movw	r6, r24
    14c8:	a5 01       	movw	r20, r10
    14ca:	94 01       	movw	r18, r8
    14cc:	69 81       	ldd	r22, Y+1	; 0x01
    14ce:	7a 81       	ldd	r23, Y+2	; 0x02
    14d0:	8b 81       	ldd	r24, Y+3	; 0x03
    14d2:	9c 81       	ldd	r25, Y+4	; 0x04
    14d4:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    14d8:	4b 01       	movw	r8, r22
    14da:	5c 01       	movw	r10, r24
    14dc:	a7 01       	movw	r20, r14
    14de:	96 01       	movw	r18, r12
    14e0:	6d 81       	ldd	r22, Y+5	; 0x05
    14e2:	7e 81       	ldd	r23, Y+6	; 0x06
    14e4:	8f 81       	ldd	r24, Y+7	; 0x07
    14e6:	98 85       	ldd	r25, Y+8	; 0x08
    14e8:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    14ec:	9b 01       	movw	r18, r22
    14ee:	ac 01       	movw	r20, r24
    14f0:	c5 01       	movw	r24, r10
    14f2:	b4 01       	movw	r22, r8
    14f4:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
    14f8:	90 58       	subi	r25, 0x80	; 128
    14fa:	a3 01       	movw	r20, r6
    14fc:	92 01       	movw	r18, r4
    14fe:	0e 94 40 1d 	call	0x3a80	; 0x3a80 <atan2>
    1502:	60 93 b0 07 	sts	0x07B0, r22
    1506:	70 93 b1 07 	sts	0x07B1, r23
    150a:	80 93 b2 07 	sts	0x07B2, r24
    150e:	90 93 b3 07 	sts	0x07B3, r25
    1512:	60 96       	adiw	r28, 0x10	; 16
    1514:	0f b6       	in	r0, 0x3f	; 63
    1516:	f8 94       	cli
    1518:	de bf       	out	0x3e, r29	; 62
    151a:	0f be       	out	0x3f, r0	; 63
    151c:	cd bf       	out	0x3d, r28	; 61
    151e:	df 91       	pop	r29
    1520:	cf 91       	pop	r28
    1522:	1f 91       	pop	r17
    1524:	0f 91       	pop	r16
    1526:	ff 90       	pop	r15
    1528:	ef 90       	pop	r14
    152a:	df 90       	pop	r13
    152c:	cf 90       	pop	r12
    152e:	bf 90       	pop	r11
    1530:	af 90       	pop	r10
    1532:	9f 90       	pop	r9
    1534:	8f 90       	pop	r8
    1536:	7f 90       	pop	r7
    1538:	6f 90       	pop	r6
    153a:	5f 90       	pop	r5
    153c:	4f 90       	pop	r4
    153e:	08 95       	ret

00001540 <_GLOBAL__sub_I_SENSOR_SIGN>:
    1540:	2c e2       	ldi	r18, 0x2C	; 44
    1542:	31 e0       	ldi	r19, 0x01	; 1
    1544:	47 e1       	ldi	r20, 0x17	; 23
    1546:	66 e1       	ldi	r22, 0x16	; 22
    1548:	82 ef       	ldi	r24, 0xF2	; 242
    154a:	97 e0       	ldi	r25, 0x07	; 7
    154c:	0e 94 a6 14 	call	0x294c	; 0x294c <_ZN7NewPingC1Ehhj>
    1550:	2c e2       	ldi	r18, 0x2C	; 44
    1552:	31 e0       	ldi	r19, 0x01	; 1
    1554:	49 e1       	ldi	r20, 0x19	; 25
    1556:	68 e1       	ldi	r22, 0x18	; 24
    1558:	84 e0       	ldi	r24, 0x04	; 4
    155a:	98 e0       	ldi	r25, 0x08	; 8
    155c:	0e 94 a6 14 	call	0x294c	; 0x294c <_ZN7NewPingC1Ehhj>
    1560:	2c e2       	ldi	r18, 0x2C	; 44
    1562:	31 e0       	ldi	r19, 0x01	; 1
    1564:	4b e1       	ldi	r20, 0x1B	; 27
    1566:	6a e1       	ldi	r22, 0x1A	; 26
    1568:	86 e1       	ldi	r24, 0x16	; 22
    156a:	98 e0       	ldi	r25, 0x08	; 8
    156c:	0e 94 a6 14 	call	0x294c	; 0x294c <_ZN7NewPingC1Ehhj>
    1570:	2c e2       	ldi	r18, 0x2C	; 44
    1572:	31 e0       	ldi	r19, 0x01	; 1
    1574:	4d e1       	ldi	r20, 0x1D	; 29
    1576:	6c e1       	ldi	r22, 0x1C	; 28
    1578:	88 e2       	ldi	r24, 0x28	; 40
    157a:	98 e0       	ldi	r25, 0x08	; 8
    157c:	0e 94 a6 14 	call	0x294c	; 0x294c <_ZN7NewPingC1Ehhj>
    1580:	2c e2       	ldi	r18, 0x2C	; 44
    1582:	31 e0       	ldi	r19, 0x01	; 1
    1584:	4f e1       	ldi	r20, 0x1F	; 31
    1586:	6e e1       	ldi	r22, 0x1E	; 30
    1588:	8a e3       	ldi	r24, 0x3A	; 58
    158a:	98 e0       	ldi	r25, 0x08	; 8
    158c:	0e 94 a6 14 	call	0x294c	; 0x294c <_ZN7NewPingC1Ehhj>
    1590:	82 e1       	ldi	r24, 0x12	; 18
    1592:	97 e0       	ldi	r25, 0x07	; 7
    1594:	f2 d1       	rcall	.+996    	; 0x197a <_ZN3L3GC1Ev>
    1596:	8c ee       	ldi	r24, 0xEC	; 236
    1598:	96 e0       	ldi	r25, 0x06	; 6
    159a:	c0 c3       	rjmp	.+1920   	; 0x1d1c <_ZN6LSM303C1Ev>
    159c:	08 95       	ret

0000159e <_Z10debugPrintPKc>:
    159e:	bc 01       	movw	r22, r24
    15a0:	8d ea       	ldi	r24, 0xAD	; 173
    15a2:	9f e0       	ldi	r25, 0x0F	; 15
    15a4:	0e 94 17 24 	call	0x482e	; 0x482e <_ZN5Print7printlnEPKc>
    15a8:	8d ea       	ldi	r24, 0xAD	; 173
    15aa:	9f e0       	ldi	r25, 0x0F	; 15
    15ac:	0c 94 5e 20 	jmp	0x40bc	; 0x40bc <_ZN14HardwareSerial5flushEv>
    15b0:	08 95       	ret

000015b2 <_Z7dprintfPKcz>:
    15b2:	cf 93       	push	r28
    15b4:	df 93       	push	r29
    15b6:	cd b7       	in	r28, 0x3d	; 61
    15b8:	de b7       	in	r29, 0x3e	; 62
    15ba:	fe 01       	movw	r30, r28
    15bc:	36 96       	adiw	r30, 0x06	; 6
    15be:	61 91       	ld	r22, Z+
    15c0:	71 91       	ld	r23, Z+
    15c2:	af 01       	movw	r20, r30
    15c4:	8c ee       	ldi	r24, 0xEC	; 236
    15c6:	92 e0       	ldi	r25, 0x02	; 2
    15c8:	0e 94 d9 26 	call	0x4db2	; 0x4db2 <vsprintf>
    15cc:	8c ee       	ldi	r24, 0xEC	; 236
    15ce:	92 e0       	ldi	r25, 0x02	; 2
    15d0:	e6 df       	rcall	.-52     	; 0x159e <_Z10debugPrintPKc>
    15d2:	df 91       	pop	r29
    15d4:	cf 91       	pop	r28
    15d6:	08 95       	ret

000015d8 <_Z9printdatav>:
    15d8:	89 e7       	ldi	r24, 0x79	; 121
    15da:	92 e0       	ldi	r25, 0x02	; 2
    15dc:	9f 93       	push	r25
    15de:	8f 93       	push	r24
    15e0:	e8 df       	rcall	.-48     	; 0x15b2 <_Z7dprintfPKcz>
    15e2:	8c ee       	ldi	r24, 0xEC	; 236
    15e4:	96 e0       	ldi	r25, 0x06	; 6
    15e6:	bb d6       	rcall	.+3446   	; 0x235e <_ZN6LSM3037headingEv>
    15e8:	9f 93       	push	r25
    15ea:	8f 93       	push	r24
    15ec:	7f 93       	push	r23
    15ee:	6f 93       	push	r22
    15f0:	21 ee       	ldi	r18, 0xE1	; 225
    15f2:	3e e2       	ldi	r19, 0x2E	; 46
    15f4:	45 e6       	ldi	r20, 0x65	; 101
    15f6:	52 e4       	ldi	r21, 0x42	; 66
    15f8:	60 91 5c 07 	lds	r22, 0x075C
    15fc:	70 91 5d 07 	lds	r23, 0x075D
    1600:	80 91 5e 07 	lds	r24, 0x075E
    1604:	90 91 5f 07 	lds	r25, 0x075F
    1608:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    160c:	9f 93       	push	r25
    160e:	8f 93       	push	r24
    1610:	7f 93       	push	r23
    1612:	6f 93       	push	r22
    1614:	21 ee       	ldi	r18, 0xE1	; 225
    1616:	3e e2       	ldi	r19, 0x2E	; 46
    1618:	45 e6       	ldi	r20, 0x65	; 101
    161a:	52 e4       	ldi	r21, 0x42	; 66
    161c:	60 91 60 07 	lds	r22, 0x0760
    1620:	70 91 61 07 	lds	r23, 0x0761
    1624:	80 91 62 07 	lds	r24, 0x0762
    1628:	90 91 63 07 	lds	r25, 0x0763
    162c:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    1630:	9f 93       	push	r25
    1632:	8f 93       	push	r24
    1634:	7f 93       	push	r23
    1636:	6f 93       	push	r22
    1638:	21 ee       	ldi	r18, 0xE1	; 225
    163a:	3e e2       	ldi	r19, 0x2E	; 46
    163c:	45 e6       	ldi	r20, 0x65	; 101
    163e:	52 e4       	ldi	r21, 0x42	; 66
    1640:	60 91 64 07 	lds	r22, 0x0764
    1644:	70 91 65 07 	lds	r23, 0x0765
    1648:	80 91 66 07 	lds	r24, 0x0766
    164c:	90 91 67 07 	lds	r25, 0x0767
    1650:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    1654:	9f 93       	push	r25
    1656:	8f 93       	push	r24
    1658:	7f 93       	push	r23
    165a:	6f 93       	push	r22
    165c:	8b e7       	ldi	r24, 0x7B	; 123
    165e:	92 e0       	ldi	r25, 0x02	; 2
    1660:	9f 93       	push	r25
    1662:	8f 93       	push	r24
    1664:	a6 df       	rcall	.-180    	; 0x15b2 <_Z7dprintfPKcz>
    1666:	8d b7       	in	r24, 0x3d	; 61
    1668:	9e b7       	in	r25, 0x3e	; 62
    166a:	44 96       	adiw	r24, 0x14	; 20
    166c:	0f b6       	in	r0, 0x3f	; 63
    166e:	f8 94       	cli
    1670:	9e bf       	out	0x3e, r25	; 62
    1672:	0f be       	out	0x3f, r0	; 63
    1674:	8d bf       	out	0x3d, r24	; 61
    1676:	08 95       	ret

00001678 <_Z5task2Pv>:
    1678:	0e 94 39 25 	call	0x4a72	; 0x4a72 <millis>
    167c:	c0 90 ee 07 	lds	r12, 0x07EE
    1680:	d0 90 ef 07 	lds	r13, 0x07EF
    1684:	e0 90 f0 07 	lds	r14, 0x07F0
    1688:	f0 90 f1 07 	lds	r15, 0x07F1
    168c:	ab 01       	movw	r20, r22
    168e:	bc 01       	movw	r22, r24
    1690:	4c 19       	sub	r20, r12
    1692:	5d 09       	sbc	r21, r13
    1694:	6e 09       	sbc	r22, r14
    1696:	7f 09       	sbc	r23, r15
    1698:	4a 30       	cpi	r20, 0x0A	; 10
    169a:	51 05       	cpc	r21, r1
    169c:	61 05       	cpc	r22, r1
    169e:	71 05       	cpc	r23, r1
    16a0:	58 f3       	brcs	.-42     	; 0x1678 <_Z5task2Pv>
    16a2:	20 91 42 07 	lds	r18, 0x0742
    16a6:	30 91 43 07 	lds	r19, 0x0743
    16aa:	2f 5f       	subi	r18, 0xFF	; 255
    16ac:	3f 4f       	sbci	r19, 0xFF	; 255
    16ae:	30 93 43 07 	sts	0x0743, r19
    16b2:	20 93 42 07 	sts	0x0742, r18
    16b6:	c0 92 ea 07 	sts	0x07EA, r12
    16ba:	d0 92 eb 07 	sts	0x07EB, r13
    16be:	e0 92 ec 07 	sts	0x07EC, r14
    16c2:	f0 92 ed 07 	sts	0x07ED, r15
    16c6:	0e 94 39 25 	call	0x4a72	; 0x4a72 <millis>
    16ca:	60 93 ee 07 	sts	0x07EE, r22
    16ce:	70 93 ef 07 	sts	0x07EF, r23
    16d2:	80 93 f0 07 	sts	0x07F0, r24
    16d6:	90 93 f1 07 	sts	0x07F1, r25
    16da:	00 91 ea 07 	lds	r16, 0x07EA
    16de:	10 91 eb 07 	lds	r17, 0x07EB
    16e2:	20 91 ec 07 	lds	r18, 0x07EC
    16e6:	30 91 ed 07 	lds	r19, 0x07ED
    16ea:	06 17       	cp	r16, r22
    16ec:	17 07       	cpc	r17, r23
    16ee:	28 07       	cpc	r18, r24
    16f0:	39 07       	cpc	r19, r25
    16f2:	ac f4       	brge	.+42     	; 0x171e <_Z5task2Pv+0xa6>
    16f4:	60 1b       	sub	r22, r16
    16f6:	71 0b       	sbc	r23, r17
    16f8:	82 0b       	sbc	r24, r18
    16fa:	93 0b       	sbc	r25, r19
    16fc:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    1700:	20 e0       	ldi	r18, 0x00	; 0
    1702:	30 e0       	ldi	r19, 0x00	; 0
    1704:	4a e7       	ldi	r20, 0x7A	; 122
    1706:	54 e4       	ldi	r21, 0x44	; 68
    1708:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <__divsf3>
    170c:	60 93 48 02 	sts	0x0248, r22
    1710:	70 93 49 02 	sts	0x0249, r23
    1714:	80 93 4a 02 	sts	0x024A, r24
    1718:	90 93 4b 02 	sts	0x024B, r25
    171c:	08 c0       	rjmp	.+16     	; 0x172e <_Z5task2Pv+0xb6>
    171e:	10 92 48 02 	sts	0x0248, r1
    1722:	10 92 49 02 	sts	0x0249, r1
    1726:	10 92 4a 02 	sts	0x024A, r1
    172a:	10 92 4b 02 	sts	0x024B, r1
    172e:	81 d8       	rcall	.-3838   	; 0x832 <_Z9Read_Gyrov>
    1730:	01 d9       	rcall	.-3582   	; 0x934 <_Z10Read_Accelv>
    1732:	80 91 42 07 	lds	r24, 0x0742
    1736:	90 91 43 07 	lds	r25, 0x0743
    173a:	06 97       	sbiw	r24, 0x06	; 6
    173c:	30 f0       	brcs	.+12     	; 0x174a <_Z5task2Pv+0xd2>
    173e:	10 92 43 07 	sts	0x0743, r1
    1742:	10 92 42 07 	sts	0x0742, r1
    1746:	6a d9       	rcall	.-3372   	; 0xa1c <_Z12Read_Compassv>
    1748:	87 dd       	rcall	.-1266   	; 0x1258 <_Z15Compass_Headingv>
    174a:	b8 db       	rcall	.-2192   	; 0xebc <_Z13Matrix_updatev>
    174c:	a5 d9       	rcall	.-3254   	; 0xa98 <_Z9Normalizev>
    174e:	43 da       	rcall	.-2938   	; 0xbd6 <_Z16Drift_correctionv>
    1750:	39 dd       	rcall	.-1422   	; 0x11c4 <_Z12Euler_anglesv>
    1752:	42 df       	rcall	.-380    	; 0x15d8 <_Z9printdatav>
    1754:	91 cf       	rjmp	.-222    	; 0x1678 <_Z5task2Pv>

00001756 <setup>:
{
	//	Do	nothing.
}

void setup()
{
    1756:	8f 92       	push	r8
    1758:	9f 92       	push	r9
    175a:	af 92       	push	r10
    175c:	bf 92       	push	r11
    175e:	cf 92       	push	r12
    1760:	df 92       	push	r13
    1762:	ef 92       	push	r14
    1764:	ff 92       	push	r15
    1766:	0f 93       	push	r16
    1768:	1f 93       	push	r17
    176a:	cf 93       	push	r28
    176c:	df 93       	push	r29
	Serial.begin(115200);	
    176e:	40 e0       	ldi	r20, 0x00	; 0
    1770:	52 ec       	ldi	r21, 0xC2	; 194
    1772:	61 e0       	ldi	r22, 0x01	; 1
    1774:	70 e0       	ldi	r23, 0x00	; 0
    1776:	8d ea       	ldi	r24, 0xAD	; 173
    1778:	9f e0       	ldi	r25, 0x0F	; 15
    177a:	0e 94 6f 22 	call	0x44de	; 0x44de <_ZN14HardwareSerial5beginEm>
	//pinMode (STATUS_LED,OUTPUT);  // Status LED
	
	I2C_Init();
    177e:	3d d8       	rcall	.-3974   	; 0x7fa <_Z8I2C_Initv>
	//Serial.println("Pololu MinIMU-9 + Arduino AHRS");

	//digitalWrite(STATUS_LED,LOW);
	//vTaskDelay(1500);
	
	Accel_Init();
    1780:	b4 d8       	rcall	.-3736   	; 0x8ea <_Z10Accel_Initv>
	Compass_Init();
	Gyro_Init();
    1782:	40 d8       	rcall	.-3968   	; 0x804 <_Z9Gyro_Initv>
	
	//vTaskDelay(20);
	delay(20);
    1784:	64 e1       	ldi	r22, 0x14	; 20
    1786:	70 e0       	ldi	r23, 0x00	; 0
    1788:	80 e0       	ldi	r24, 0x00	; 0
    178a:	90 e0       	ldi	r25, 0x00	; 0
    178c:	0e 94 6b 25 	call	0x4ad6	; 0x4ad6 <delay>
    1790:	00 e2       	ldi	r16, 0x20	; 32
    1792:	10 e0       	ldi	r17, 0x00	; 0
    1794:	0f 2e       	mov	r0, r31
    1796:	fe ed       	ldi	r31, 0xDE	; 222
    1798:	ef 2e       	mov	r14, r31
    179a:	f7 e0       	ldi	r31, 0x07	; 7
    179c:	ff 2e       	mov	r15, r31
    179e:	f0 2d       	mov	r31, r0
    17a0:	c2 ed       	ldi	r28, 0xD2	; 210
    17a2:	d7 e0       	ldi	r29, 0x07	; 7
    17a4:	0f 2e       	mov	r0, r31
    17a6:	fa ee       	ldi	r31, 0xEA	; 234
    17a8:	af 2e       	mov	r10, r31
    17aa:	f7 e0       	ldi	r31, 0x07	; 7
    17ac:	bf 2e       	mov	r11, r31
    17ae:	f0 2d       	mov	r31, r0
	
	for(int i=0;i<32;i++)    // We take some readings...
	{
		Read_Gyro();
    17b0:	40 d8       	rcall	.-3968   	; 0x832 <_Z9Read_Gyrov>
		Read_Accel();
    17b2:	c0 d8       	rcall	.-3712   	; 0x934 <_Z10Read_Accelv>
    17b4:	d7 01       	movw	r26, r14
    17b6:	8c 2e       	mov	r8, r28
    17b8:	9d 2e       	mov	r9, r29
    17ba:	fe 01       	movw	r30, r28
		for(int y=0; y<6; y++)   // Cumulate values
		AN_OFFSET[y] += AN[y];
    17bc:	8d 91       	ld	r24, X+
    17be:	9d 91       	ld	r25, X+
    17c0:	20 81       	ld	r18, Z
    17c2:	31 81       	ldd	r19, Z+1	; 0x01
    17c4:	82 0f       	add	r24, r18
    17c6:	93 1f       	adc	r25, r19
    17c8:	81 93       	st	Z+, r24
    17ca:	91 93       	st	Z+, r25
	
	for(int i=0;i<32;i++)    // We take some readings...
	{
		Read_Gyro();
		Read_Accel();
		for(int y=0; y<6; y++)   // Cumulate values
    17cc:	aa 15       	cp	r26, r10
    17ce:	bb 05       	cpc	r27, r11
    17d0:	a9 f7       	brne	.-22     	; 0x17bc <setup+0x66>
		AN_OFFSET[y] += AN[y];
	    //vTaskDelay(20);
		delay(20);
    17d2:	64 e1       	ldi	r22, 0x14	; 20
    17d4:	70 e0       	ldi	r23, 0x00	; 0
    17d6:	80 e0       	ldi	r24, 0x00	; 0
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	0e 94 6b 25 	call	0x4ad6	; 0x4ad6 <delay>
    17de:	01 50       	subi	r16, 0x01	; 1
    17e0:	11 09       	sbc	r17, r1
	Gyro_Init();
	
	//vTaskDelay(20);
	delay(20);
	
	for(int i=0;i<32;i++)    // We take some readings...
    17e2:	01 15       	cp	r16, r1
    17e4:	11 05       	cpc	r17, r1
    17e6:	21 f7       	brne	.-56     	; 0x17b0 <setup+0x5a>
    17e8:	0e ed       	ldi	r16, 0xDE	; 222
    17ea:	17 e0       	ldi	r17, 0x07	; 7
    17ec:	e8 2d       	mov	r30, r8
    17ee:	f9 2d       	mov	r31, r9
    17f0:	df 01       	movw	r26, r30
	    //vTaskDelay(20);
		delay(20);
	}
	
	for(int y=0; y<6; y++)
	AN_OFFSET[y] = AN_OFFSET[y]/32;
    17f2:	80 81       	ld	r24, Z
    17f4:	91 81       	ldd	r25, Z+1	; 0x01
    17f6:	99 23       	and	r25, r25
    17f8:	0c f4       	brge	.+2      	; 0x17fc <setup+0xa6>
    17fa:	4f 96       	adiw	r24, 0x1f	; 31
    17fc:	95 95       	asr	r25
    17fe:	87 95       	ror	r24
    1800:	95 95       	asr	r25
    1802:	87 95       	ror	r24
    1804:	95 95       	asr	r25
    1806:	87 95       	ror	r24
    1808:	95 95       	asr	r25
    180a:	87 95       	ror	r24
    180c:	95 95       	asr	r25
    180e:	87 95       	ror	r24
    1810:	8d 93       	st	X+, r24
    1812:	9c 93       	st	X, r25
    1814:	32 96       	adiw	r30, 0x02	; 2
		AN_OFFSET[y] += AN[y];
	    //vTaskDelay(20);
		delay(20);
	}
	
	for(int y=0; y<6; y++)
    1816:	e0 17       	cp	r30, r16
    1818:	f1 07       	cpc	r31, r17
    181a:	51 f7       	brne	.-44     	; 0x17f0 <setup+0x9a>
	AN_OFFSET[y] = AN_OFFSET[y]/32;
	
	AN_OFFSET[5]-=GRAVITY*SENSOR_SIGN[5];
    181c:	ec ed       	ldi	r30, 0xDC	; 220
    181e:	f7 e0       	ldi	r31, 0x07	; 7
    1820:	80 91 56 02 	lds	r24, 0x0256
    1824:	d8 2e       	mov	r13, r24
    1826:	c1 2c       	mov	r12, r1
    1828:	80 81       	ld	r24, Z
    182a:	91 81       	ldd	r25, Z+1	; 0x01
    182c:	8c 19       	sub	r24, r12
    182e:	9d 09       	sbc	r25, r13
    1830:	91 83       	std	Z+1, r25	; 0x01
    1832:	80 83       	st	Z, r24
	
	Serial.println("Offset:");
    1834:	6d e9       	ldi	r22, 0x9D	; 157
    1836:	72 e0       	ldi	r23, 0x02	; 2
    1838:	8d ea       	ldi	r24, 0xAD	; 173
    183a:	9f e0       	ldi	r25, 0x0F	; 15
    183c:	0e 94 17 24 	call	0x482e	; 0x482e <_ZN5Print7printlnEPKc>
    1840:	c8 2d       	mov	r28, r8
    1842:	d9 2d       	mov	r29, r9
	for(int y=0; y<6; y++)
	Serial.println(AN_OFFSET[y]);
    1844:	69 91       	ld	r22, Y+
    1846:	79 91       	ld	r23, Y+
    1848:	4a e0       	ldi	r20, 0x0A	; 10
    184a:	50 e0       	ldi	r21, 0x00	; 0
    184c:	8d ea       	ldi	r24, 0xAD	; 173
    184e:	9f e0       	ldi	r25, 0x0F	; 15
    1850:	0e 94 d9 24 	call	0x49b2	; 0x49b2 <_ZN5Print7printlnEii>
	AN_OFFSET[y] = AN_OFFSET[y]/32;
	
	AN_OFFSET[5]-=GRAVITY*SENSOR_SIGN[5];
	
	Serial.println("Offset:");
	for(int y=0; y<6; y++)
    1854:	0c 17       	cp	r16, r28
    1856:	1d 07       	cpc	r17, r29
    1858:	a9 f7       	brne	.-22     	; 0x1844 <setup+0xee>
	
	//vTaskDelay(2000);
	//delay(2000);
	//digitalWrite(STATUS_LED,HIGH);
	
	timer=millis();
    185a:	0e 94 39 25 	call	0x4a72	; 0x4a72 <millis>
    185e:	60 93 ee 07 	sts	0x07EE, r22
    1862:	70 93 ef 07 	sts	0x07EF, r23
    1866:	80 93 f0 07 	sts	0x07F0, r24
    186a:	90 93 f1 07 	sts	0x07F1, r25
	delay(20);
    186e:	64 e1       	ldi	r22, 0x14	; 20
    1870:	70 e0       	ldi	r23, 0x00	; 0
    1872:	80 e0       	ldi	r24, 0x00	; 0
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	0e 94 6b 25 	call	0x4ad6	; 0x4ad6 <delay>
	//vTaskDelay(20);
	counter=0;
    187a:	10 92 43 07 	sts	0x0743, r1
    187e:	10 92 42 07 	sts	0x0742, r1
	dprintf("en");
    1882:	85 ea       	ldi	r24, 0xA5	; 165
    1884:	92 e0       	ldi	r25, 0x02	; 2
    1886:	9f 93       	push	r25
    1888:	8f 93       	push	r24
    188a:	93 de       	rcall	.-730    	; 0x15b2 <_Z7dprintfPKcz>
    188c:	0f 90       	pop	r0
    188e:	0f 90       	pop	r0
}
    1890:	df 91       	pop	r29
    1892:	cf 91       	pop	r28
    1894:	1f 91       	pop	r17
    1896:	0f 91       	pop	r16
    1898:	ff 90       	pop	r15
    189a:	ef 90       	pop	r14
    189c:	df 90       	pop	r13
    189e:	cf 90       	pop	r12
    18a0:	bf 90       	pop	r11
    18a2:	af 90       	pop	r10
    18a4:	9f 90       	pop	r9
    18a6:	8f 90       	pop	r8
    18a8:	08 95       	ret

000018aa <main>:


int	main(void)
{
    18aa:	af 92       	push	r10
    18ac:	bf 92       	push	r11
    18ae:	cf 92       	push	r12
    18b0:	df 92       	push	r13
    18b2:	ef 92       	push	r14
    18b4:	ff 92       	push	r15
    18b6:	0f 93       	push	r16
    18b8:	cf 93       	push	r28
    18ba:	df 93       	push	r29
    18bc:	1f 92       	push	r1
    18be:	1f 92       	push	r1
    18c0:	cd b7       	in	r28, 0x3d	; 61
    18c2:	de b7       	in	r29, 0x3e	; 62
	init();
    18c4:	0e 94 93 25 	call	0x4b26	; 0x4b26 <init>
	setup();
    18c8:	46 df       	rcall	.-372    	; 0x1756 <setup>
	TaskHandle_t	t1,	t2;
	//	Create	tasks
	//xTaskCreate(task1,	"Task	1",	STACK_DEPTH,	NULL,	6,	&t1);
	xTaskCreate(task2,	"Task	2",	STACK_DEPTH,	NULL,	5,	&t2);
    18ca:	a1 2c       	mov	r10, r1
    18cc:	b1 2c       	mov	r11, r1
    18ce:	c1 2c       	mov	r12, r1
    18d0:	d1 2c       	mov	r13, r1
    18d2:	ce 01       	movw	r24, r28
    18d4:	01 96       	adiw	r24, 0x01	; 1
    18d6:	7c 01       	movw	r14, r24
    18d8:	05 e0       	ldi	r16, 0x05	; 5
    18da:	20 e0       	ldi	r18, 0x00	; 0
    18dc:	30 e0       	ldi	r19, 0x00	; 0
    18de:	40 e8       	ldi	r20, 0x80	; 128
    18e0:	50 e0       	ldi	r21, 0x00	; 0
    18e2:	68 ea       	ldi	r22, 0xA8	; 168
    18e4:	72 e0       	ldi	r23, 0x02	; 2
    18e6:	8c e3       	ldi	r24, 0x3C	; 60
    18e8:	9b e0       	ldi	r25, 0x0B	; 11
    18ea:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <xTaskGenericCreate>
	vTaskStartScheduler();
    18ee:	0e 94 c5 17 	call	0x2f8a	; 0x2f8a <vTaskStartScheduler>
	
    18f2:	80 e0       	ldi	r24, 0x00	; 0
    18f4:	90 e0       	ldi	r25, 0x00	; 0
    18f6:	0f 90       	pop	r0
    18f8:	0f 90       	pop	r0
    18fa:	df 91       	pop	r29
    18fc:	cf 91       	pop	r28
    18fe:	0f 91       	pop	r16
    1900:	ff 90       	pop	r15
    1902:	ef 90       	pop	r14
    1904:	df 90       	pop	r13
    1906:	cf 90       	pop	r12
    1908:	bf 90       	pop	r11
    190a:	af 90       	pop	r10
    190c:	08 95       	ret

0000190e <pvPortMalloc>:
static size_t xNextFreeByte = ( size_t ) 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    190e:	cf 93       	push	r28
    1910:	df 93       	push	r29
    1912:	ec 01       	movw	r28, r24
			/* Byte alignment required. */
			xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
		}
	#endif

	vTaskSuspendAll();
    1914:	0e 94 ee 17 	call	0x2fdc	; 0x2fdc <vTaskSuspendAll>
	{
		if( pucAlignedHeap == NULL )
    1918:	80 91 4c 08 	lds	r24, 0x084C
    191c:	90 91 4d 08 	lds	r25, 0x084D
    1920:	89 2b       	or	r24, r25
    1922:	31 f4       	brne	.+12     	; 0x1930 <pvPortMalloc+0x22>
		{
			/* Ensure the heap starts on a correctly aligned boundary. */
			pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ( portPOINTER_SIZE_TYPE ) ~portBYTE_ALIGNMENT_MASK ) );
    1924:	81 e5       	ldi	r24, 0x51	; 81
    1926:	98 e0       	ldi	r25, 0x08	; 8
    1928:	90 93 4d 08 	sts	0x084D, r25
    192c:	80 93 4c 08 	sts	0x084C, r24
		}

		/* Check there is enough room left for the allocation. */
		if( ( ( xNextFreeByte + xWantedSize ) < configADJUSTED_HEAP_SIZE ) &&
    1930:	40 91 4e 08 	lds	r20, 0x084E
    1934:	50 91 4f 08 	lds	r21, 0x084F
    1938:	9e 01       	movw	r18, r28
    193a:	24 0f       	add	r18, r20
    193c:	35 1f       	adc	r19, r21
    193e:	2b 3d       	cpi	r18, 0xDB	; 219
    1940:	85 e0       	ldi	r24, 0x05	; 5
    1942:	38 07       	cpc	r19, r24
    1944:	70 f4       	brcc	.+28     	; 0x1962 <pvPortMalloc+0x54>
    1946:	42 17       	cp	r20, r18
    1948:	53 07       	cpc	r21, r19
    194a:	70 f4       	brcc	.+28     	; 0x1968 <pvPortMalloc+0x5a>
			( ( xNextFreeByte + xWantedSize ) > xNextFreeByte )	)/* Check for overflow. */
		{
			/* Return the next free byte then increment the index past this
			block. */
			pvReturn = pucAlignedHeap + xNextFreeByte;
    194c:	c0 91 4c 08 	lds	r28, 0x084C
    1950:	d0 91 4d 08 	lds	r29, 0x084D
    1954:	c4 0f       	add	r28, r20
    1956:	d5 1f       	adc	r29, r21
			xNextFreeByte += xWantedSize;
    1958:	30 93 4f 08 	sts	0x084F, r19
    195c:	20 93 4e 08 	sts	0x084E, r18
    1960:	05 c0       	rjmp	.+10     	; 0x196c <pvPortMalloc+0x5e>

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
void *pvReturn = NULL;
    1962:	c0 e0       	ldi	r28, 0x00	; 0
    1964:	d0 e0       	ldi	r29, 0x00	; 0
    1966:	02 c0       	rjmp	.+4      	; 0x196c <pvPortMalloc+0x5e>
    1968:	c0 e0       	ldi	r28, 0x00	; 0
    196a:	d0 e0       	ldi	r29, 0x00	; 0
			xNextFreeByte += xWantedSize;
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
    196c:	0e 94 b2 18 	call	0x3164	; 0x3164 <xTaskResumeAll>
		}
	}
	#endif

	return pvReturn;
}
    1970:	ce 01       	movw	r24, r28
    1972:	df 91       	pop	r29
    1974:	cf 91       	pop	r28
    1976:	08 95       	ret

00001978 <vPortFree>:
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
    1978:	08 95       	ret

0000197a <_ZN3L3GC1Ev>:
  Wire.requestFrom(address, (byte)1);
  value = Wire.read();
  Wire.endTransmission();

  return value;
}
    197a:	fc 01       	movw	r30, r24
    197c:	83 e0       	ldi	r24, 0x03	; 3
    197e:	87 83       	std	Z+7, r24	; 0x07
    1980:	12 86       	std	Z+10, r1	; 0x0a
    1982:	11 86       	std	Z+9, r1	; 0x09
    1984:	13 86       	std	Z+11, r1	; 0x0b
    1986:	08 95       	ret

00001988 <_ZN3L3G8writeRegEhh>:
    1988:	0f 93       	push	r16
    198a:	1f 93       	push	r17
    198c:	cf 93       	push	r28
    198e:	df 93       	push	r29
    1990:	ec 01       	movw	r28, r24
    1992:	06 2f       	mov	r16, r22
    1994:	14 2f       	mov	r17, r20
    1996:	68 85       	ldd	r22, Y+8	; 0x08
    1998:	85 ef       	ldi	r24, 0xF5	; 245
    199a:	9e e0       	ldi	r25, 0x0E	; 14
    199c:	0e 94 92 1c 	call	0x3924	; 0x3924 <_ZN7TwoWire17beginTransmissionEh>
    19a0:	60 2f       	mov	r22, r16
    19a2:	85 ef       	ldi	r24, 0xF5	; 245
    19a4:	9e e0       	ldi	r25, 0x0E	; 14
    19a6:	0e 94 39 1c 	call	0x3872	; 0x3872 <_ZN7TwoWire5writeEh>
    19aa:	61 2f       	mov	r22, r17
    19ac:	85 ef       	ldi	r24, 0xF5	; 245
    19ae:	9e e0       	ldi	r25, 0x0E	; 14
    19b0:	0e 94 39 1c 	call	0x3872	; 0x3872 <_ZN7TwoWire5writeEh>
    19b4:	85 ef       	ldi	r24, 0xF5	; 245
    19b6:	9e e0       	ldi	r25, 0x0E	; 14
    19b8:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN7TwoWire15endTransmissionEv>
    19bc:	8e 83       	std	Y+6, r24	; 0x06
    19be:	df 91       	pop	r29
    19c0:	cf 91       	pop	r28
    19c2:	1f 91       	pop	r17
    19c4:	0f 91       	pop	r16
    19c6:	08 95       	ret

000019c8 <_ZN3L3G13enableDefaultEv>:
    19c8:	cf 93       	push	r28
    19ca:	df 93       	push	r29
    19cc:	ec 01       	movw	r28, r24
    19ce:	8f 81       	ldd	r24, Y+7	; 0x07
    19d0:	82 30       	cpi	r24, 0x02	; 2
    19d2:	21 f4       	brne	.+8      	; 0x19dc <_ZN3L3G13enableDefaultEv+0x14>
    19d4:	40 e0       	ldi	r20, 0x00	; 0
    19d6:	69 e3       	ldi	r22, 0x39	; 57
    19d8:	ce 01       	movw	r24, r28
    19da:	d6 df       	rcall	.-84     	; 0x1988 <_ZN3L3G8writeRegEhh>
    19dc:	40 e0       	ldi	r20, 0x00	; 0
    19de:	63 e2       	ldi	r22, 0x23	; 35
    19e0:	ce 01       	movw	r24, r28
    19e2:	d2 df       	rcall	.-92     	; 0x1988 <_ZN3L3G8writeRegEhh>
    19e4:	4f e6       	ldi	r20, 0x6F	; 111
    19e6:	60 e2       	ldi	r22, 0x20	; 32
    19e8:	ce 01       	movw	r24, r28
    19ea:	ce df       	rcall	.-100    	; 0x1988 <_ZN3L3G8writeRegEhh>
    19ec:	df 91       	pop	r29
    19ee:	cf 91       	pop	r28
    19f0:	08 95       	ret

000019f2 <_ZN3L3G4readEv>:

// Reads the 3 gyro channels and stores them in vector g
void L3G::read()
{
    19f2:	9f 92       	push	r9
    19f4:	af 92       	push	r10
    19f6:	bf 92       	push	r11
    19f8:	cf 92       	push	r12
    19fa:	df 92       	push	r13
    19fc:	ef 92       	push	r14
    19fe:	ff 92       	push	r15
    1a00:	0f 93       	push	r16
    1a02:	1f 93       	push	r17
    1a04:	cf 93       	push	r28
    1a06:	df 93       	push	r29
    1a08:	ec 01       	movw	r28, r24
  Wire.beginTransmission(address);
    1a0a:	68 85       	ldd	r22, Y+8	; 0x08
    1a0c:	85 ef       	ldi	r24, 0xF5	; 245
    1a0e:	9e e0       	ldi	r25, 0x0E	; 14
    1a10:	0e 94 92 1c 	call	0x3924	; 0x3924 <_ZN7TwoWire17beginTransmissionEh>
    void onRequest( void (*)(void) );
  
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    1a14:	e0 91 f5 0e 	lds	r30, 0x0EF5
    1a18:	f0 91 f6 0e 	lds	r31, 0x0EF6
    1a1c:	01 90       	ld	r0, Z+
    1a1e:	f0 81       	ld	r31, Z
    1a20:	e0 2d       	mov	r30, r0
    1a22:	68 ea       	ldi	r22, 0xA8	; 168
    1a24:	85 ef       	ldi	r24, 0xF5	; 245
    1a26:	9e e0       	ldi	r25, 0x0E	; 14
    1a28:	19 95       	eicall
  // assert the MSB of the address to get the gyro
  // to do slave-transmit subaddress updating.
  Wire.write(OUT_X_L | (1 << 7));
  Wire.endTransmission();
    1a2a:	85 ef       	ldi	r24, 0xF5	; 245
    1a2c:	9e e0       	ldi	r25, 0x0E	; 14
    1a2e:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN7TwoWire15endTransmissionEv>
  Wire.requestFrom(address, (byte)6);
    1a32:	46 e0       	ldi	r20, 0x06	; 6
    1a34:	68 85       	ldd	r22, Y+8	; 0x08
    1a36:	85 ef       	ldi	r24, 0xF5	; 245
    1a38:	9e e0       	ldi	r25, 0x0E	; 14
    1a3a:	0e 94 8f 1c 	call	0x391e	; 0x391e <_ZN7TwoWire11requestFromEhh>
  
  unsigned int millis_start = millis();
    1a3e:	0e 94 39 25 	call	0x4a72	; 0x4a72 <millis>
    1a42:	8b 01       	movw	r16, r22
  while (Wire.available() < 6)
    1a44:	10 c0       	rjmp	.+32     	; 0x1a66 <_ZN3L3G4readEv+0x74>
  {
    if (io_timeout > 0 && ((unsigned int)millis() - millis_start) > io_timeout)
    1a46:	89 85       	ldd	r24, Y+9	; 0x09
    1a48:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a4a:	89 2b       	or	r24, r25
    1a4c:	61 f0       	breq	.+24     	; 0x1a66 <_ZN3L3G4readEv+0x74>
    1a4e:	0e 94 39 25 	call	0x4a72	; 0x4a72 <millis>
    1a52:	60 1b       	sub	r22, r16
    1a54:	71 0b       	sbc	r23, r17
    1a56:	89 85       	ldd	r24, Y+9	; 0x09
    1a58:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a5a:	86 17       	cp	r24, r22
    1a5c:	97 07       	cpc	r25, r23
    1a5e:	18 f4       	brcc	.+6      	; 0x1a66 <_ZN3L3G4readEv+0x74>
    {
      did_timeout = true;
    1a60:	81 e0       	ldi	r24, 0x01	; 1
    1a62:	8b 87       	std	Y+11, r24	; 0x0b
      return;
    1a64:	32 c0       	rjmp	.+100    	; 0x1aca <_ZN3L3G4readEv+0xd8>
  Wire.write(OUT_X_L | (1 << 7));
  Wire.endTransmission();
  Wire.requestFrom(address, (byte)6);
  
  unsigned int millis_start = millis();
  while (Wire.available() < 6)
    1a66:	85 ef       	ldi	r24, 0xF5	; 245
    1a68:	9e e0       	ldi	r25, 0x0E	; 14
    1a6a:	0e 94 df 1b 	call	0x37be	; 0x37be <_ZN7TwoWire9availableEv>
    1a6e:	06 97       	sbiw	r24, 0x06	; 6
    1a70:	54 f3       	brlt	.-44     	; 0x1a46 <_ZN3L3G4readEv+0x54>
      did_timeout = true;
      return;
    }
  }

  uint8_t xlg = Wire.read();
    1a72:	85 ef       	ldi	r24, 0xF5	; 245
    1a74:	9e e0       	ldi	r25, 0x0E	; 14
    1a76:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    1a7a:	a8 2e       	mov	r10, r24
  uint8_t xhg = Wire.read();
    1a7c:	85 ef       	ldi	r24, 0xF5	; 245
    1a7e:	9e e0       	ldi	r25, 0x0E	; 14
    1a80:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    1a84:	98 2e       	mov	r9, r24
  uint8_t ylg = Wire.read();
    1a86:	85 ef       	ldi	r24, 0xF5	; 245
    1a88:	9e e0       	ldi	r25, 0x0E	; 14
    1a8a:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    1a8e:	08 2f       	mov	r16, r24
  uint8_t yhg = Wire.read();
    1a90:	85 ef       	ldi	r24, 0xF5	; 245
    1a92:	9e e0       	ldi	r25, 0x0E	; 14
    1a94:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    1a98:	b8 2e       	mov	r11, r24
  uint8_t zlg = Wire.read();
    1a9a:	85 ef       	ldi	r24, 0xF5	; 245
    1a9c:	9e e0       	ldi	r25, 0x0E	; 14
    1a9e:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    1aa2:	18 2f       	mov	r17, r24
  uint8_t zhg = Wire.read();
    1aa4:	85 ef       	ldi	r24, 0xF5	; 245
    1aa6:	9e e0       	ldi	r25, 0x0E	; 14
    1aa8:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>

  // combine high and low bytes
  g.x = (int16_t)(xhg << 8 | xlg);
    1aac:	d9 2c       	mov	r13, r9
    1aae:	c1 2c       	mov	r12, r1
    1ab0:	ca 28       	or	r12, r10
    1ab2:	d9 82       	std	Y+1, r13	; 0x01
    1ab4:	c8 82       	st	Y, r12
  g.y = (int16_t)(yhg << 8 | ylg);
    1ab6:	fb 2c       	mov	r15, r11
    1ab8:	e1 2c       	mov	r14, r1
    1aba:	e0 2a       	or	r14, r16
    1abc:	fb 82       	std	Y+3, r15	; 0x03
    1abe:	ea 82       	std	Y+2, r14	; 0x02
  g.z = (int16_t)(zhg << 8 | zlg);
    1ac0:	98 2f       	mov	r25, r24
    1ac2:	88 27       	eor	r24, r24
    1ac4:	81 2b       	or	r24, r17
    1ac6:	9d 83       	std	Y+5, r25	; 0x05
    1ac8:	8c 83       	std	Y+4, r24	; 0x04
}
    1aca:	df 91       	pop	r29
    1acc:	cf 91       	pop	r28
    1ace:	1f 91       	pop	r17
    1ad0:	0f 91       	pop	r16
    1ad2:	ff 90       	pop	r15
    1ad4:	ef 90       	pop	r14
    1ad6:	df 90       	pop	r13
    1ad8:	cf 90       	pop	r12
    1ada:	bf 90       	pop	r11
    1adc:	af 90       	pop	r10
    1ade:	9f 90       	pop	r9
    1ae0:	08 95       	ret

00001ae2 <_ZN3L3G7testRegEhNS_7regAddrE>:
}

// Private Methods //////////////////////////////////////////////////////////////

int L3G::testReg(byte address, regAddr reg)
{
    1ae2:	cf 93       	push	r28
    1ae4:	df 93       	push	r29
    1ae6:	c6 2f       	mov	r28, r22
    1ae8:	d4 2f       	mov	r29, r20
  Wire.beginTransmission(address);
    1aea:	85 ef       	ldi	r24, 0xF5	; 245
    1aec:	9e e0       	ldi	r25, 0x0E	; 14
    1aee:	0e 94 92 1c 	call	0x3924	; 0x3924 <_ZN7TwoWire17beginTransmissionEh>
  Wire.write((byte)reg);
    1af2:	6d 2f       	mov	r22, r29
    1af4:	85 ef       	ldi	r24, 0xF5	; 245
    1af6:	9e e0       	ldi	r25, 0x0E	; 14
    1af8:	0e 94 39 1c 	call	0x3872	; 0x3872 <_ZN7TwoWire5writeEh>
  if (Wire.endTransmission() != 0)
    1afc:	85 ef       	ldi	r24, 0xF5	; 245
    1afe:	9e e0       	ldi	r25, 0x0E	; 14
    1b00:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN7TwoWire15endTransmissionEv>
    1b04:	81 11       	cpse	r24, r1
    1b06:	11 c0       	rjmp	.+34     	; 0x1b2a <_ZN3L3G7testRegEhNS_7regAddrE+0x48>
  {
    return TEST_REG_ERROR;
  }

  Wire.requestFrom(address, (byte)1);
    1b08:	41 e0       	ldi	r20, 0x01	; 1
    1b0a:	6c 2f       	mov	r22, r28
    1b0c:	85 ef       	ldi	r24, 0xF5	; 245
    1b0e:	9e e0       	ldi	r25, 0x0E	; 14
    1b10:	0e 94 8f 1c 	call	0x391e	; 0x391e <_ZN7TwoWire11requestFromEhh>
  if (Wire.available())
    1b14:	85 ef       	ldi	r24, 0xF5	; 245
    1b16:	9e e0       	ldi	r25, 0x0E	; 14
    1b18:	0e 94 df 1b 	call	0x37be	; 0x37be <_ZN7TwoWire9availableEv>
    1b1c:	89 2b       	or	r24, r25
    1b1e:	41 f0       	breq	.+16     	; 0x1b30 <_ZN3L3G7testRegEhNS_7regAddrE+0x4e>
  {
    return Wire.read();
    1b20:	85 ef       	ldi	r24, 0xF5	; 245
    1b22:	9e e0       	ldi	r25, 0x0E	; 14
    1b24:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    1b28:	05 c0       	rjmp	.+10     	; 0x1b34 <_ZN3L3G7testRegEhNS_7regAddrE+0x52>
{
  Wire.beginTransmission(address);
  Wire.write((byte)reg);
  if (Wire.endTransmission() != 0)
  {
    return TEST_REG_ERROR;
    1b2a:	8f ef       	ldi	r24, 0xFF	; 255
    1b2c:	9f ef       	ldi	r25, 0xFF	; 255
    1b2e:	02 c0       	rjmp	.+4      	; 0x1b34 <_ZN3L3G7testRegEhNS_7regAddrE+0x52>
  {
    return Wire.read();
  }
  else
  {
    return TEST_REG_ERROR;
    1b30:	8f ef       	ldi	r24, 0xFF	; 255
    1b32:	9f ef       	ldi	r25, 0xFF	; 255
  }
}
    1b34:	df 91       	pop	r29
    1b36:	cf 91       	pop	r28
    1b38:	08 95       	ret

00001b3a <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE>:
{
  return io_timeout;
}

bool L3G::init(deviceType device, sa0State sa0)
{
    1b3a:	0f 93       	push	r16
    1b3c:	1f 93       	push	r17
    1b3e:	cf 93       	push	r28
    1b40:	df 93       	push	r29
    1b42:	ec 01       	movw	r28, r24
    1b44:	16 2f       	mov	r17, r22
    1b46:	04 2f       	mov	r16, r20
  int id;
  
  // perform auto-detection unless device type and SA0 state were both specified
  if (device == device_auto || sa0 == sa0_auto)
    1b48:	63 30       	cpi	r22, 0x03	; 3
    1b4a:	09 f4       	brne	.+2      	; 0x1b4e <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x14>
    1b4c:	56 c0       	rjmp	.+172    	; 0x1bfa <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xc0>
    1b4e:	42 30       	cpi	r20, 0x02	; 2
    1b50:	c9 f5       	brne	.+114    	; 0x1bc4 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x8a>
    1b52:	56 c0       	rjmp	.+172    	; 0x1c00 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xc6>
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && (id = testReg(D20_SA0_HIGH_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
      {
        // device responds to address 1101011; it's a D20H or D20 with SA0 high     
        sa0 = sa0_high;
        if (device == device_auto)
    1b54:	13 30       	cpi	r17, 0x03	; 3
    1b56:	09 f0       	breq	.+2      	; 0x1b5a <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x20>
    1b58:	58 c0       	rjmp	.+176    	; 0x1c0a <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xd0>
        {
          // use ID from WHO_AM_I register to determine device type
          device = (id == D20H_WHO_ID) ? device_D20H : device_D20;
    1b5a:	87 3d       	cpi	r24, 0xD7	; 215
    1b5c:	91 05       	cpc	r25, r1
    1b5e:	09 f4       	brne	.+2      	; 0x1b62 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x28>
    1b60:	58 c0       	rjmp	.+176    	; 0x1c12 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xd8>
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && (id = testReg(D20_SA0_HIGH_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
      {
        // device responds to address 1101011; it's a D20H or D20 with SA0 high     
        sa0 = sa0_high;
    1b62:	01 e0       	ldi	r16, 0x01	; 1
        if (device == device_auto)
        {
          // use ID from WHO_AM_I register to determine device type
          device = (id == D20H_WHO_ID) ? device_D20H : device_D20;
    1b64:	11 e0       	ldi	r17, 0x01	; 1
    1b66:	2c c0       	rjmp	.+88     	; 0x1bc0 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x86>
        }
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && (id = testReg(D20_SA0_LOW_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
    1b68:	01 30       	cpi	r16, 0x01	; 1
    1b6a:	91 f0       	breq	.+36     	; 0x1b90 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x56>
    1b6c:	4f e0       	ldi	r20, 0x0F	; 15
    1b6e:	6a e6       	ldi	r22, 0x6A	; 106
    1b70:	ce 01       	movw	r24, r28
    1b72:	b7 df       	rcall	.-146    	; 0x1ae2 <_ZN3L3G7testRegEhNS_7regAddrE>
    1b74:	8f 3f       	cpi	r24, 0xFF	; 255
    1b76:	2f ef       	ldi	r18, 0xFF	; 255
    1b78:	92 07       	cpc	r25, r18
    1b7a:	51 f0       	breq	.+20     	; 0x1b90 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x56>
      {
        // device responds to address 1101010; it's a D20H or D20 with SA0 low      
        sa0 = sa0_low;
        if (device == device_auto)
    1b7c:	13 30       	cpi	r17, 0x03	; 3
    1b7e:	09 f0       	breq	.+2      	; 0x1b82 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x48>
    1b80:	46 c0       	rjmp	.+140    	; 0x1c0e <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xd4>
        {
          // use ID from WHO_AM_I register to determine device type
          device = (id == D20H_WHO_ID) ? device_D20H : device_D20;
    1b82:	87 3d       	cpi	r24, 0xD7	; 215
    1b84:	91 05       	cpc	r25, r1
    1b86:	09 f0       	breq	.+2      	; 0x1b8a <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x50>
    1b88:	47 c0       	rjmp	.+142    	; 0x1c18 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xde>
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && (id = testReg(D20_SA0_LOW_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
      {
        // device responds to address 1101010; it's a D20H or D20 with SA0 low      
        sa0 = sa0_low;
    1b8a:	00 e0       	ldi	r16, 0x00	; 0
        if (device == device_auto)
        {
          // use ID from WHO_AM_I register to determine device type
          device = (id == D20H_WHO_ID) ? device_D20H : device_D20;
    1b8c:	12 e0       	ldi	r17, 0x02	; 2
    1b8e:	18 c0       	rjmp	.+48     	; 0x1bc0 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x86>
        }
      }
    }
    
    // check for L3G4200D if device is still unidentified or was specified to be this type
    if (device == device_auto || device == device_4200D)
    1b90:	13 30       	cpi	r17, 0x03	; 3
    1b92:	11 f0       	breq	.+4      	; 0x1b98 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x5e>
    1b94:	11 11       	cpse	r17, r1
    1b96:	14 c0       	rjmp	.+40     	; 0x1bc0 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x86>
    {
      if (sa0 != sa0_low && testReg(L3G4200D_SA0_HIGH_ADDRESS, WHO_AM_I) == L3G4200D_WHO_ID)
    1b98:	00 23       	and	r16, r16
    1b9a:	49 f0       	breq	.+18     	; 0x1bae <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x74>
    1b9c:	4f e0       	ldi	r20, 0x0F	; 15
    1b9e:	69 e6       	ldi	r22, 0x69	; 105
    1ba0:	ce 01       	movw	r24, r28
    1ba2:	9f df       	rcall	.-194    	; 0x1ae2 <_ZN3L3G7testRegEhNS_7regAddrE>
    1ba4:	83 3d       	cpi	r24, 0xD3	; 211
    1ba6:	91 05       	cpc	r25, r1
    1ba8:	d1 f1       	breq	.+116    	; 0x1c1e <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xe4>
      {
        // device responds to address 1101001; it's a 4200D with SA0 high
        device = device_4200D;
        sa0 = sa0_high;
      }
      else if (sa0 != sa0_high && testReg(L3G4200D_SA0_LOW_ADDRESS, WHO_AM_I) == L3G4200D_WHO_ID)
    1baa:	01 30       	cpi	r16, 0x01	; 1
    1bac:	39 f0       	breq	.+14     	; 0x1bbc <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x82>
    1bae:	4f e0       	ldi	r20, 0x0F	; 15
    1bb0:	68 e6       	ldi	r22, 0x68	; 104
    1bb2:	ce 01       	movw	r24, r28
    1bb4:	96 df       	rcall	.-212    	; 0x1ae2 <_ZN3L3G7testRegEhNS_7regAddrE>
    1bb6:	83 3d       	cpi	r24, 0xD3	; 211
    1bb8:	91 05       	cpc	r25, r1
    1bba:	99 f1       	breq	.+102    	; 0x1c22 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xe8>
        sa0 = sa0_low;
      }
    }
    
    // make sure device and SA0 were successfully detected; otherwise, indicate failure
    if (device == device_auto || sa0 == sa0_auto)
    1bbc:	13 30       	cpi	r17, 0x03	; 3
    1bbe:	b9 f0       	breq	.+46     	; 0x1bee <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xb4>
    1bc0:	02 30       	cpi	r16, 0x02	; 2
    1bc2:	b9 f0       	breq	.+46     	; 0x1bf2 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xb8>
    {
      return false;
    }
  }
  
  _device = device;
    1bc4:	1f 83       	std	Y+7, r17	; 0x07

  // set device address
  switch (device)
    1bc6:	11 23       	and	r17, r17
    1bc8:	51 f0       	breq	.+20     	; 0x1bde <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xa4>
    1bca:	13 30       	cpi	r17, 0x03	; 3
    1bcc:	a0 f4       	brcc	.+40     	; 0x1bf6 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xbc>
  {
    case device_D20H:
    case device_D20:
      address = (sa0 == sa0_high) ? D20_SA0_HIGH_ADDRESS : D20_SA0_LOW_ADDRESS;
    1bce:	01 30       	cpi	r16, 0x01	; 1
    1bd0:	11 f4       	brne	.+4      	; 0x1bd6 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x9c>
    1bd2:	8b e6       	ldi	r24, 0x6B	; 107
    1bd4:	01 c0       	rjmp	.+2      	; 0x1bd8 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x9e>
    1bd6:	8a e6       	ldi	r24, 0x6A	; 106
    1bd8:	88 87       	std	Y+8, r24	; 0x08
    case device_4200D:
      address = (sa0 == sa0_high) ? L3G4200D_SA0_HIGH_ADDRESS : L3G4200D_SA0_LOW_ADDRESS;
      break;
  }
  
  return true;
    1bda:	81 e0       	ldi	r24, 0x01	; 1
  switch (device)
  {
    case device_D20H:
    case device_D20:
      address = (sa0 == sa0_high) ? D20_SA0_HIGH_ADDRESS : D20_SA0_LOW_ADDRESS;
      break;
    1bdc:	41 c0       	rjmp	.+130    	; 0x1c60 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x126>

    case device_4200D:
      address = (sa0 == sa0_high) ? L3G4200D_SA0_HIGH_ADDRESS : L3G4200D_SA0_LOW_ADDRESS;
    1bde:	01 30       	cpi	r16, 0x01	; 1
    1be0:	11 f4       	brne	.+4      	; 0x1be6 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xac>
    1be2:	89 e6       	ldi	r24, 0x69	; 105
    1be4:	01 c0       	rjmp	.+2      	; 0x1be8 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xae>
    1be6:	88 e6       	ldi	r24, 0x68	; 104
    1be8:	88 87       	std	Y+8, r24	; 0x08
      break;
  }
  
  return true;
    1bea:	81 e0       	ldi	r24, 0x01	; 1
      address = (sa0 == sa0_high) ? D20_SA0_HIGH_ADDRESS : D20_SA0_LOW_ADDRESS;
      break;

    case device_4200D:
      address = (sa0 == sa0_high) ? L3G4200D_SA0_HIGH_ADDRESS : L3G4200D_SA0_LOW_ADDRESS;
      break;
    1bec:	39 c0       	rjmp	.+114    	; 0x1c60 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x126>
    }
    
    // make sure device and SA0 were successfully detected; otherwise, indicate failure
    if (device == device_auto || sa0 == sa0_auto)
    {
      return false;
    1bee:	80 e0       	ldi	r24, 0x00	; 0
    1bf0:	37 c0       	rjmp	.+110    	; 0x1c60 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x126>
    1bf2:	80 e0       	ldi	r24, 0x00	; 0
    1bf4:	35 c0       	rjmp	.+106    	; 0x1c60 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x126>
    case device_4200D:
      address = (sa0 == sa0_high) ? L3G4200D_SA0_HIGH_ADDRESS : L3G4200D_SA0_LOW_ADDRESS;
      break;
  }
  
  return true;
    1bf6:	81 e0       	ldi	r24, 0x01	; 1
    1bf8:	33 c0       	rjmp	.+102    	; 0x1c60 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x126>
  {
    // check for L3GD20H, D20 if device is unidentified or was specified to be one of these types
    if (device == device_auto || device == device_D20H || device == device_D20)
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && (id = testReg(D20_SA0_HIGH_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
    1bfa:	44 23       	and	r20, r20
    1bfc:	41 f1       	breq	.+80     	; 0x1c4e <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x114>
    1bfe:	1e c0       	rjmp	.+60     	; 0x1c3c <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x102>
  
  // perform auto-detection unless device type and SA0 state were both specified
  if (device == device_auto || sa0 == sa0_auto)
  {
    // check for L3GD20H, D20 if device is unidentified or was specified to be one of these types
    if (device == device_auto || device == device_D20H || device == device_D20)
    1c00:	8f ef       	ldi	r24, 0xFF	; 255
    1c02:	86 0f       	add	r24, r22
    1c04:	83 30       	cpi	r24, 0x03	; 3
    1c06:	30 f6       	brcc	.-116    	; 0x1b94 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x5a>
    1c08:	0f c0       	rjmp	.+30     	; 0x1c28 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xee>
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && (id = testReg(D20_SA0_HIGH_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
      {
        // device responds to address 1101011; it's a D20H or D20 with SA0 high     
        sa0 = sa0_high;
    1c0a:	01 e0       	ldi	r16, 0x01	; 1
    1c0c:	c3 cf       	rjmp	.-122    	; 0x1b94 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x5a>
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && (id = testReg(D20_SA0_LOW_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
      {
        // device responds to address 1101010; it's a D20H or D20 with SA0 low      
        sa0 = sa0_low;
    1c0e:	00 e0       	ldi	r16, 0x00	; 0
    1c10:	c1 cf       	rjmp	.-126    	; 0x1b94 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x5a>
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && (id = testReg(D20_SA0_HIGH_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
      {
        // device responds to address 1101011; it's a D20H or D20 with SA0 high     
        sa0 = sa0_high;
    1c12:	01 e0       	ldi	r16, 0x01	; 1
        if (device == device_auto)
        {
          // use ID from WHO_AM_I register to determine device type
          device = (id == D20H_WHO_ID) ? device_D20H : device_D20;
    1c14:	12 e0       	ldi	r17, 0x02	; 2
    1c16:	d4 cf       	rjmp	.-88     	; 0x1bc0 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x86>
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && (id = testReg(D20_SA0_LOW_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
      {
        // device responds to address 1101010; it's a D20H or D20 with SA0 low      
        sa0 = sa0_low;
    1c18:	00 e0       	ldi	r16, 0x00	; 0
        if (device == device_auto)
        {
          // use ID from WHO_AM_I register to determine device type
          device = (id == D20H_WHO_ID) ? device_D20H : device_D20;
    1c1a:	11 e0       	ldi	r17, 0x01	; 1
    1c1c:	d1 cf       	rjmp	.-94     	; 0x1bc0 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x86>
    {
      if (sa0 != sa0_low && testReg(L3G4200D_SA0_HIGH_ADDRESS, WHO_AM_I) == L3G4200D_WHO_ID)
      {
        // device responds to address 1101001; it's a 4200D with SA0 high
        device = device_4200D;
        sa0 = sa0_high;
    1c1e:	01 e0       	ldi	r16, 0x01	; 1
    1c20:	01 c0       	rjmp	.+2      	; 0x1c24 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xea>
      }
      else if (sa0 != sa0_high && testReg(L3G4200D_SA0_LOW_ADDRESS, WHO_AM_I) == L3G4200D_WHO_ID)
      {
        // device responds to address 1101000; it's a 4200D with SA0 low
        device = device_4200D;
        sa0 = sa0_low;
    1c22:	00 e0       	ldi	r16, 0x00	; 0
    {
      return false;
    }
  }
  
  _device = device;
    1c24:	1f 82       	std	Y+7, r1	; 0x07
    1c26:	db cf       	rjmp	.-74     	; 0x1bde <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0xa4>
  {
    // check for L3GD20H, D20 if device is unidentified or was specified to be one of these types
    if (device == device_auto || device == device_D20H || device == device_D20)
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && (id = testReg(D20_SA0_HIGH_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
    1c28:	4f e0       	ldi	r20, 0x0F	; 15
    1c2a:	6b e6       	ldi	r22, 0x6B	; 107
    1c2c:	ce 01       	movw	r24, r28
    1c2e:	59 df       	rcall	.-334    	; 0x1ae2 <_ZN3L3G7testRegEhNS_7regAddrE>
    1c30:	8f 3f       	cpi	r24, 0xFF	; 255
    1c32:	2f ef       	ldi	r18, 0xFF	; 255
    1c34:	92 07       	cpc	r25, r18
    1c36:	09 f0       	breq	.+2      	; 0x1c3a <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x100>
    1c38:	8d cf       	rjmp	.-230    	; 0x1b54 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x1a>
    1c3a:	98 cf       	rjmp	.-208    	; 0x1b6c <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x32>
    1c3c:	4f e0       	ldi	r20, 0x0F	; 15
    1c3e:	6b e6       	ldi	r22, 0x6B	; 107
    1c40:	50 df       	rcall	.-352    	; 0x1ae2 <_ZN3L3G7testRegEhNS_7regAddrE>
    1c42:	8f 3f       	cpi	r24, 0xFF	; 255
    1c44:	2f ef       	ldi	r18, 0xFF	; 255
    1c46:	92 07       	cpc	r25, r18
    1c48:	09 f0       	breq	.+2      	; 0x1c4c <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x112>
    1c4a:	87 cf       	rjmp	.-242    	; 0x1b5a <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x20>
    1c4c:	8d cf       	rjmp	.-230    	; 0x1b68 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x2e>
          // use ID from WHO_AM_I register to determine device type
          device = (id == D20H_WHO_ID) ? device_D20H : device_D20;
        }
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && (id = testReg(D20_SA0_LOW_ADDRESS, WHO_AM_I)) != TEST_REG_ERROR)
    1c4e:	4f e0       	ldi	r20, 0x0F	; 15
    1c50:	6a e6       	ldi	r22, 0x6A	; 106
    1c52:	47 df       	rcall	.-370    	; 0x1ae2 <_ZN3L3G7testRegEhNS_7regAddrE>
    1c54:	8f 3f       	cpi	r24, 0xFF	; 255
    1c56:	2f ef       	ldi	r18, 0xFF	; 255
    1c58:	92 07       	cpc	r25, r18
    1c5a:	09 f0       	breq	.+2      	; 0x1c5e <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x124>
    1c5c:	92 cf       	rjmp	.-220    	; 0x1b82 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x48>
    1c5e:	98 cf       	rjmp	.-208    	; 0x1b90 <_ZN3L3G4initENS_10deviceTypeENS_8sa0StateE+0x56>
      address = (sa0 == sa0_high) ? L3G4200D_SA0_HIGH_ADDRESS : L3G4200D_SA0_LOW_ADDRESS;
      break;
  }
  
  return true;
}
    1c60:	df 91       	pop	r29
    1c62:	cf 91       	pop	r28
    1c64:	1f 91       	pop	r17
    1c66:	0f 91       	pop	r16
    1c68:	08 95       	ret

00001c6a <vListInitialise>:
	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
}
    1c6a:	fc 01       	movw	r30, r24
    1c6c:	03 96       	adiw	r24, 0x03	; 3
    1c6e:	92 83       	std	Z+2, r25	; 0x02
    1c70:	81 83       	std	Z+1, r24	; 0x01
    1c72:	2f ef       	ldi	r18, 0xFF	; 255
    1c74:	3f ef       	ldi	r19, 0xFF	; 255
    1c76:	34 83       	std	Z+4, r19	; 0x04
    1c78:	23 83       	std	Z+3, r18	; 0x03
    1c7a:	96 83       	std	Z+6, r25	; 0x06
    1c7c:	85 83       	std	Z+5, r24	; 0x05
    1c7e:	90 87       	std	Z+8, r25	; 0x08
    1c80:	87 83       	std	Z+7, r24	; 0x07
    1c82:	10 82       	st	Z, r1
    1c84:	08 95       	ret

00001c86 <vListInitialiseItem>:
    1c86:	fc 01       	movw	r30, r24
    1c88:	11 86       	std	Z+9, r1	; 0x09
    1c8a:	10 86       	std	Z+8, r1	; 0x08
    1c8c:	08 95       	ret

00001c8e <vListInsertEnd>:
    1c8e:	cf 93       	push	r28
    1c90:	df 93       	push	r29
    1c92:	9c 01       	movw	r18, r24
    1c94:	fb 01       	movw	r30, r22
    1c96:	dc 01       	movw	r26, r24
    1c98:	11 96       	adiw	r26, 0x01	; 1
    1c9a:	cd 91       	ld	r28, X+
    1c9c:	dc 91       	ld	r29, X
    1c9e:	12 97       	sbiw	r26, 0x02	; 2
    1ca0:	d3 83       	std	Z+3, r29	; 0x03
    1ca2:	c2 83       	std	Z+2, r28	; 0x02
    1ca4:	8c 81       	ldd	r24, Y+4	; 0x04
    1ca6:	9d 81       	ldd	r25, Y+5	; 0x05
    1ca8:	95 83       	std	Z+5, r25	; 0x05
    1caa:	84 83       	std	Z+4, r24	; 0x04
    1cac:	8c 81       	ldd	r24, Y+4	; 0x04
    1cae:	9d 81       	ldd	r25, Y+5	; 0x05
    1cb0:	dc 01       	movw	r26, r24
    1cb2:	13 96       	adiw	r26, 0x03	; 3
    1cb4:	7c 93       	st	X, r23
    1cb6:	6e 93       	st	-X, r22
    1cb8:	12 97       	sbiw	r26, 0x02	; 2
    1cba:	7d 83       	std	Y+5, r23	; 0x05
    1cbc:	6c 83       	std	Y+4, r22	; 0x04
    1cbe:	31 87       	std	Z+9, r19	; 0x09
    1cc0:	20 87       	std	Z+8, r18	; 0x08
    1cc2:	f9 01       	movw	r30, r18
    1cc4:	80 81       	ld	r24, Z
    1cc6:	8f 5f       	subi	r24, 0xFF	; 255
    1cc8:	80 83       	st	Z, r24
    1cca:	df 91       	pop	r29
    1ccc:	cf 91       	pop	r28
    1cce:	08 95       	ret

00001cd0 <uxListRemove>:
/*-----------------------------------------------------------*/

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
    1cd0:	cf 93       	push	r28
    1cd2:	df 93       	push	r29
    1cd4:	fc 01       	movw	r30, r24
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
    1cd6:	a0 85       	ldd	r26, Z+8	; 0x08
    1cd8:	b1 85       	ldd	r27, Z+9	; 0x09

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    1cda:	c2 81       	ldd	r28, Z+2	; 0x02
    1cdc:	d3 81       	ldd	r29, Z+3	; 0x03
    1cde:	84 81       	ldd	r24, Z+4	; 0x04
    1ce0:	95 81       	ldd	r25, Z+5	; 0x05
    1ce2:	9d 83       	std	Y+5, r25	; 0x05
    1ce4:	8c 83       	std	Y+4, r24	; 0x04
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
    1ce6:	c4 81       	ldd	r28, Z+4	; 0x04
    1ce8:	d5 81       	ldd	r29, Z+5	; 0x05
    1cea:	82 81       	ldd	r24, Z+2	; 0x02
    1cec:	93 81       	ldd	r25, Z+3	; 0x03
    1cee:	9b 83       	std	Y+3, r25	; 0x03
    1cf0:	8a 83       	std	Y+2, r24	; 0x02

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
    1cf2:	11 96       	adiw	r26, 0x01	; 1
    1cf4:	cd 91       	ld	r28, X+
    1cf6:	dc 91       	ld	r29, X
    1cf8:	12 97       	sbiw	r26, 0x02	; 2
    1cfa:	ce 17       	cp	r28, r30
    1cfc:	df 07       	cpc	r29, r31
    1cfe:	31 f4       	brne	.+12     	; 0x1d0c <uxListRemove+0x3c>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
    1d00:	8c 81       	ldd	r24, Y+4	; 0x04
    1d02:	9d 81       	ldd	r25, Y+5	; 0x05
    1d04:	12 96       	adiw	r26, 0x02	; 2
    1d06:	9c 93       	st	X, r25
    1d08:	8e 93       	st	-X, r24
    1d0a:	11 97       	sbiw	r26, 0x01	; 1
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
    1d0c:	11 86       	std	Z+9, r1	; 0x09
    1d0e:	10 86       	std	Z+8, r1	; 0x08
	( pxList->uxNumberOfItems )--;
    1d10:	8c 91       	ld	r24, X
    1d12:	81 50       	subi	r24, 0x01	; 1
    1d14:	8c 93       	st	X, r24

	return pxList->uxNumberOfItems;
}
    1d16:	df 91       	pop	r29
    1d18:	cf 91       	pop	r28
    1d1a:	08 95       	ret

00001d1c <_ZN6LSM303C1Ev>:
// Reads all 6 channels of the LSM303 and stores them in the object variables
void LSM303::read(void)
{
  readAcc();
  readMag();
}
    1d1c:	cf 93       	push	r28
    1d1e:	df 93       	push	r29
    1d20:	ec 01       	movw	r28, r24
    1d22:	86 e0       	ldi	r24, 0x06	; 6
    1d24:	e0 e6       	ldi	r30, 0x60	; 96
    1d26:	f2 e0       	ldi	r31, 0x02	; 2
    1d28:	de 01       	movw	r26, r28
    1d2a:	52 96       	adiw	r26, 0x12	; 18
    1d2c:	01 90       	ld	r0, Z+
    1d2e:	0d 92       	st	X+, r0
    1d30:	8a 95       	dec	r24
    1d32:	e1 f7       	brne	.-8      	; 0x1d2c <_ZN6LSM303C1Ev+0x10>
    1d34:	86 e0       	ldi	r24, 0x06	; 6
    1d36:	e6 e6       	ldi	r30, 0x66	; 102
    1d38:	f2 e0       	ldi	r31, 0x02	; 2
    1d3a:	de 01       	movw	r26, r28
    1d3c:	1c 96       	adiw	r26, 0x0c	; 12
    1d3e:	01 90       	ld	r0, Z+
    1d40:	0d 92       	st	X+, r0
    1d42:	8a 95       	dec	r24
    1d44:	e1 f7       	brne	.-8      	; 0x1d3e <_ZN6LSM303C1Ev+0x22>
    1d46:	84 e0       	ldi	r24, 0x04	; 4
    1d48:	89 8f       	std	Y+25, r24	; 0x19
    1d4a:	1c a2       	std	Y+36, r1	; 0x24
    1d4c:	1b a2       	std	Y+35, r1	; 0x23
    1d4e:	1d a2       	std	Y+37, r1	; 0x25
    1d50:	df 91       	pop	r29
    1d52:	cf 91       	pop	r28
    1d54:	08 95       	ret

00001d56 <_ZN6LSM30316vector_normalizeEPNS_6vectorIfEE>:
    1d56:	4f 92       	push	r4
    1d58:	5f 92       	push	r5
    1d5a:	6f 92       	push	r6
    1d5c:	7f 92       	push	r7
    1d5e:	8f 92       	push	r8
    1d60:	9f 92       	push	r9
    1d62:	af 92       	push	r10
    1d64:	bf 92       	push	r11
    1d66:	cf 92       	push	r12
    1d68:	df 92       	push	r13
    1d6a:	ef 92       	push	r14
    1d6c:	ff 92       	push	r15
    1d6e:	0f 93       	push	r16
    1d70:	1f 93       	push	r17
    1d72:	cf 93       	push	r28
    1d74:	df 93       	push	r29
    1d76:	00 d0       	rcall	.+0      	; 0x1d78 <_ZN6LSM30316vector_normalizeEPNS_6vectorIfEE+0x22>
    1d78:	1f 92       	push	r1
    1d7a:	cd b7       	in	r28, 0x3d	; 61
    1d7c:	de b7       	in	r29, 0x3e	; 62
    1d7e:	8c 01       	movw	r16, r24
    1d80:	dc 01       	movw	r26, r24
    1d82:	4d 90       	ld	r4, X+
    1d84:	5d 90       	ld	r5, X+
    1d86:	6d 90       	ld	r6, X+
    1d88:	7c 90       	ld	r7, X
    1d8a:	13 97       	sbiw	r26, 0x03	; 3
    1d8c:	14 96       	adiw	r26, 0x04	; 4
    1d8e:	8d 90       	ld	r8, X+
    1d90:	9d 90       	ld	r9, X+
    1d92:	ad 90       	ld	r10, X+
    1d94:	bc 90       	ld	r11, X
    1d96:	17 97       	sbiw	r26, 0x07	; 7
    1d98:	18 96       	adiw	r26, 0x08	; 8
    1d9a:	8d 91       	ld	r24, X+
    1d9c:	9d 91       	ld	r25, X+
    1d9e:	0d 90       	ld	r0, X+
    1da0:	bc 91       	ld	r27, X
    1da2:	a0 2d       	mov	r26, r0
    1da4:	89 83       	std	Y+1, r24	; 0x01
    1da6:	9a 83       	std	Y+2, r25	; 0x02
    1da8:	ab 83       	std	Y+3, r26	; 0x03
    1daa:	bc 83       	std	Y+4, r27	; 0x04
    1dac:	a3 01       	movw	r20, r6
    1dae:	92 01       	movw	r18, r4
    1db0:	c3 01       	movw	r24, r6
    1db2:	b2 01       	movw	r22, r4
    1db4:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    1db8:	6b 01       	movw	r12, r22
    1dba:	7c 01       	movw	r14, r24
    1dbc:	a5 01       	movw	r20, r10
    1dbe:	94 01       	movw	r18, r8
    1dc0:	c5 01       	movw	r24, r10
    1dc2:	b4 01       	movw	r22, r8
    1dc4:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    1dc8:	9b 01       	movw	r18, r22
    1dca:	ac 01       	movw	r20, r24
    1dcc:	c7 01       	movw	r24, r14
    1dce:	b6 01       	movw	r22, r12
    1dd0:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
    1dd4:	6b 01       	movw	r12, r22
    1dd6:	7c 01       	movw	r14, r24
    1dd8:	29 81       	ldd	r18, Y+1	; 0x01
    1dda:	3a 81       	ldd	r19, Y+2	; 0x02
    1ddc:	4b 81       	ldd	r20, Y+3	; 0x03
    1dde:	5c 81       	ldd	r21, Y+4	; 0x04
    1de0:	ca 01       	movw	r24, r20
    1de2:	b9 01       	movw	r22, r18
    1de4:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    1de8:	9b 01       	movw	r18, r22
    1dea:	ac 01       	movw	r20, r24
    1dec:	c7 01       	movw	r24, r14
    1dee:	b6 01       	movw	r22, r12
    1df0:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
    1df4:	0e 94 b6 1f 	call	0x3f6c	; 0x3f6c <sqrt>
    1df8:	6b 01       	movw	r12, r22
    1dfa:	7c 01       	movw	r14, r24
    1dfc:	9b 01       	movw	r18, r22
    1dfe:	ac 01       	movw	r20, r24
    1e00:	c3 01       	movw	r24, r6
    1e02:	b2 01       	movw	r22, r4
    1e04:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <__divsf3>
    1e08:	f8 01       	movw	r30, r16
    1e0a:	60 83       	st	Z, r22
    1e0c:	71 83       	std	Z+1, r23	; 0x01
    1e0e:	82 83       	std	Z+2, r24	; 0x02
    1e10:	93 83       	std	Z+3, r25	; 0x03
    1e12:	a7 01       	movw	r20, r14
    1e14:	96 01       	movw	r18, r12
    1e16:	c5 01       	movw	r24, r10
    1e18:	b4 01       	movw	r22, r8
    1e1a:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <__divsf3>
    1e1e:	d8 01       	movw	r26, r16
    1e20:	14 96       	adiw	r26, 0x04	; 4
    1e22:	6d 93       	st	X+, r22
    1e24:	7d 93       	st	X+, r23
    1e26:	8d 93       	st	X+, r24
    1e28:	9c 93       	st	X, r25
    1e2a:	17 97       	sbiw	r26, 0x07	; 7
    1e2c:	a7 01       	movw	r20, r14
    1e2e:	96 01       	movw	r18, r12
    1e30:	69 81       	ldd	r22, Y+1	; 0x01
    1e32:	7a 81       	ldd	r23, Y+2	; 0x02
    1e34:	8b 81       	ldd	r24, Y+3	; 0x03
    1e36:	9c 81       	ldd	r25, Y+4	; 0x04
    1e38:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <__divsf3>
    1e3c:	f8 01       	movw	r30, r16
    1e3e:	60 87       	std	Z+8, r22	; 0x08
    1e40:	71 87       	std	Z+9, r23	; 0x09
    1e42:	82 87       	std	Z+10, r24	; 0x0a
    1e44:	93 87       	std	Z+11, r25	; 0x0b
    1e46:	0f 90       	pop	r0
    1e48:	0f 90       	pop	r0
    1e4a:	0f 90       	pop	r0
    1e4c:	0f 90       	pop	r0
    1e4e:	df 91       	pop	r29
    1e50:	cf 91       	pop	r28
    1e52:	1f 91       	pop	r17
    1e54:	0f 91       	pop	r16
    1e56:	ff 90       	pop	r15
    1e58:	ef 90       	pop	r14
    1e5a:	df 90       	pop	r13
    1e5c:	cf 90       	pop	r12
    1e5e:	bf 90       	pop	r11
    1e60:	af 90       	pop	r10
    1e62:	9f 90       	pop	r9
    1e64:	8f 90       	pop	r8
    1e66:	7f 90       	pop	r7
    1e68:	6f 90       	pop	r6
    1e6a:	5f 90       	pop	r5
    1e6c:	4f 90       	pop	r4
    1e6e:	08 95       	ret

00001e70 <_ZN6LSM3037headingIiEEfNS_6vectorIT_EE>:
    1e70:	4f 92       	push	r4
    1e72:	5f 92       	push	r5
    1e74:	6f 92       	push	r6
    1e76:	7f 92       	push	r7
    1e78:	8f 92       	push	r8
    1e7a:	9f 92       	push	r9
    1e7c:	af 92       	push	r10
    1e7e:	bf 92       	push	r11
    1e80:	cf 92       	push	r12
    1e82:	df 92       	push	r13
    1e84:	ef 92       	push	r14
    1e86:	ff 92       	push	r15
    1e88:	0f 93       	push	r16
    1e8a:	1f 93       	push	r17
    1e8c:	cf 93       	push	r28
    1e8e:	df 93       	push	r29
    1e90:	cd b7       	in	r28, 0x3d	; 61
    1e92:	de b7       	in	r29, 0x3e	; 62
    1e94:	aa 97       	sbiw	r28, 0x2a	; 42
    1e96:	0f b6       	in	r0, 0x3f	; 63
    1e98:	f8 94       	cli
    1e9a:	de bf       	out	0x3e, r29	; 62
    1e9c:	0f be       	out	0x3f, r0	; 63
    1e9e:	cd bf       	out	0x3d, r28	; 61
    1ea0:	8c 01       	movw	r16, r24
    1ea2:	29 8f       	std	Y+25, r18	; 0x19
    1ea4:	3a 8f       	std	Y+26, r19	; 0x1a
    1ea6:	4b 8f       	std	Y+27, r20	; 0x1b
    1ea8:	5c 8f       	std	Y+28, r21	; 0x1c
    1eaa:	6d 8f       	std	Y+29, r22	; 0x1d
    1eac:	7e 8f       	std	Y+30, r23	; 0x1e
    1eae:	dc 01       	movw	r26, r24
    1eb0:	16 96       	adiw	r26, 0x06	; 6
    1eb2:	cd 90       	ld	r12, X+
    1eb4:	dc 90       	ld	r13, X
    1eb6:	17 97       	sbiw	r26, 0x07	; 7
    1eb8:	ee 24       	eor	r14, r14
    1eba:	d7 fc       	sbrc	r13, 7
    1ebc:	e0 94       	com	r14
    1ebe:	fe 2c       	mov	r15, r14
    1ec0:	52 96       	adiw	r26, 0x12	; 18
    1ec2:	4d 91       	ld	r20, X+
    1ec4:	5c 91       	ld	r21, X
    1ec6:	53 97       	sbiw	r26, 0x13	; 19
    1ec8:	66 27       	eor	r22, r22
    1eca:	57 fd       	sbrc	r21, 7
    1ecc:	60 95       	com	r22
    1ece:	76 2f       	mov	r23, r22
    1ed0:	1c 96       	adiw	r26, 0x0c	; 12
    1ed2:	8d 91       	ld	r24, X+
    1ed4:	9c 91       	ld	r25, X
    1ed6:	1d 97       	sbiw	r26, 0x0d	; 13
    1ed8:	aa 27       	eor	r26, r26
    1eda:	97 fd       	sbrc	r25, 7
    1edc:	a0 95       	com	r26
    1ede:	ba 2f       	mov	r27, r26
    1ee0:	48 0f       	add	r20, r24
    1ee2:	59 1f       	adc	r21, r25
    1ee4:	6a 1f       	adc	r22, r26
    1ee6:	7b 1f       	adc	r23, r27
    1ee8:	db 01       	movw	r26, r22
    1eea:	ca 01       	movw	r24, r20
    1eec:	77 23       	and	r23, r23
    1eee:	1c f4       	brge	.+6      	; 0x1ef6 <_ZN6LSM3037headingIiEEfNS_6vectorIT_EE+0x86>
    1ef0:	01 96       	adiw	r24, 0x01	; 1
    1ef2:	a1 1d       	adc	r26, r1
    1ef4:	b1 1d       	adc	r27, r1
    1ef6:	b5 95       	asr	r27
    1ef8:	a7 95       	ror	r26
    1efa:	97 95       	ror	r25
    1efc:	87 95       	ror	r24
    1efe:	a7 01       	movw	r20, r14
    1f00:	96 01       	movw	r18, r12
    1f02:	28 1b       	sub	r18, r24
    1f04:	39 0b       	sbc	r19, r25
    1f06:	4a 0b       	sbc	r20, r26
    1f08:	5b 0b       	sbc	r21, r27
    1f0a:	2f 8f       	std	Y+31, r18	; 0x1f
    1f0c:	38 a3       	std	Y+32, r19	; 0x20
    1f0e:	49 a3       	std	Y+33, r20	; 0x21
    1f10:	5a a3       	std	Y+34, r21	; 0x22
    1f12:	d8 01       	movw	r26, r16
    1f14:	18 96       	adiw	r26, 0x08	; 8
    1f16:	cd 90       	ld	r12, X+
    1f18:	dc 90       	ld	r13, X
    1f1a:	19 97       	sbiw	r26, 0x09	; 9
    1f1c:	ee 24       	eor	r14, r14
    1f1e:	d7 fc       	sbrc	r13, 7
    1f20:	e0 94       	com	r14
    1f22:	fe 2c       	mov	r15, r14
    1f24:	54 96       	adiw	r26, 0x14	; 20
    1f26:	4d 91       	ld	r20, X+
    1f28:	5c 91       	ld	r21, X
    1f2a:	55 97       	sbiw	r26, 0x15	; 21
    1f2c:	66 27       	eor	r22, r22
    1f2e:	57 fd       	sbrc	r21, 7
    1f30:	60 95       	com	r22
    1f32:	76 2f       	mov	r23, r22
    1f34:	1e 96       	adiw	r26, 0x0e	; 14
    1f36:	8d 91       	ld	r24, X+
    1f38:	9c 91       	ld	r25, X
    1f3a:	1f 97       	sbiw	r26, 0x0f	; 15
    1f3c:	aa 27       	eor	r26, r26
    1f3e:	97 fd       	sbrc	r25, 7
    1f40:	a0 95       	com	r26
    1f42:	ba 2f       	mov	r27, r26
    1f44:	48 0f       	add	r20, r24
    1f46:	59 1f       	adc	r21, r25
    1f48:	6a 1f       	adc	r22, r26
    1f4a:	7b 1f       	adc	r23, r27
    1f4c:	db 01       	movw	r26, r22
    1f4e:	ca 01       	movw	r24, r20
    1f50:	77 23       	and	r23, r23
    1f52:	1c f4       	brge	.+6      	; 0x1f5a <_ZN6LSM3037headingIiEEfNS_6vectorIT_EE+0xea>
    1f54:	01 96       	adiw	r24, 0x01	; 1
    1f56:	a1 1d       	adc	r26, r1
    1f58:	b1 1d       	adc	r27, r1
    1f5a:	b5 95       	asr	r27
    1f5c:	a7 95       	ror	r26
    1f5e:	97 95       	ror	r25
    1f60:	87 95       	ror	r24
    1f62:	a7 01       	movw	r20, r14
    1f64:	96 01       	movw	r18, r12
    1f66:	28 1b       	sub	r18, r24
    1f68:	39 0b       	sbc	r19, r25
    1f6a:	4a 0b       	sbc	r20, r26
    1f6c:	5b 0b       	sbc	r21, r27
    1f6e:	2b a3       	std	Y+35, r18	; 0x23
    1f70:	3c a3       	std	Y+36, r19	; 0x24
    1f72:	4d a3       	std	Y+37, r20	; 0x25
    1f74:	5e a3       	std	Y+38, r21	; 0x26
    1f76:	d8 01       	movw	r26, r16
    1f78:	1a 96       	adiw	r26, 0x0a	; 10
    1f7a:	4d 90       	ld	r4, X+
    1f7c:	5c 90       	ld	r5, X
    1f7e:	1b 97       	sbiw	r26, 0x0b	; 11
    1f80:	66 24       	eor	r6, r6
    1f82:	57 fc       	sbrc	r5, 7
    1f84:	60 94       	com	r6
    1f86:	76 2c       	mov	r7, r6
    1f88:	56 96       	adiw	r26, 0x16	; 22
    1f8a:	4d 91       	ld	r20, X+
    1f8c:	5c 91       	ld	r21, X
    1f8e:	57 97       	sbiw	r26, 0x17	; 23
    1f90:	66 27       	eor	r22, r22
    1f92:	57 fd       	sbrc	r21, 7
    1f94:	60 95       	com	r22
    1f96:	76 2f       	mov	r23, r22
    1f98:	50 96       	adiw	r26, 0x10	; 16
    1f9a:	8d 91       	ld	r24, X+
    1f9c:	9c 91       	ld	r25, X
    1f9e:	51 97       	sbiw	r26, 0x11	; 17
    1fa0:	aa 27       	eor	r26, r26
    1fa2:	97 fd       	sbrc	r25, 7
    1fa4:	a0 95       	com	r26
    1fa6:	ba 2f       	mov	r27, r26
    1fa8:	48 0f       	add	r20, r24
    1faa:	59 1f       	adc	r21, r25
    1fac:	6a 1f       	adc	r22, r26
    1fae:	7b 1f       	adc	r23, r27
    1fb0:	db 01       	movw	r26, r22
    1fb2:	ca 01       	movw	r24, r20
    1fb4:	77 23       	and	r23, r23
    1fb6:	1c f4       	brge	.+6      	; 0x1fbe <_ZN6LSM3037headingIiEEfNS_6vectorIT_EE+0x14e>
    1fb8:	01 96       	adiw	r24, 0x01	; 1
    1fba:	a1 1d       	adc	r26, r1
    1fbc:	b1 1d       	adc	r27, r1
    1fbe:	b5 95       	asr	r27
    1fc0:	a7 95       	ror	r26
    1fc2:	97 95       	ror	r25
    1fc4:	87 95       	ror	r24
    1fc6:	48 1a       	sub	r4, r24
    1fc8:	59 0a       	sbc	r5, r25
    1fca:	6a 0a       	sbc	r6, r26
    1fcc:	7b 0a       	sbc	r7, r27
    1fce:	f8 01       	movw	r30, r16
    1fd0:	84 80       	ldd	r8, Z+4	; 0x04
    1fd2:	95 80       	ldd	r9, Z+5	; 0x05
    1fd4:	aa 24       	eor	r10, r10
    1fd6:	97 fc       	sbrc	r9, 7
    1fd8:	a0 94       	com	r10
    1fda:	ba 2c       	mov	r11, r10
    1fdc:	82 81       	ldd	r24, Z+2	; 0x02
    1fde:	93 81       	ldd	r25, Z+3	; 0x03
    1fe0:	9c 01       	movw	r18, r24
    1fe2:	44 27       	eor	r20, r20
    1fe4:	37 fd       	sbrc	r19, 7
    1fe6:	40 95       	com	r20
    1fe8:	54 2f       	mov	r21, r20
    1fea:	2f a3       	std	Y+39, r18	; 0x27
    1fec:	38 a7       	std	Y+40, r19	; 0x28
    1fee:	49 a7       	std	Y+41, r20	; 0x29
    1ff0:	5a a7       	std	Y+42, r21	; 0x2a
    1ff2:	2b a1       	ldd	r18, Y+35	; 0x23
    1ff4:	3c a1       	ldd	r19, Y+36	; 0x24
    1ff6:	4d a1       	ldd	r20, Y+37	; 0x25
    1ff8:	5e a1       	ldd	r21, Y+38	; 0x26
    1ffa:	c5 01       	movw	r24, r10
    1ffc:	b4 01       	movw	r22, r8
    1ffe:	0e 94 85 26 	call	0x4d0a	; 0x4d0a <__mulsi3>
    2002:	6b 01       	movw	r12, r22
    2004:	7c 01       	movw	r14, r24
    2006:	a3 01       	movw	r20, r6
    2008:	92 01       	movw	r18, r4
    200a:	6f a1       	ldd	r22, Y+39	; 0x27
    200c:	78 a5       	ldd	r23, Y+40	; 0x28
    200e:	89 a5       	ldd	r24, Y+41	; 0x29
    2010:	9a a5       	ldd	r25, Y+42	; 0x2a
    2012:	0e 94 85 26 	call	0x4d0a	; 0x4d0a <__mulsi3>
    2016:	a7 01       	movw	r20, r14
    2018:	96 01       	movw	r18, r12
    201a:	26 1b       	sub	r18, r22
    201c:	37 0b       	sbc	r19, r23
    201e:	48 0b       	sbc	r20, r24
    2020:	59 0b       	sbc	r21, r25
    2022:	ca 01       	movw	r24, r20
    2024:	b9 01       	movw	r22, r18
    2026:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    202a:	6d 87       	std	Y+13, r22	; 0x0d
    202c:	7e 87       	std	Y+14, r23	; 0x0e
    202e:	8f 87       	std	Y+15, r24	; 0x0f
    2030:	98 8b       	std	Y+16, r25	; 0x10
    2032:	d8 01       	movw	r26, r16
    2034:	cd 90       	ld	r12, X+
    2036:	dc 90       	ld	r13, X
    2038:	ee 24       	eor	r14, r14
    203a:	d7 fc       	sbrc	r13, 7
    203c:	e0 94       	com	r14
    203e:	fe 2c       	mov	r15, r14
    2040:	a3 01       	movw	r20, r6
    2042:	92 01       	movw	r18, r4
    2044:	c7 01       	movw	r24, r14
    2046:	b6 01       	movw	r22, r12
    2048:	0e 94 85 26 	call	0x4d0a	; 0x4d0a <__mulsi3>
    204c:	2b 01       	movw	r4, r22
    204e:	3c 01       	movw	r6, r24
    2050:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2052:	38 a1       	ldd	r19, Y+32	; 0x20
    2054:	49 a1       	ldd	r20, Y+33	; 0x21
    2056:	5a a1       	ldd	r21, Y+34	; 0x22
    2058:	c5 01       	movw	r24, r10
    205a:	b4 01       	movw	r22, r8
    205c:	0e 94 85 26 	call	0x4d0a	; 0x4d0a <__mulsi3>
    2060:	a3 01       	movw	r20, r6
    2062:	92 01       	movw	r18, r4
    2064:	26 1b       	sub	r18, r22
    2066:	37 0b       	sbc	r19, r23
    2068:	48 0b       	sbc	r20, r24
    206a:	59 0b       	sbc	r21, r25
    206c:	ca 01       	movw	r24, r20
    206e:	b9 01       	movw	r22, r18
    2070:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    2074:	69 8b       	std	Y+17, r22	; 0x11
    2076:	7a 8b       	std	Y+18, r23	; 0x12
    2078:	8b 8b       	std	Y+19, r24	; 0x13
    207a:	9c 8b       	std	Y+20, r25	; 0x14
    207c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    207e:	38 a1       	ldd	r19, Y+32	; 0x20
    2080:	49 a1       	ldd	r20, Y+33	; 0x21
    2082:	5a a1       	ldd	r21, Y+34	; 0x22
    2084:	6f a1       	ldd	r22, Y+39	; 0x27
    2086:	78 a5       	ldd	r23, Y+40	; 0x28
    2088:	89 a5       	ldd	r24, Y+41	; 0x29
    208a:	9a a5       	ldd	r25, Y+42	; 0x2a
    208c:	0e 94 85 26 	call	0x4d0a	; 0x4d0a <__mulsi3>
    2090:	4b 01       	movw	r8, r22
    2092:	5c 01       	movw	r10, r24
    2094:	2b a1       	ldd	r18, Y+35	; 0x23
    2096:	3c a1       	ldd	r19, Y+36	; 0x24
    2098:	4d a1       	ldd	r20, Y+37	; 0x25
    209a:	5e a1       	ldd	r21, Y+38	; 0x26
    209c:	c7 01       	movw	r24, r14
    209e:	b6 01       	movw	r22, r12
    20a0:	0e 94 85 26 	call	0x4d0a	; 0x4d0a <__mulsi3>
    20a4:	a5 01       	movw	r20, r10
    20a6:	94 01       	movw	r18, r8
    20a8:	26 1b       	sub	r18, r22
    20aa:	37 0b       	sbc	r19, r23
    20ac:	48 0b       	sbc	r20, r24
    20ae:	59 0b       	sbc	r21, r25
    20b0:	ca 01       	movw	r24, r20
    20b2:	b9 01       	movw	r22, r18
    20b4:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    20b8:	6d 8b       	std	Y+21, r22	; 0x15
    20ba:	7e 8b       	std	Y+22, r23	; 0x16
    20bc:	8f 8b       	std	Y+23, r24	; 0x17
    20be:	98 8f       	std	Y+24, r25	; 0x18
    20c0:	ce 01       	movw	r24, r28
    20c2:	0d 96       	adiw	r24, 0x0d	; 13
    20c4:	48 de       	rcall	.-880    	; 0x1d56 <_ZN6LSM30316vector_normalizeEPNS_6vectorIfEE>
    20c6:	d8 01       	movw	r26, r16
    20c8:	12 96       	adiw	r26, 0x02	; 2
    20ca:	6d 91       	ld	r22, X+
    20cc:	7c 91       	ld	r23, X
    20ce:	13 97       	sbiw	r26, 0x03	; 3
    20d0:	88 27       	eor	r24, r24
    20d2:	77 fd       	sbrc	r23, 7
    20d4:	80 95       	com	r24
    20d6:	98 2f       	mov	r25, r24
    20d8:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    20dc:	6b 01       	movw	r12, r22
    20de:	7c 01       	movw	r14, r24
    20e0:	2d 89       	ldd	r18, Y+21	; 0x15
    20e2:	3e 89       	ldd	r19, Y+22	; 0x16
    20e4:	4f 89       	ldd	r20, Y+23	; 0x17
    20e6:	58 8d       	ldd	r21, Y+24	; 0x18
    20e8:	2f 8f       	std	Y+31, r18	; 0x1f
    20ea:	38 a3       	std	Y+32, r19	; 0x20
    20ec:	49 a3       	std	Y+33, r20	; 0x21
    20ee:	5a a3       	std	Y+34, r21	; 0x22
    20f0:	d8 01       	movw	r26, r16
    20f2:	14 96       	adiw	r26, 0x04	; 4
    20f4:	6d 91       	ld	r22, X+
    20f6:	7c 91       	ld	r23, X
    20f8:	15 97       	sbiw	r26, 0x05	; 5
    20fa:	88 27       	eor	r24, r24
    20fc:	77 fd       	sbrc	r23, 7
    20fe:	80 95       	com	r24
    2100:	98 2f       	mov	r25, r24
    2102:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    2106:	2b 01       	movw	r4, r22
    2108:	3c 01       	movw	r6, r24
    210a:	29 89       	ldd	r18, Y+17	; 0x11
    210c:	3a 89       	ldd	r19, Y+18	; 0x12
    210e:	4b 89       	ldd	r20, Y+19	; 0x13
    2110:	5c 89       	ldd	r21, Y+20	; 0x14
    2112:	2b a3       	std	Y+35, r18	; 0x23
    2114:	3c a3       	std	Y+36, r19	; 0x24
    2116:	4d a3       	std	Y+37, r20	; 0x25
    2118:	5e a3       	std	Y+38, r21	; 0x26
    211a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    211c:	38 a1       	ldd	r19, Y+32	; 0x20
    211e:	49 a1       	ldd	r20, Y+33	; 0x21
    2120:	5a a1       	ldd	r21, Y+34	; 0x22
    2122:	c7 01       	movw	r24, r14
    2124:	b6 01       	movw	r22, r12
    2126:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    212a:	4b 01       	movw	r8, r22
    212c:	5c 01       	movw	r10, r24
    212e:	2b a1       	ldd	r18, Y+35	; 0x23
    2130:	3c a1       	ldd	r19, Y+36	; 0x24
    2132:	4d a1       	ldd	r20, Y+37	; 0x25
    2134:	5e a1       	ldd	r21, Y+38	; 0x26
    2136:	c3 01       	movw	r24, r6
    2138:	b2 01       	movw	r22, r4
    213a:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    213e:	9b 01       	movw	r18, r22
    2140:	ac 01       	movw	r20, r24
    2142:	c5 01       	movw	r24, r10
    2144:	b4 01       	movw	r22, r8
    2146:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
    214a:	69 83       	std	Y+1, r22	; 0x01
    214c:	7a 83       	std	Y+2, r23	; 0x02
    214e:	8b 83       	std	Y+3, r24	; 0x03
    2150:	9c 83       	std	Y+4, r25	; 0x04
    2152:	8d 85       	ldd	r24, Y+13	; 0x0d
    2154:	9e 85       	ldd	r25, Y+14	; 0x0e
    2156:	af 85       	ldd	r26, Y+15	; 0x0f
    2158:	b8 89       	ldd	r27, Y+16	; 0x10
    215a:	8f a3       	std	Y+39, r24	; 0x27
    215c:	98 a7       	std	Y+40, r25	; 0x28
    215e:	a9 a7       	std	Y+41, r26	; 0x29
    2160:	ba a7       	std	Y+42, r27	; 0x2a
    2162:	d8 01       	movw	r26, r16
    2164:	6d 91       	ld	r22, X+
    2166:	7c 91       	ld	r23, X
    2168:	88 27       	eor	r24, r24
    216a:	77 fd       	sbrc	r23, 7
    216c:	80 95       	com	r24
    216e:	98 2f       	mov	r25, r24
    2170:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    2174:	4b 01       	movw	r8, r22
    2176:	5c 01       	movw	r10, r24
    2178:	2f a1       	ldd	r18, Y+39	; 0x27
    217a:	38 a5       	ldd	r19, Y+40	; 0x28
    217c:	49 a5       	ldd	r20, Y+41	; 0x29
    217e:	5a a5       	ldd	r21, Y+42	; 0x2a
    2180:	c3 01       	movw	r24, r6
    2182:	b2 01       	movw	r22, r4
    2184:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    2188:	2b 01       	movw	r4, r22
    218a:	3c 01       	movw	r6, r24
    218c:	a5 01       	movw	r20, r10
    218e:	94 01       	movw	r18, r8
    2190:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2192:	78 a1       	ldd	r23, Y+32	; 0x20
    2194:	89 a1       	ldd	r24, Y+33	; 0x21
    2196:	9a a1       	ldd	r25, Y+34	; 0x22
    2198:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    219c:	9b 01       	movw	r18, r22
    219e:	ac 01       	movw	r20, r24
    21a0:	c3 01       	movw	r24, r6
    21a2:	b2 01       	movw	r22, r4
    21a4:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
    21a8:	6d 83       	std	Y+5, r22	; 0x05
    21aa:	7e 83       	std	Y+6, r23	; 0x06
    21ac:	8f 83       	std	Y+7, r24	; 0x07
    21ae:	98 87       	std	Y+8, r25	; 0x08
    21b0:	a5 01       	movw	r20, r10
    21b2:	94 01       	movw	r18, r8
    21b4:	6b a1       	ldd	r22, Y+35	; 0x23
    21b6:	7c a1       	ldd	r23, Y+36	; 0x24
    21b8:	8d a1       	ldd	r24, Y+37	; 0x25
    21ba:	9e a1       	ldd	r25, Y+38	; 0x26
    21bc:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    21c0:	4b 01       	movw	r8, r22
    21c2:	5c 01       	movw	r10, r24
    21c4:	2f a1       	ldd	r18, Y+39	; 0x27
    21c6:	38 a5       	ldd	r19, Y+40	; 0x28
    21c8:	49 a5       	ldd	r20, Y+41	; 0x29
    21ca:	5a a5       	ldd	r21, Y+42	; 0x2a
    21cc:	c7 01       	movw	r24, r14
    21ce:	b6 01       	movw	r22, r12
    21d0:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    21d4:	9b 01       	movw	r18, r22
    21d6:	ac 01       	movw	r20, r24
    21d8:	c5 01       	movw	r24, r10
    21da:	b4 01       	movw	r22, r8
    21dc:	0e 94 b5 1c 	call	0x396a	; 0x396a <__subsf3>
    21e0:	69 87       	std	Y+9, r22	; 0x09
    21e2:	7a 87       	std	Y+10, r23	; 0x0a
    21e4:	8b 87       	std	Y+11, r24	; 0x0b
    21e6:	9c 87       	std	Y+12, r25	; 0x0c
    21e8:	ce 01       	movw	r24, r28
    21ea:	01 96       	adiw	r24, 0x01	; 1
    21ec:	b4 dd       	rcall	.-1176   	; 0x1d56 <_ZN6LSM30316vector_normalizeEPNS_6vectorIfEE>
    21ee:	69 8d       	ldd	r22, Y+25	; 0x19
    21f0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    21f2:	88 27       	eor	r24, r24
    21f4:	77 fd       	sbrc	r23, 7
    21f6:	80 95       	com	r24
    21f8:	98 2f       	mov	r25, r24
    21fa:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    21fe:	2b 01       	movw	r4, r22
    2200:	3c 01       	movw	r6, r24
    2202:	6b 8d       	ldd	r22, Y+27	; 0x1b
    2204:	7c 8d       	ldd	r23, Y+28	; 0x1c
    2206:	88 27       	eor	r24, r24
    2208:	77 fd       	sbrc	r23, 7
    220a:	80 95       	com	r24
    220c:	98 2f       	mov	r25, r24
    220e:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    2212:	4b 01       	movw	r8, r22
    2214:	5c 01       	movw	r10, r24
    2216:	6d 8d       	ldd	r22, Y+29	; 0x1d
    2218:	7e 8d       	ldd	r23, Y+30	; 0x1e
    221a:	88 27       	eor	r24, r24
    221c:	77 fd       	sbrc	r23, 7
    221e:	80 95       	com	r24
    2220:	98 2f       	mov	r25, r24
    2222:	0e 94 04 1e 	call	0x3c08	; 0x3c08 <__floatsisf>
    2226:	6b 01       	movw	r12, r22
    2228:	7c 01       	movw	r14, r24
    222a:	29 81       	ldd	r18, Y+1	; 0x01
    222c:	3a 81       	ldd	r19, Y+2	; 0x02
    222e:	4b 81       	ldd	r20, Y+3	; 0x03
    2230:	5c 81       	ldd	r21, Y+4	; 0x04
    2232:	c3 01       	movw	r24, r6
    2234:	b2 01       	movw	r22, r4
    2236:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    223a:	6f 8f       	std	Y+31, r22	; 0x1f
    223c:	78 a3       	std	Y+32, r23	; 0x20
    223e:	89 a3       	std	Y+33, r24	; 0x21
    2240:	9a a3       	std	Y+34, r25	; 0x22
    2242:	2d 81       	ldd	r18, Y+5	; 0x05
    2244:	3e 81       	ldd	r19, Y+6	; 0x06
    2246:	4f 81       	ldd	r20, Y+7	; 0x07
    2248:	58 85       	ldd	r21, Y+8	; 0x08
    224a:	c5 01       	movw	r24, r10
    224c:	b4 01       	movw	r22, r8
    224e:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    2252:	9b 01       	movw	r18, r22
    2254:	ac 01       	movw	r20, r24
    2256:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2258:	78 a1       	ldd	r23, Y+32	; 0x20
    225a:	89 a1       	ldd	r24, Y+33	; 0x21
    225c:	9a a1       	ldd	r25, Y+34	; 0x22
    225e:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
    2262:	6f 8f       	std	Y+31, r22	; 0x1f
    2264:	78 a3       	std	Y+32, r23	; 0x20
    2266:	89 a3       	std	Y+33, r24	; 0x21
    2268:	9a a3       	std	Y+34, r25	; 0x22
    226a:	29 85       	ldd	r18, Y+9	; 0x09
    226c:	3a 85       	ldd	r19, Y+10	; 0x0a
    226e:	4b 85       	ldd	r20, Y+11	; 0x0b
    2270:	5c 85       	ldd	r21, Y+12	; 0x0c
    2272:	c7 01       	movw	r24, r14
    2274:	b6 01       	movw	r22, r12
    2276:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    227a:	9b 01       	movw	r18, r22
    227c:	ac 01       	movw	r20, r24
    227e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2280:	78 a1       	ldd	r23, Y+32	; 0x20
    2282:	89 a1       	ldd	r24, Y+33	; 0x21
    2284:	9a a1       	ldd	r25, Y+34	; 0x22
    2286:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
    228a:	6f 8f       	std	Y+31, r22	; 0x1f
    228c:	78 a3       	std	Y+32, r23	; 0x20
    228e:	89 a3       	std	Y+33, r24	; 0x21
    2290:	9a a3       	std	Y+34, r25	; 0x22
    2292:	2d 85       	ldd	r18, Y+13	; 0x0d
    2294:	3e 85       	ldd	r19, Y+14	; 0x0e
    2296:	4f 85       	ldd	r20, Y+15	; 0x0f
    2298:	58 89       	ldd	r21, Y+16	; 0x10
    229a:	c3 01       	movw	r24, r6
    229c:	b2 01       	movw	r22, r4
    229e:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    22a2:	2b 01       	movw	r4, r22
    22a4:	3c 01       	movw	r6, r24
    22a6:	29 89       	ldd	r18, Y+17	; 0x11
    22a8:	3a 89       	ldd	r19, Y+18	; 0x12
    22aa:	4b 89       	ldd	r20, Y+19	; 0x13
    22ac:	5c 89       	ldd	r21, Y+20	; 0x14
    22ae:	c5 01       	movw	r24, r10
    22b0:	b4 01       	movw	r22, r8
    22b2:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    22b6:	9b 01       	movw	r18, r22
    22b8:	ac 01       	movw	r20, r24
    22ba:	c3 01       	movw	r24, r6
    22bc:	b2 01       	movw	r22, r4
    22be:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
    22c2:	4b 01       	movw	r8, r22
    22c4:	5c 01       	movw	r10, r24
    22c6:	2d 89       	ldd	r18, Y+21	; 0x15
    22c8:	3e 89       	ldd	r19, Y+22	; 0x16
    22ca:	4f 89       	ldd	r20, Y+23	; 0x17
    22cc:	58 8d       	ldd	r21, Y+24	; 0x18
    22ce:	c7 01       	movw	r24, r14
    22d0:	b6 01       	movw	r22, r12
    22d2:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    22d6:	9b 01       	movw	r18, r22
    22d8:	ac 01       	movw	r20, r24
    22da:	c5 01       	movw	r24, r10
    22dc:	b4 01       	movw	r22, r8
    22de:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
    22e2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    22e4:	38 a1       	ldd	r19, Y+32	; 0x20
    22e6:	49 a1       	ldd	r20, Y+33	; 0x21
    22e8:	5a a1       	ldd	r21, Y+34	; 0x22
    22ea:	0e 94 40 1d 	call	0x3a80	; 0x3a80 <atan2>
    22ee:	20 e0       	ldi	r18, 0x00	; 0
    22f0:	30 e0       	ldi	r19, 0x00	; 0
    22f2:	44 e3       	ldi	r20, 0x34	; 52
    22f4:	53 e4       	ldi	r21, 0x43	; 67
    22f6:	0e 94 49 1f 	call	0x3e92	; 0x3e92 <__mulsf3>
    22fa:	2b ed       	ldi	r18, 0xDB	; 219
    22fc:	3f e0       	ldi	r19, 0x0F	; 15
    22fe:	49 e4       	ldi	r20, 0x49	; 73
    2300:	50 e4       	ldi	r21, 0x40	; 64
    2302:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <__divsf3>
    2306:	6b 01       	movw	r12, r22
    2308:	7c 01       	movw	r14, r24
    230a:	20 e0       	ldi	r18, 0x00	; 0
    230c:	30 e0       	ldi	r19, 0x00	; 0
    230e:	a9 01       	movw	r20, r18
    2310:	0e 94 93 1d 	call	0x3b26	; 0x3b26 <__cmpsf2>
    2314:	88 23       	and	r24, r24
    2316:	54 f4       	brge	.+20     	; 0x232c <__stack+0x12d>
    2318:	20 e0       	ldi	r18, 0x00	; 0
    231a:	30 e0       	ldi	r19, 0x00	; 0
    231c:	44 eb       	ldi	r20, 0xB4	; 180
    231e:	53 e4       	ldi	r21, 0x43	; 67
    2320:	c7 01       	movw	r24, r14
    2322:	b6 01       	movw	r22, r12
    2324:	0e 94 b6 1c 	call	0x396c	; 0x396c <__addsf3>
    2328:	6b 01       	movw	r12, r22
    232a:	7c 01       	movw	r14, r24
    232c:	c7 01       	movw	r24, r14
    232e:	b6 01       	movw	r22, r12
    2330:	aa 96       	adiw	r28, 0x2a	; 42
    2332:	0f b6       	in	r0, 0x3f	; 63
    2334:	f8 94       	cli
    2336:	de bf       	out	0x3e, r29	; 62
    2338:	0f be       	out	0x3f, r0	; 63
    233a:	cd bf       	out	0x3d, r28	; 61
    233c:	df 91       	pop	r29
    233e:	cf 91       	pop	r28
    2340:	1f 91       	pop	r17
    2342:	0f 91       	pop	r16
    2344:	ff 90       	pop	r15
    2346:	ef 90       	pop	r14
    2348:	df 90       	pop	r13
    234a:	cf 90       	pop	r12
    234c:	bf 90       	pop	r11
    234e:	af 90       	pop	r10
    2350:	9f 90       	pop	r9
    2352:	8f 90       	pop	r8
    2354:	7f 90       	pop	r7
    2356:	6f 90       	pop	r6
    2358:	5f 90       	pop	r5
    235a:	4f 90       	pop	r4
    235c:	08 95       	ret

0000235e <_ZN6LSM3037headingEv>:
    235e:	cf 93       	push	r28
    2360:	df 93       	push	r29
    2362:	cd b7       	in	r28, 0x3d	; 61
    2364:	de b7       	in	r29, 0x3e	; 62
    2366:	2c 97       	sbiw	r28, 0x0c	; 12
    2368:	0f b6       	in	r0, 0x3f	; 63
    236a:	f8 94       	cli
    236c:	de bf       	out	0x3e, r29	; 62
    236e:	0f be       	out	0x3f, r0	; 63
    2370:	cd bf       	out	0x3d, r28	; 61
    2372:	fc 01       	movw	r30, r24
    2374:	21 8d       	ldd	r18, Z+25	; 0x19
    2376:	23 30       	cpi	r18, 0x03	; 3
    2378:	79 f4       	brne	.+30     	; 0x2398 <_ZN6LSM3037headingEv+0x3a>
    237a:	31 e0       	ldi	r19, 0x01	; 1
    237c:	23 2f       	mov	r18, r19
    237e:	3f 83       	std	Y+7, r19	; 0x07
    2380:	18 86       	std	Y+8, r1	; 0x08
    2382:	1a 86       	std	Y+10, r1	; 0x0a
    2384:	19 86       	std	Y+9, r1	; 0x09
    2386:	1c 86       	std	Y+12, r1	; 0x0c
    2388:	1b 86       	std	Y+11, r1	; 0x0b
    238a:	30 e0       	ldi	r19, 0x00	; 0
    238c:	40 e0       	ldi	r20, 0x00	; 0
    238e:	5a 85       	ldd	r21, Y+10	; 0x0a
    2390:	60 e0       	ldi	r22, 0x00	; 0
    2392:	7c 85       	ldd	r23, Y+12	; 0x0c
    2394:	6d dd       	rcall	.-1318   	; 0x1e70 <_ZN6LSM3037headingIiEEfNS_6vectorIT_EE>
    2396:	0e c0       	rjmp	.+28     	; 0x23b4 <_ZN6LSM3037headingEv+0x56>
    2398:	1a 82       	std	Y+2, r1	; 0x02
    239a:	19 82       	std	Y+1, r1	; 0x01
    239c:	2f ef       	ldi	r18, 0xFF	; 255
    239e:	42 2f       	mov	r20, r18
    23a0:	2b 83       	std	Y+3, r18	; 0x03
    23a2:	2c 83       	std	Y+4, r18	; 0x04
    23a4:	1e 82       	std	Y+6, r1	; 0x06
    23a6:	1d 82       	std	Y+5, r1	; 0x05
    23a8:	20 e0       	ldi	r18, 0x00	; 0
    23aa:	3a 81       	ldd	r19, Y+2	; 0x02
    23ac:	5f ef       	ldi	r21, 0xFF	; 255
    23ae:	60 e0       	ldi	r22, 0x00	; 0
    23b0:	7e 81       	ldd	r23, Y+6	; 0x06
    23b2:	5e dd       	rcall	.-1348   	; 0x1e70 <_ZN6LSM3037headingIiEEfNS_6vectorIT_EE>
    23b4:	2c 96       	adiw	r28, 0x0c	; 12
    23b6:	0f b6       	in	r0, 0x3f	; 63
    23b8:	f8 94       	cli
    23ba:	de bf       	out	0x3e, r29	; 62
    23bc:	0f be       	out	0x3f, r0	; 63
    23be:	cd bf       	out	0x3d, r28	; 61
    23c0:	df 91       	pop	r29
    23c2:	cf 91       	pop	r28
    23c4:	08 95       	ret

000023c6 <_ZN6LSM30311writeAccRegEhh>:
    23c6:	0f 93       	push	r16
    23c8:	1f 93       	push	r17
    23ca:	cf 93       	push	r28
    23cc:	df 93       	push	r29
    23ce:	ec 01       	movw	r28, r24
    23d0:	06 2f       	mov	r16, r22
    23d2:	14 2f       	mov	r17, r20
    23d4:	6a 8d       	ldd	r22, Y+26	; 0x1a
    23d6:	85 ef       	ldi	r24, 0xF5	; 245
    23d8:	9e e0       	ldi	r25, 0x0E	; 14
    23da:	0e 94 92 1c 	call	0x3924	; 0x3924 <_ZN7TwoWire17beginTransmissionEh>
    23de:	60 2f       	mov	r22, r16
    23e0:	85 ef       	ldi	r24, 0xF5	; 245
    23e2:	9e e0       	ldi	r25, 0x0E	; 14
    23e4:	0e 94 39 1c 	call	0x3872	; 0x3872 <_ZN7TwoWire5writeEh>
    23e8:	61 2f       	mov	r22, r17
    23ea:	85 ef       	ldi	r24, 0xF5	; 245
    23ec:	9e e0       	ldi	r25, 0x0E	; 14
    23ee:	0e 94 39 1c 	call	0x3872	; 0x3872 <_ZN7TwoWire5writeEh>
    23f2:	85 ef       	ldi	r24, 0xF5	; 245
    23f4:	9e e0       	ldi	r25, 0x0E	; 14
    23f6:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN7TwoWire15endTransmissionEv>
    23fa:	88 8f       	std	Y+24, r24	; 0x18
    23fc:	df 91       	pop	r29
    23fe:	cf 91       	pop	r28
    2400:	1f 91       	pop	r17
    2402:	0f 91       	pop	r16
    2404:	08 95       	ret

00002406 <_ZN6LSM30311writeMagRegEhh>:
    2406:	0f 93       	push	r16
    2408:	1f 93       	push	r17
    240a:	cf 93       	push	r28
    240c:	df 93       	push	r29
    240e:	ec 01       	movw	r28, r24
    2410:	06 2f       	mov	r16, r22
    2412:	14 2f       	mov	r17, r20
    2414:	6b 8d       	ldd	r22, Y+27	; 0x1b
    2416:	85 ef       	ldi	r24, 0xF5	; 245
    2418:	9e e0       	ldi	r25, 0x0E	; 14
    241a:	0e 94 92 1c 	call	0x3924	; 0x3924 <_ZN7TwoWire17beginTransmissionEh>
    241e:	60 2f       	mov	r22, r16
    2420:	85 ef       	ldi	r24, 0xF5	; 245
    2422:	9e e0       	ldi	r25, 0x0E	; 14
    2424:	0e 94 39 1c 	call	0x3872	; 0x3872 <_ZN7TwoWire5writeEh>
    2428:	61 2f       	mov	r22, r17
    242a:	85 ef       	ldi	r24, 0xF5	; 245
    242c:	9e e0       	ldi	r25, 0x0E	; 14
    242e:	0e 94 39 1c 	call	0x3872	; 0x3872 <_ZN7TwoWire5writeEh>
    2432:	85 ef       	ldi	r24, 0xF5	; 245
    2434:	9e e0       	ldi	r25, 0x0E	; 14
    2436:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN7TwoWire15endTransmissionEv>
    243a:	88 8f       	std	Y+24, r24	; 0x18
    243c:	df 91       	pop	r29
    243e:	cf 91       	pop	r28
    2440:	1f 91       	pop	r17
    2442:	0f 91       	pop	r16
    2444:	08 95       	ret

00002446 <_ZN6LSM3038writeRegEhh>:
    2446:	fc 01       	movw	r30, r24
    2448:	21 8d       	ldd	r18, Z+25	; 0x19
    244a:	23 30       	cpi	r18, 0x03	; 3
    244c:	11 f0       	breq	.+4      	; 0x2452 <_ZN6LSM3038writeRegEhh+0xc>
    244e:	60 32       	cpi	r22, 0x20	; 32
    2450:	10 f4       	brcc	.+4      	; 0x2456 <_ZN6LSM3038writeRegEhh+0x10>
    2452:	d9 cf       	rjmp	.-78     	; 0x2406 <_ZN6LSM30311writeMagRegEhh>
    2454:	08 95       	ret
    2456:	b7 cf       	rjmp	.-146    	; 0x23c6 <_ZN6LSM30311writeAccRegEhh>
    2458:	08 95       	ret

0000245a <_ZN6LSM30313enableDefaultEv>:
    245a:	cf 93       	push	r28
    245c:	df 93       	push	r29
    245e:	ec 01       	movw	r28, r24
    2460:	89 8d       	ldd	r24, Y+25	; 0x19
    2462:	83 30       	cpi	r24, 0x03	; 3
    2464:	a9 f4       	brne	.+42     	; 0x2490 <_ZN6LSM30313enableDefaultEv+0x36>
    2466:	40 e0       	ldi	r20, 0x00	; 0
    2468:	61 e2       	ldi	r22, 0x21	; 33
    246a:	ce 01       	movw	r24, r28
    246c:	ec df       	rcall	.-40     	; 0x2446 <_ZN6LSM3038writeRegEhh>
    246e:	47 e5       	ldi	r20, 0x57	; 87
    2470:	60 e2       	ldi	r22, 0x20	; 32
    2472:	ce 01       	movw	r24, r28
    2474:	e8 df       	rcall	.-48     	; 0x2446 <_ZN6LSM3038writeRegEhh>
    2476:	44 e6       	ldi	r20, 0x64	; 100
    2478:	64 e2       	ldi	r22, 0x24	; 36
    247a:	ce 01       	movw	r24, r28
    247c:	e4 df       	rcall	.-56     	; 0x2446 <_ZN6LSM3038writeRegEhh>
    247e:	40 e2       	ldi	r20, 0x20	; 32
    2480:	65 e2       	ldi	r22, 0x25	; 37
    2482:	ce 01       	movw	r24, r28
    2484:	e0 df       	rcall	.-64     	; 0x2446 <_ZN6LSM3038writeRegEhh>
    2486:	40 e0       	ldi	r20, 0x00	; 0
    2488:	66 e2       	ldi	r22, 0x26	; 38
    248a:	ce 01       	movw	r24, r28
    248c:	dc df       	rcall	.-72     	; 0x2446 <_ZN6LSM3038writeRegEhh>
    248e:	1f c0       	rjmp	.+62     	; 0x24ce <_ZN6LSM30313enableDefaultEv+0x74>
    2490:	82 30       	cpi	r24, 0x02	; 2
    2492:	49 f4       	brne	.+18     	; 0x24a6 <_ZN6LSM30313enableDefaultEv+0x4c>
    2494:	48 e0       	ldi	r20, 0x08	; 8
    2496:	63 e2       	ldi	r22, 0x23	; 35
    2498:	ce 01       	movw	r24, r28
    249a:	95 df       	rcall	.-214    	; 0x23c6 <_ZN6LSM30311writeAccRegEhh>
    249c:	47 e4       	ldi	r20, 0x47	; 71
    249e:	60 e2       	ldi	r22, 0x20	; 32
    24a0:	ce 01       	movw	r24, r28
    24a2:	91 df       	rcall	.-222    	; 0x23c6 <_ZN6LSM30311writeAccRegEhh>
    24a4:	08 c0       	rjmp	.+16     	; 0x24b6 <_ZN6LSM30313enableDefaultEv+0x5c>
    24a6:	40 e0       	ldi	r20, 0x00	; 0
    24a8:	63 e2       	ldi	r22, 0x23	; 35
    24aa:	ce 01       	movw	r24, r28
    24ac:	8c df       	rcall	.-232    	; 0x23c6 <_ZN6LSM30311writeAccRegEhh>
    24ae:	47 e2       	ldi	r20, 0x27	; 39
    24b0:	60 e2       	ldi	r22, 0x20	; 32
    24b2:	ce 01       	movw	r24, r28
    24b4:	88 df       	rcall	.-240    	; 0x23c6 <_ZN6LSM30311writeAccRegEhh>
    24b6:	4c e0       	ldi	r20, 0x0C	; 12
    24b8:	60 e0       	ldi	r22, 0x00	; 0
    24ba:	ce 01       	movw	r24, r28
    24bc:	a4 df       	rcall	.-184    	; 0x2406 <_ZN6LSM30311writeMagRegEhh>
    24be:	40 e2       	ldi	r20, 0x20	; 32
    24c0:	61 e0       	ldi	r22, 0x01	; 1
    24c2:	ce 01       	movw	r24, r28
    24c4:	a0 df       	rcall	.-192    	; 0x2406 <_ZN6LSM30311writeMagRegEhh>
    24c6:	40 e0       	ldi	r20, 0x00	; 0
    24c8:	62 e0       	ldi	r22, 0x02	; 2
    24ca:	ce 01       	movw	r24, r28
    24cc:	9c df       	rcall	.-200    	; 0x2406 <_ZN6LSM30311writeMagRegEhh>
    24ce:	df 91       	pop	r29
    24d0:	cf 91       	pop	r28
    24d2:	08 95       	ret

000024d4 <_ZN6LSM3037readAccEv>:
    24d4:	9f 92       	push	r9
    24d6:	af 92       	push	r10
    24d8:	bf 92       	push	r11
    24da:	cf 92       	push	r12
    24dc:	df 92       	push	r13
    24de:	ef 92       	push	r14
    24e0:	ff 92       	push	r15
    24e2:	0f 93       	push	r16
    24e4:	1f 93       	push	r17
    24e6:	cf 93       	push	r28
    24e8:	df 93       	push	r29
    24ea:	ec 01       	movw	r28, r24
    24ec:	6a 8d       	ldd	r22, Y+26	; 0x1a
    24ee:	85 ef       	ldi	r24, 0xF5	; 245
    24f0:	9e e0       	ldi	r25, 0x0E	; 14
    24f2:	0e 94 92 1c 	call	0x3924	; 0x3924 <_ZN7TwoWire17beginTransmissionEh>
    24f6:	e0 91 f5 0e 	lds	r30, 0x0EF5
    24fa:	f0 91 f6 0e 	lds	r31, 0x0EF6
    24fe:	01 90       	ld	r0, Z+
    2500:	f0 81       	ld	r31, Z
    2502:	e0 2d       	mov	r30, r0
    2504:	68 ea       	ldi	r22, 0xA8	; 168
    2506:	85 ef       	ldi	r24, 0xF5	; 245
    2508:	9e e0       	ldi	r25, 0x0E	; 14
    250a:	19 95       	eicall
    250c:	85 ef       	ldi	r24, 0xF5	; 245
    250e:	9e e0       	ldi	r25, 0x0E	; 14
    2510:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN7TwoWire15endTransmissionEv>
    2514:	88 8f       	std	Y+24, r24	; 0x18
    2516:	46 e0       	ldi	r20, 0x06	; 6
    2518:	6a 8d       	ldd	r22, Y+26	; 0x1a
    251a:	85 ef       	ldi	r24, 0xF5	; 245
    251c:	9e e0       	ldi	r25, 0x0E	; 14
    251e:	0e 94 8f 1c 	call	0x391e	; 0x391e <_ZN7TwoWire11requestFromEhh>
    2522:	0e 94 39 25 	call	0x4a72	; 0x4a72 <millis>
    2526:	8b 01       	movw	r16, r22
    2528:	10 c0       	rjmp	.+32     	; 0x254a <_ZN6LSM3037readAccEv+0x76>
    252a:	8b a1       	ldd	r24, Y+35	; 0x23
    252c:	9c a1       	ldd	r25, Y+36	; 0x24
    252e:	89 2b       	or	r24, r25
    2530:	61 f0       	breq	.+24     	; 0x254a <_ZN6LSM3037readAccEv+0x76>
    2532:	0e 94 39 25 	call	0x4a72	; 0x4a72 <millis>
    2536:	60 1b       	sub	r22, r16
    2538:	71 0b       	sbc	r23, r17
    253a:	8b a1       	ldd	r24, Y+35	; 0x23
    253c:	9c a1       	ldd	r25, Y+36	; 0x24
    253e:	86 17       	cp	r24, r22
    2540:	97 07       	cpc	r25, r23
    2542:	18 f4       	brcc	.+6      	; 0x254a <_ZN6LSM3037readAccEv+0x76>
    2544:	81 e0       	ldi	r24, 0x01	; 1
    2546:	8d a3       	std	Y+37, r24	; 0x25
    2548:	32 c0       	rjmp	.+100    	; 0x25ae <_ZN6LSM3037readAccEv+0xda>
    254a:	85 ef       	ldi	r24, 0xF5	; 245
    254c:	9e e0       	ldi	r25, 0x0E	; 14
    254e:	0e 94 df 1b 	call	0x37be	; 0x37be <_ZN7TwoWire9availableEv>
    2552:	06 97       	sbiw	r24, 0x06	; 6
    2554:	54 f3       	brlt	.-44     	; 0x252a <_ZN6LSM3037readAccEv+0x56>
    2556:	85 ef       	ldi	r24, 0xF5	; 245
    2558:	9e e0       	ldi	r25, 0x0E	; 14
    255a:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    255e:	a8 2e       	mov	r10, r24
    2560:	85 ef       	ldi	r24, 0xF5	; 245
    2562:	9e e0       	ldi	r25, 0x0E	; 14
    2564:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    2568:	98 2e       	mov	r9, r24
    256a:	85 ef       	ldi	r24, 0xF5	; 245
    256c:	9e e0       	ldi	r25, 0x0E	; 14
    256e:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    2572:	08 2f       	mov	r16, r24
    2574:	85 ef       	ldi	r24, 0xF5	; 245
    2576:	9e e0       	ldi	r25, 0x0E	; 14
    2578:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    257c:	b8 2e       	mov	r11, r24
    257e:	85 ef       	ldi	r24, 0xF5	; 245
    2580:	9e e0       	ldi	r25, 0x0E	; 14
    2582:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    2586:	18 2f       	mov	r17, r24
    2588:	85 ef       	ldi	r24, 0xF5	; 245
    258a:	9e e0       	ldi	r25, 0x0E	; 14
    258c:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    2590:	d9 2c       	mov	r13, r9
    2592:	c1 2c       	mov	r12, r1
    2594:	ca 28       	or	r12, r10
    2596:	d9 82       	std	Y+1, r13	; 0x01
    2598:	c8 82       	st	Y, r12
    259a:	fb 2c       	mov	r15, r11
    259c:	e1 2c       	mov	r14, r1
    259e:	e0 2a       	or	r14, r16
    25a0:	fb 82       	std	Y+3, r15	; 0x03
    25a2:	ea 82       	std	Y+2, r14	; 0x02
    25a4:	98 2f       	mov	r25, r24
    25a6:	88 27       	eor	r24, r24
    25a8:	81 2b       	or	r24, r17
    25aa:	9d 83       	std	Y+5, r25	; 0x05
    25ac:	8c 83       	std	Y+4, r24	; 0x04
    25ae:	df 91       	pop	r29
    25b0:	cf 91       	pop	r28
    25b2:	1f 91       	pop	r17
    25b4:	0f 91       	pop	r16
    25b6:	ff 90       	pop	r15
    25b8:	ef 90       	pop	r14
    25ba:	df 90       	pop	r13
    25bc:	cf 90       	pop	r12
    25be:	bf 90       	pop	r11
    25c0:	af 90       	pop	r10
    25c2:	9f 90       	pop	r9
    25c4:	08 95       	ret

000025c6 <_ZN6LSM3037readMagEv>:
    25c6:	cf 92       	push	r12
    25c8:	df 92       	push	r13
    25ca:	ef 92       	push	r14
    25cc:	ff 92       	push	r15
    25ce:	0f 93       	push	r16
    25d0:	1f 93       	push	r17
    25d2:	cf 93       	push	r28
    25d4:	df 93       	push	r29
    25d6:	ec 01       	movw	r28, r24
    25d8:	6b 8d       	ldd	r22, Y+27	; 0x1b
    25da:	85 ef       	ldi	r24, 0xF5	; 245
    25dc:	9e e0       	ldi	r25, 0x0E	; 14
    25de:	0e 94 92 1c 	call	0x3924	; 0x3924 <_ZN7TwoWire17beginTransmissionEh>
    25e2:	89 8d       	ldd	r24, Y+25	; 0x19
    25e4:	83 30       	cpi	r24, 0x03	; 3
    25e6:	31 f4       	brne	.+12     	; 0x25f4 <_ZN6LSM3037readMagEv+0x2e>
    25e8:	6e 8d       	ldd	r22, Y+30	; 0x1e
    25ea:	77 27       	eor	r23, r23
    25ec:	67 fd       	sbrc	r22, 7
    25ee:	70 95       	com	r23
    25f0:	60 68       	ori	r22, 0x80	; 128
    25f2:	04 c0       	rjmp	.+8      	; 0x25fc <_ZN6LSM3037readMagEv+0x36>
    25f4:	6d 8d       	ldd	r22, Y+29	; 0x1d
    25f6:	77 27       	eor	r23, r23
    25f8:	67 fd       	sbrc	r22, 7
    25fa:	70 95       	com	r23
    25fc:	e0 91 f5 0e 	lds	r30, 0x0EF5
    2600:	f0 91 f6 0e 	lds	r31, 0x0EF6
    2604:	01 90       	ld	r0, Z+
    2606:	f0 81       	ld	r31, Z
    2608:	e0 2d       	mov	r30, r0
    260a:	85 ef       	ldi	r24, 0xF5	; 245
    260c:	9e e0       	ldi	r25, 0x0E	; 14
    260e:	19 95       	eicall
    2610:	85 ef       	ldi	r24, 0xF5	; 245
    2612:	9e e0       	ldi	r25, 0x0E	; 14
    2614:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN7TwoWire15endTransmissionEv>
    2618:	88 8f       	std	Y+24, r24	; 0x18
    261a:	46 e0       	ldi	r20, 0x06	; 6
    261c:	6b 8d       	ldd	r22, Y+27	; 0x1b
    261e:	85 ef       	ldi	r24, 0xF5	; 245
    2620:	9e e0       	ldi	r25, 0x0E	; 14
    2622:	0e 94 8f 1c 	call	0x391e	; 0x391e <_ZN7TwoWire11requestFromEhh>
    2626:	0e 94 39 25 	call	0x4a72	; 0x4a72 <millis>
    262a:	8b 01       	movw	r16, r22
    262c:	10 c0       	rjmp	.+32     	; 0x264e <_ZN6LSM3037readMagEv+0x88>
    262e:	8b a1       	ldd	r24, Y+35	; 0x23
    2630:	9c a1       	ldd	r25, Y+36	; 0x24
    2632:	89 2b       	or	r24, r25
    2634:	61 f0       	breq	.+24     	; 0x264e <_ZN6LSM3037readMagEv+0x88>
    2636:	0e 94 39 25 	call	0x4a72	; 0x4a72 <millis>
    263a:	60 1b       	sub	r22, r16
    263c:	71 0b       	sbc	r23, r17
    263e:	8b a1       	ldd	r24, Y+35	; 0x23
    2640:	9c a1       	ldd	r25, Y+36	; 0x24
    2642:	86 17       	cp	r24, r22
    2644:	97 07       	cpc	r25, r23
    2646:	18 f4       	brcc	.+6      	; 0x264e <_ZN6LSM3037readMagEv+0x88>
    2648:	81 e0       	ldi	r24, 0x01	; 1
    264a:	8d a3       	std	Y+37, r24	; 0x25
    264c:	6e c0       	rjmp	.+220    	; 0x272a <_ZN6LSM3037readMagEv+0x164>
    264e:	85 ef       	ldi	r24, 0xF5	; 245
    2650:	9e e0       	ldi	r25, 0x0E	; 14
    2652:	0e 94 df 1b 	call	0x37be	; 0x37be <_ZN7TwoWire9availableEv>
    2656:	06 97       	sbiw	r24, 0x06	; 6
    2658:	54 f3       	brlt	.-44     	; 0x262e <_ZN6LSM3037readMagEv+0x68>
    265a:	89 8d       	ldd	r24, Y+25	; 0x19
    265c:	83 30       	cpi	r24, 0x03	; 3
    265e:	f9 f4       	brne	.+62     	; 0x269e <_ZN6LSM3037readMagEv+0xd8>
    2660:	85 ef       	ldi	r24, 0xF5	; 245
    2662:	9e e0       	ldi	r25, 0x0E	; 14
    2664:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    2668:	c8 2e       	mov	r12, r24
    266a:	85 ef       	ldi	r24, 0xF5	; 245
    266c:	9e e0       	ldi	r25, 0x0E	; 14
    266e:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    2672:	d8 2e       	mov	r13, r24
    2674:	85 ef       	ldi	r24, 0xF5	; 245
    2676:	9e e0       	ldi	r25, 0x0E	; 14
    2678:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    267c:	e8 2e       	mov	r14, r24
    267e:	85 ef       	ldi	r24, 0xF5	; 245
    2680:	9e e0       	ldi	r25, 0x0E	; 14
    2682:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    2686:	f8 2e       	mov	r15, r24
    2688:	85 ef       	ldi	r24, 0xF5	; 245
    268a:	9e e0       	ldi	r25, 0x0E	; 14
    268c:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    2690:	08 2f       	mov	r16, r24
    2692:	85 ef       	ldi	r24, 0xF5	; 245
    2694:	9e e0       	ldi	r25, 0x0E	; 14
    2696:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    269a:	18 2f       	mov	r17, r24
    269c:	36 c0       	rjmp	.+108    	; 0x270a <_ZN6LSM3037readMagEv+0x144>
    269e:	85 ef       	ldi	r24, 0xF5	; 245
    26a0:	9e e0       	ldi	r25, 0x0E	; 14
    26a2:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    26a6:	d8 2e       	mov	r13, r24
    26a8:	85 ef       	ldi	r24, 0xF5	; 245
    26aa:	9e e0       	ldi	r25, 0x0E	; 14
    26ac:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    26b0:	c8 2e       	mov	r12, r24
    26b2:	89 8d       	ldd	r24, Y+25	; 0x19
    26b4:	81 11       	cpse	r24, r1
    26b6:	15 c0       	rjmp	.+42     	; 0x26e2 <_ZN6LSM3037readMagEv+0x11c>
    26b8:	85 ef       	ldi	r24, 0xF5	; 245
    26ba:	9e e0       	ldi	r25, 0x0E	; 14
    26bc:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    26c0:	f8 2e       	mov	r15, r24
    26c2:	85 ef       	ldi	r24, 0xF5	; 245
    26c4:	9e e0       	ldi	r25, 0x0E	; 14
    26c6:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    26ca:	e8 2e       	mov	r14, r24
    26cc:	85 ef       	ldi	r24, 0xF5	; 245
    26ce:	9e e0       	ldi	r25, 0x0E	; 14
    26d0:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    26d4:	18 2f       	mov	r17, r24
    26d6:	85 ef       	ldi	r24, 0xF5	; 245
    26d8:	9e e0       	ldi	r25, 0x0E	; 14
    26da:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    26de:	08 2f       	mov	r16, r24
    26e0:	14 c0       	rjmp	.+40     	; 0x270a <_ZN6LSM3037readMagEv+0x144>
    26e2:	85 ef       	ldi	r24, 0xF5	; 245
    26e4:	9e e0       	ldi	r25, 0x0E	; 14
    26e6:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    26ea:	18 2f       	mov	r17, r24
    26ec:	85 ef       	ldi	r24, 0xF5	; 245
    26ee:	9e e0       	ldi	r25, 0x0E	; 14
    26f0:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    26f4:	08 2f       	mov	r16, r24
    26f6:	85 ef       	ldi	r24, 0xF5	; 245
    26f8:	9e e0       	ldi	r25, 0x0E	; 14
    26fa:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    26fe:	f8 2e       	mov	r15, r24
    2700:	85 ef       	ldi	r24, 0xF5	; 245
    2702:	9e e0       	ldi	r25, 0x0E	; 14
    2704:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    2708:	e8 2e       	mov	r14, r24
    270a:	6c 2d       	mov	r22, r12
    270c:	70 e0       	ldi	r23, 0x00	; 0
    270e:	7d 29       	or	r23, r13
    2710:	7f 83       	std	Y+7, r23	; 0x07
    2712:	6e 83       	std	Y+6, r22	; 0x06
    2714:	4e 2d       	mov	r20, r14
    2716:	50 e0       	ldi	r21, 0x00	; 0
    2718:	5f 29       	or	r21, r15
    271a:	59 87       	std	Y+9, r21	; 0x09
    271c:	48 87       	std	Y+8, r20	; 0x08
    271e:	20 2f       	mov	r18, r16
    2720:	30 e0       	ldi	r19, 0x00	; 0
    2722:	c9 01       	movw	r24, r18
    2724:	91 2b       	or	r25, r17
    2726:	9b 87       	std	Y+11, r25	; 0x0b
    2728:	8a 87       	std	Y+10, r24	; 0x0a
    272a:	df 91       	pop	r29
    272c:	cf 91       	pop	r28
    272e:	1f 91       	pop	r17
    2730:	0f 91       	pop	r16
    2732:	ff 90       	pop	r15
    2734:	ef 90       	pop	r14
    2736:	df 90       	pop	r13
    2738:	cf 90       	pop	r12
    273a:	08 95       	ret

0000273c <_ZN6LSM3037testRegEhNS_7regAddrE>:
}

// Private Methods //////////////////////////////////////////////////////////////

int LSM303::testReg(byte address, regAddr reg)
{
    273c:	cf 93       	push	r28
    273e:	df 93       	push	r29
    2740:	c6 2f       	mov	r28, r22
    2742:	d4 2f       	mov	r29, r20
  Wire.beginTransmission(address);
    2744:	85 ef       	ldi	r24, 0xF5	; 245
    2746:	9e e0       	ldi	r25, 0x0E	; 14
    2748:	0e 94 92 1c 	call	0x3924	; 0x3924 <_ZN7TwoWire17beginTransmissionEh>
  Wire.write((byte)reg);
    274c:	6d 2f       	mov	r22, r29
    274e:	85 ef       	ldi	r24, 0xF5	; 245
    2750:	9e e0       	ldi	r25, 0x0E	; 14
    2752:	0e 94 39 1c 	call	0x3872	; 0x3872 <_ZN7TwoWire5writeEh>
  if (Wire.endTransmission() != 0)
    2756:	85 ef       	ldi	r24, 0xF5	; 245
    2758:	9e e0       	ldi	r25, 0x0E	; 14
    275a:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN7TwoWire15endTransmissionEv>
    275e:	81 11       	cpse	r24, r1
    2760:	11 c0       	rjmp	.+34     	; 0x2784 <_ZN6LSM3037testRegEhNS_7regAddrE+0x48>
  {
    return TEST_REG_ERROR;
  }

  Wire.requestFrom(address, (byte)1);
    2762:	41 e0       	ldi	r20, 0x01	; 1
    2764:	6c 2f       	mov	r22, r28
    2766:	85 ef       	ldi	r24, 0xF5	; 245
    2768:	9e e0       	ldi	r25, 0x0E	; 14
    276a:	0e 94 8f 1c 	call	0x391e	; 0x391e <_ZN7TwoWire11requestFromEhh>
  if (Wire.available())
    276e:	85 ef       	ldi	r24, 0xF5	; 245
    2770:	9e e0       	ldi	r25, 0x0E	; 14
    2772:	0e 94 df 1b 	call	0x37be	; 0x37be <_ZN7TwoWire9availableEv>
    2776:	89 2b       	or	r24, r25
    2778:	41 f0       	breq	.+16     	; 0x278a <_ZN6LSM3037testRegEhNS_7regAddrE+0x4e>
  {
    return Wire.read();
    277a:	85 ef       	ldi	r24, 0xF5	; 245
    277c:	9e e0       	ldi	r25, 0x0E	; 14
    277e:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN7TwoWire4readEv>
    2782:	05 c0       	rjmp	.+10     	; 0x278e <_ZN6LSM3037testRegEhNS_7regAddrE+0x52>
{
  Wire.beginTransmission(address);
  Wire.write((byte)reg);
  if (Wire.endTransmission() != 0)
  {
    return TEST_REG_ERROR;
    2784:	8f ef       	ldi	r24, 0xFF	; 255
    2786:	9f ef       	ldi	r25, 0xFF	; 255
    2788:	02 c0       	rjmp	.+4      	; 0x278e <_ZN6LSM3037testRegEhNS_7regAddrE+0x52>
  {
    return Wire.read();
  }
  else
  {
    return TEST_REG_ERROR;
    278a:	8f ef       	ldi	r24, 0xFF	; 255
    278c:	9f ef       	ldi	r25, 0xFF	; 255
  }
    278e:	df 91       	pop	r29
    2790:	cf 91       	pop	r28
    2792:	08 95       	ret

00002794 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE>:
{
  return io_timeout;
}

bool LSM303::init(deviceType device, sa0State sa0)
{
    2794:	0f 93       	push	r16
    2796:	1f 93       	push	r17
    2798:	cf 93       	push	r28
    279a:	df 93       	push	r29
    279c:	ec 01       	movw	r28, r24
    279e:	16 2f       	mov	r17, r22
    27a0:	04 2f       	mov	r16, r20
  // perform auto-detection unless device type and SA0 state were both specified
  if (device == device_auto || sa0 == sa0_auto)
    27a2:	64 30       	cpi	r22, 0x04	; 4
    27a4:	09 f4       	brne	.+2      	; 0x27a8 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x14>
    27a6:	ad c0       	rjmp	.+346    	; 0x2902 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x16e>
    27a8:	42 30       	cpi	r20, 0x02	; 2
    27aa:	09 f0       	breq	.+2      	; 0x27ae <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x1a>
    27ac:	47 c0       	rjmp	.+142    	; 0x283c <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xa8>
    27ae:	ad c0       	rjmp	.+346    	; 0x290a <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x176>
  {
    // check for LSM303D if device is unidentified or was specified to be this type
    if (device == device_auto || device == device_D)
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
    27b0:	4f e0       	ldi	r20, 0x0F	; 15
    27b2:	6d e1       	ldi	r22, 0x1D	; 29
    27b4:	ce 01       	movw	r24, r28
    27b6:	c2 df       	rcall	.-124    	; 0x273c <_ZN6LSM3037testRegEhNS_7regAddrE>
    27b8:	89 34       	cpi	r24, 0x49	; 73
    27ba:	91 05       	cpc	r25, r1
    27bc:	09 f4       	brne	.+2      	; 0x27c0 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x2c>
    27be:	ab c0       	rjmp	.+342    	; 0x2916 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x182>
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
        sa0 = sa0_high;
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(D_SA0_LOW_ADDRESS, WHO_AM_I) == D_WHO_ID)
    27c0:	01 30       	cpi	r16, 0x01	; 1
    27c2:	41 f0       	breq	.+16     	; 0x27d4 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x40>
    27c4:	4f e0       	ldi	r20, 0x0F	; 15
    27c6:	6e e1       	ldi	r22, 0x1E	; 30
    27c8:	ce 01       	movw	r24, r28
    27ca:	b8 df       	rcall	.-144    	; 0x273c <_ZN6LSM3037testRegEhNS_7regAddrE>
    27cc:	89 34       	cpi	r24, 0x49	; 73
    27ce:	91 05       	cpc	r25, r1
    27d0:	09 f4       	brne	.+2      	; 0x27d4 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x40>
    27d2:	a3 c0       	rjmp	.+326    	; 0x291a <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x186>
        sa0 = sa0_low;
      }
    }
    
    // check for LSM303DLHC, DLM, DLH if device is still unidentified or was specified to be one of these types
    if (device == device_auto || device == device_DLHC || device == device_DLM || device == device_DLH)
    27d4:	14 30       	cpi	r17, 0x04	; 4
    27d6:	11 f0       	breq	.+4      	; 0x27dc <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x48>
    27d8:	13 30       	cpi	r17, 0x03	; 3
    27da:	68 f5       	brcc	.+90     	; 0x2836 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xa2>
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
    27dc:	00 23       	and	r16, r16
    27de:	a9 f0       	breq	.+42     	; 0x280a <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x76>
    27e0:	40 e2       	ldi	r20, 0x20	; 32
    27e2:	69 e1       	ldi	r22, 0x19	; 25
    27e4:	ce 01       	movw	r24, r28
    27e6:	aa df       	rcall	.-172    	; 0x273c <_ZN6LSM3037testRegEhNS_7regAddrE>
    27e8:	01 96       	adiw	r24, 0x01	; 1
    27ea:	69 f0       	breq	.+26     	; 0x2806 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x72>
      {
        // device responds to address 0011001; it's a DLHC, DLM with SA0 high, or DLH with SA0 high
        sa0 = sa0_high;
        if (device == device_auto)
    27ec:	14 30       	cpi	r17, 0x04	; 4
    27ee:	09 f0       	breq	.+2      	; 0x27f2 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x5e>
    27f0:	99 c0       	rjmp	.+306    	; 0x2924 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x190>
          // DLHC seems to respond to WHO_AM_I request the same way as DLM, even though this
          // register isn't documented in its datasheet. Since the DLHC accelerometer address is the
          // same as the DLM with SA0 high, but Pololu DLM boards pull SA0 low by default, we'll
          // guess that a device whose accelerometer responds to the SA0 high address and whose
          // magnetometer gives the DLM ID is actually a DLHC.
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLHC : device_DLH;
    27f2:	4f e0       	ldi	r20, 0x0F	; 15
    27f4:	6e e1       	ldi	r22, 0x1E	; 30
    27f6:	ce 01       	movw	r24, r28
    27f8:	a1 df       	rcall	.-190    	; 0x273c <_ZN6LSM3037testRegEhNS_7regAddrE>
    27fa:	cc 97       	sbiw	r24, 0x3c	; 60
    27fc:	09 f0       	breq	.+2      	; 0x2800 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x6c>
    27fe:	94 c0       	rjmp	.+296    	; 0x2928 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x194>
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
      {
        // device responds to address 0011001; it's a DLHC, DLM with SA0 high, or DLH with SA0 high
        sa0 = sa0_high;
    2800:	01 e0       	ldi	r16, 0x01	; 1
          // DLHC seems to respond to WHO_AM_I request the same way as DLM, even though this
          // register isn't documented in its datasheet. Since the DLHC accelerometer address is the
          // same as the DLM with SA0 high, but Pololu DLM boards pull SA0 low by default, we'll
          // guess that a device whose accelerometer responds to the SA0 high address and whose
          // magnetometer gives the DLM ID is actually a DLHC.
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLHC : device_DLH;
    2802:	12 e0       	ldi	r17, 0x02	; 2
    2804:	1b c0       	rjmp	.+54     	; 0x283c <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xa8>
        }
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(DLM_DLH_ACC_SA0_LOW_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
    2806:	01 30       	cpi	r16, 0x01	; 1
    2808:	99 f0       	breq	.+38     	; 0x2830 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x9c>
    280a:	40 e2       	ldi	r20, 0x20	; 32
    280c:	68 e1       	ldi	r22, 0x18	; 24
    280e:	ce 01       	movw	r24, r28
    2810:	95 df       	rcall	.-214    	; 0x273c <_ZN6LSM3037testRegEhNS_7regAddrE>
    2812:	01 96       	adiw	r24, 0x01	; 1
    2814:	69 f0       	breq	.+26     	; 0x2830 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x9c>
      {
        // device responds to address 0011000; it's a DLM with SA0 low or DLH with SA0 low
        sa0 = sa0_low;
        if (device == device_auto)
    2816:	14 30       	cpi	r17, 0x04	; 4
    2818:	09 f0       	breq	.+2      	; 0x281c <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x88>
    281a:	89 c0       	rjmp	.+274    	; 0x292e <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x19a>
        {
          // use magnetometer WHO_AM_I register to determine device type
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLM : device_DLH;
    281c:	4f e0       	ldi	r20, 0x0F	; 15
    281e:	6e e1       	ldi	r22, 0x1E	; 30
    2820:	ce 01       	movw	r24, r28
    2822:	8c df       	rcall	.-232    	; 0x273c <_ZN6LSM3037testRegEhNS_7regAddrE>
    2824:	11 e0       	ldi	r17, 0x01	; 1
    2826:	cc 97       	sbiw	r24, 0x3c	; 60
    2828:	09 f0       	breq	.+2      	; 0x282c <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x98>
    282a:	10 e0       	ldi	r17, 0x00	; 0
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(DLM_DLH_ACC_SA0_LOW_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
      {
        // device responds to address 0011000; it's a DLM with SA0 low or DLH with SA0 low
        sa0 = sa0_low;
    282c:	00 e0       	ldi	r16, 0x00	; 0
    282e:	06 c0       	rjmp	.+12     	; 0x283c <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xa8>
        }
      }
    }
    
    // make sure device and SA0 were successfully detected; otherwise, indicate failure
    if (device == device_auto || sa0 == sa0_auto)
    2830:	14 30       	cpi	r17, 0x04	; 4
    2832:	09 f4       	brne	.+2      	; 0x2836 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xa2>
    2834:	60 c0       	rjmp	.+192    	; 0x28f6 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x162>
    2836:	02 30       	cpi	r16, 0x02	; 2
    2838:	09 f4       	brne	.+2      	; 0x283c <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xa8>
    283a:	5f c0       	rjmp	.+190    	; 0x28fa <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x166>
    {
      return false;
    }
  }
  
  _device = device;
    283c:	19 8f       	std	Y+25, r17	; 0x19
  
  // set device addresses and translated register addresses
  switch (device)
    283e:	11 30       	cpi	r17, 0x01	; 1
    2840:	71 f1       	breq	.+92     	; 0x289e <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x10a>
    2842:	08 f4       	brcc	.+2      	; 0x2846 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xb2>
    2844:	42 c0       	rjmp	.+132    	; 0x28ca <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x136>
    2846:	12 30       	cpi	r17, 0x02	; 2
    2848:	c1 f0       	breq	.+48     	; 0x287a <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xe6>
    284a:	13 30       	cpi	r17, 0x03	; 3
    284c:	09 f0       	breq	.+2      	; 0x2850 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xbc>
    284e:	57 c0       	rjmp	.+174    	; 0x28fe <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x16a>
  {
    case device_D:
      acc_address = mag_address = (sa0 == sa0_high) ? D_SA0_HIGH_ADDRESS : D_SA0_LOW_ADDRESS;
    2850:	01 30       	cpi	r16, 0x01	; 1
    2852:	11 f4       	brne	.+4      	; 0x2858 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xc4>
    2854:	8d e1       	ldi	r24, 0x1D	; 29
    2856:	01 c0       	rjmp	.+2      	; 0x285a <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xc6>
    2858:	8e e1       	ldi	r24, 0x1E	; 30
    285a:	8b 8f       	std	Y+27, r24	; 0x1b
    285c:	8a 8f       	std	Y+26, r24	; 0x1a
      translated_regs[-OUT_X_L_M] = D_OUT_X_L_M;
    285e:	88 e0       	ldi	r24, 0x08	; 8
    2860:	8e 8f       	std	Y+30, r24	; 0x1e
      translated_regs[-OUT_X_H_M] = D_OUT_X_H_M;
    2862:	89 e0       	ldi	r24, 0x09	; 9
    2864:	8d 8f       	std	Y+29, r24	; 0x1d
      translated_regs[-OUT_Y_L_M] = D_OUT_Y_L_M;
    2866:	8a e0       	ldi	r24, 0x0A	; 10
    2868:	88 a3       	std	Y+32, r24	; 0x20
      translated_regs[-OUT_Y_H_M] = D_OUT_Y_H_M;
    286a:	8b e0       	ldi	r24, 0x0B	; 11
    286c:	8f 8f       	std	Y+31, r24	; 0x1f
      translated_regs[-OUT_Z_L_M] = D_OUT_Z_L_M;
    286e:	8c e0       	ldi	r24, 0x0C	; 12
    2870:	8a a3       	std	Y+34, r24	; 0x22
      translated_regs[-OUT_Z_H_M] = D_OUT_Z_H_M;
    2872:	8d e0       	ldi	r24, 0x0D	; 13
    2874:	89 a3       	std	Y+33, r24	; 0x21
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
      break;
  }
  
  return true;
    2876:	81 e0       	ldi	r24, 0x01	; 1
      translated_regs[-OUT_X_H_M] = D_OUT_X_H_M;
      translated_regs[-OUT_Y_L_M] = D_OUT_Y_L_M;
      translated_regs[-OUT_Y_H_M] = D_OUT_Y_H_M;
      translated_regs[-OUT_Z_L_M] = D_OUT_Z_L_M;
      translated_regs[-OUT_Z_H_M] = D_OUT_Z_H_M;
      break;
    2878:	64 c0       	rjmp	.+200    	; 0x2942 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x1ae>

    case device_DLHC:
      acc_address = DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS; // DLHC doesn't have configurable SA0 but uses same acc address as DLM/DLH with SA0 high
    287a:	89 e1       	ldi	r24, 0x19	; 25
    287c:	8a 8f       	std	Y+26, r24	; 0x1a
      mag_address = DLHC_DLM_DLH_MAG_ADDRESS;
    287e:	8e e1       	ldi	r24, 0x1E	; 30
    2880:	8b 8f       	std	Y+27, r24	; 0x1b
      translated_regs[-OUT_X_H_M] = DLHC_OUT_X_H_M;
    2882:	83 e0       	ldi	r24, 0x03	; 3
    2884:	8d 8f       	std	Y+29, r24	; 0x1d
      translated_regs[-OUT_X_L_M] = DLHC_OUT_X_L_M;
    2886:	84 e0       	ldi	r24, 0x04	; 4
    2888:	8e 8f       	std	Y+30, r24	; 0x1e
      translated_regs[-OUT_Y_H_M] = DLHC_OUT_Y_H_M;
    288a:	87 e0       	ldi	r24, 0x07	; 7
    288c:	8f 8f       	std	Y+31, r24	; 0x1f
      translated_regs[-OUT_Y_L_M] = DLHC_OUT_Y_L_M;
    288e:	88 e0       	ldi	r24, 0x08	; 8
    2890:	88 a3       	std	Y+32, r24	; 0x20
      translated_regs[-OUT_Z_H_M] = DLHC_OUT_Z_H_M;
    2892:	85 e0       	ldi	r24, 0x05	; 5
    2894:	89 a3       	std	Y+33, r24	; 0x21
      translated_regs[-OUT_Z_L_M] = DLHC_OUT_Z_L_M;
    2896:	86 e0       	ldi	r24, 0x06	; 6
    2898:	8a a3       	std	Y+34, r24	; 0x22
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
      break;
  }
  
  return true;
    289a:	81 e0       	ldi	r24, 0x01	; 1
      translated_regs[-OUT_X_L_M] = DLHC_OUT_X_L_M;
      translated_regs[-OUT_Y_H_M] = DLHC_OUT_Y_H_M;
      translated_regs[-OUT_Y_L_M] = DLHC_OUT_Y_L_M;
      translated_regs[-OUT_Z_H_M] = DLHC_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLHC_OUT_Z_L_M;
      break;
    289c:	52 c0       	rjmp	.+164    	; 0x2942 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x1ae>

    case device_DLM:
      acc_address = (sa0 == sa0_high) ? DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS : DLM_DLH_ACC_SA0_LOW_ADDRESS;
    289e:	01 30       	cpi	r16, 0x01	; 1
    28a0:	11 f4       	brne	.+4      	; 0x28a6 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x112>
    28a2:	89 e1       	ldi	r24, 0x19	; 25
    28a4:	01 c0       	rjmp	.+2      	; 0x28a8 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x114>
    28a6:	88 e1       	ldi	r24, 0x18	; 24
    28a8:	8a 8f       	std	Y+26, r24	; 0x1a
      mag_address = DLHC_DLM_DLH_MAG_ADDRESS;
    28aa:	8e e1       	ldi	r24, 0x1E	; 30
    28ac:	8b 8f       	std	Y+27, r24	; 0x1b
      translated_regs[-OUT_X_H_M] = DLM_OUT_X_H_M;
    28ae:	83 e0       	ldi	r24, 0x03	; 3
    28b0:	8d 8f       	std	Y+29, r24	; 0x1d
      translated_regs[-OUT_X_L_M] = DLM_OUT_X_L_M;
    28b2:	84 e0       	ldi	r24, 0x04	; 4
    28b4:	8e 8f       	std	Y+30, r24	; 0x1e
      translated_regs[-OUT_Y_H_M] = DLM_OUT_Y_H_M;
    28b6:	87 e0       	ldi	r24, 0x07	; 7
    28b8:	8f 8f       	std	Y+31, r24	; 0x1f
      translated_regs[-OUT_Y_L_M] = DLM_OUT_Y_L_M;
    28ba:	88 e0       	ldi	r24, 0x08	; 8
    28bc:	88 a3       	std	Y+32, r24	; 0x20
      translated_regs[-OUT_Z_H_M] = DLM_OUT_Z_H_M;
    28be:	85 e0       	ldi	r24, 0x05	; 5
    28c0:	89 a3       	std	Y+33, r24	; 0x21
      translated_regs[-OUT_Z_L_M] = DLM_OUT_Z_L_M;
    28c2:	86 e0       	ldi	r24, 0x06	; 6
    28c4:	8a a3       	std	Y+34, r24	; 0x22
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
      break;
  }
  
  return true;
    28c6:	81 e0       	ldi	r24, 0x01	; 1
      translated_regs[-OUT_X_L_M] = DLM_OUT_X_L_M;
      translated_regs[-OUT_Y_H_M] = DLM_OUT_Y_H_M;
      translated_regs[-OUT_Y_L_M] = DLM_OUT_Y_L_M;
      translated_regs[-OUT_Z_H_M] = DLM_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLM_OUT_Z_L_M;
      break;
    28c8:	3c c0       	rjmp	.+120    	; 0x2942 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x1ae>

    case device_DLH:
      acc_address = (sa0 == sa0_high) ? DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS : DLM_DLH_ACC_SA0_LOW_ADDRESS;
    28ca:	01 30       	cpi	r16, 0x01	; 1
    28cc:	11 f4       	brne	.+4      	; 0x28d2 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x13e>
    28ce:	89 e1       	ldi	r24, 0x19	; 25
    28d0:	01 c0       	rjmp	.+2      	; 0x28d4 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x140>
    28d2:	88 e1       	ldi	r24, 0x18	; 24
    28d4:	8a 8f       	std	Y+26, r24	; 0x1a
      mag_address = DLHC_DLM_DLH_MAG_ADDRESS;
    28d6:	8e e1       	ldi	r24, 0x1E	; 30
    28d8:	8b 8f       	std	Y+27, r24	; 0x1b
      translated_regs[-OUT_X_H_M] = DLH_OUT_X_H_M;
    28da:	83 e0       	ldi	r24, 0x03	; 3
    28dc:	8d 8f       	std	Y+29, r24	; 0x1d
      translated_regs[-OUT_X_L_M] = DLH_OUT_X_L_M;
    28de:	84 e0       	ldi	r24, 0x04	; 4
    28e0:	8e 8f       	std	Y+30, r24	; 0x1e
      translated_regs[-OUT_Y_H_M] = DLH_OUT_Y_H_M;
    28e2:	85 e0       	ldi	r24, 0x05	; 5
    28e4:	8f 8f       	std	Y+31, r24	; 0x1f
      translated_regs[-OUT_Y_L_M] = DLH_OUT_Y_L_M;
    28e6:	86 e0       	ldi	r24, 0x06	; 6
    28e8:	88 a3       	std	Y+32, r24	; 0x20
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
    28ea:	87 e0       	ldi	r24, 0x07	; 7
    28ec:	89 a3       	std	Y+33, r24	; 0x21
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
    28ee:	88 e0       	ldi	r24, 0x08	; 8
    28f0:	8a a3       	std	Y+34, r24	; 0x22
      break;
  }
  
  return true;
    28f2:	81 e0       	ldi	r24, 0x01	; 1
      translated_regs[-OUT_X_L_M] = DLH_OUT_X_L_M;
      translated_regs[-OUT_Y_H_M] = DLH_OUT_Y_H_M;
      translated_regs[-OUT_Y_L_M] = DLH_OUT_Y_L_M;
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
      break;
    28f4:	26 c0       	rjmp	.+76     	; 0x2942 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x1ae>
    }
    
    // make sure device and SA0 were successfully detected; otherwise, indicate failure
    if (device == device_auto || sa0 == sa0_auto)
    {
      return false;
    28f6:	80 e0       	ldi	r24, 0x00	; 0
    28f8:	24 c0       	rjmp	.+72     	; 0x2942 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x1ae>
    28fa:	80 e0       	ldi	r24, 0x00	; 0
    28fc:	22 c0       	rjmp	.+68     	; 0x2942 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x1ae>
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
      break;
  }
  
  return true;
    28fe:	81 e0       	ldi	r24, 0x01	; 1
    2900:	20 c0       	rjmp	.+64     	; 0x2942 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x1ae>
  {
    // check for LSM303D if device is unidentified or was specified to be this type
    if (device == device_auto || device == device_D)
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
    2902:	44 23       	and	r20, r20
    2904:	09 f4       	brne	.+2      	; 0x2908 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x174>
    2906:	5e cf       	rjmp	.-324    	; 0x27c4 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x30>
    2908:	53 cf       	rjmp	.-346    	; 0x27b0 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x1c>
{
  // perform auto-detection unless device type and SA0 state were both specified
  if (device == device_auto || sa0 == sa0_auto)
  {
    // check for LSM303D if device is unidentified or was specified to be this type
    if (device == device_auto || device == device_D)
    290a:	8d ef       	ldi	r24, 0xFD	; 253
    290c:	86 0f       	add	r24, r22
    290e:	82 30       	cpi	r24, 0x02	; 2
    2910:	08 f0       	brcs	.+2      	; 0x2914 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x180>
    2912:	62 cf       	rjmp	.-316    	; 0x27d8 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x44>
    2914:	0e c0       	rjmp	.+28     	; 0x2932 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x19e>
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
      {
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
        sa0 = sa0_high;
    2916:	01 e0       	ldi	r16, 0x01	; 1
    2918:	03 c0       	rjmp	.+6      	; 0x2920 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x18c>
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(D_SA0_LOW_ADDRESS, WHO_AM_I) == D_WHO_ID)
      {
        // device responds to address 0011110 with D ID; it's a D with SA0 low
        device = device_D;
        sa0 = sa0_low;
    291a:	00 e0       	ldi	r16, 0x00	; 0
    291c:	01 c0       	rjmp	.+2      	; 0x2920 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x18c>
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
      {
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
        sa0 = sa0_high;
    291e:	01 e0       	ldi	r16, 0x01	; 1
    2920:	13 e0       	ldi	r17, 0x03	; 3
    2922:	89 cf       	rjmp	.-238    	; 0x2836 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xa2>
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
      {
        // device responds to address 0011001; it's a DLHC, DLM with SA0 high, or DLH with SA0 high
        sa0 = sa0_high;
    2924:	01 e0       	ldi	r16, 0x01	; 1
    2926:	8a cf       	rjmp	.-236    	; 0x283c <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xa8>
    2928:	01 e0       	ldi	r16, 0x01	; 1
          // DLHC seems to respond to WHO_AM_I request the same way as DLM, even though this
          // register isn't documented in its datasheet. Since the DLHC accelerometer address is the
          // same as the DLM with SA0 high, but Pololu DLM boards pull SA0 low by default, we'll
          // guess that a device whose accelerometer responds to the SA0 high address and whose
          // magnetometer gives the DLM ID is actually a DLHC.
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLHC : device_DLH;
    292a:	10 e0       	ldi	r17, 0x00	; 0
    292c:	87 cf       	rjmp	.-242    	; 0x283c <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xa8>
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(DLM_DLH_ACC_SA0_LOW_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
      {
        // device responds to address 0011000; it's a DLM with SA0 low or DLH with SA0 low
        sa0 = sa0_low;
    292e:	00 e0       	ldi	r16, 0x00	; 0
    2930:	85 cf       	rjmp	.-246    	; 0x283c <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0xa8>
  {
    // check for LSM303D if device is unidentified or was specified to be this type
    if (device == device_auto || device == device_D)
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
    2932:	4f e0       	ldi	r20, 0x0F	; 15
    2934:	6d e1       	ldi	r22, 0x1D	; 29
    2936:	ce 01       	movw	r24, r28
    2938:	01 df       	rcall	.-510    	; 0x273c <_ZN6LSM3037testRegEhNS_7regAddrE>
    293a:	89 34       	cpi	r24, 0x49	; 73
    293c:	91 05       	cpc	r25, r1
    293e:	79 f3       	breq	.-34     	; 0x291e <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x18a>
    2940:	41 cf       	rjmp	.-382    	; 0x27c4 <_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE+0x30>
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
      break;
  }
  
  return true;
}
    2942:	df 91       	pop	r29
    2944:	cf 91       	pop	r28
    2946:	1f 91       	pop	r17
    2948:	0f 91       	pop	r16
    294a:	08 95       	ret

0000294c <_ZN7NewPingC1Ehhj>:
	TIMSK4 = (1<<TOIE4);   // Enable Timer4 interrupt.
#elif defined (__arm__) && defined (TEENSYDUINO) // Timer for Teensy 3.x
	itimer.begin(NewPing::timer_ms_cntdwn, 1000);  // Set timer to 1ms (1000 uS).
#else
	OCR0A = 249;           // Every count is 4uS, so 1ms = 250 counts - 1.
	TIMSK0 |= (1<<OCIE0A); // Enable Timer2 interrupt.
    294c:	cf 93       	push	r28
    294e:	df 93       	push	r29
    2950:	dc 01       	movw	r26, r24
    2952:	70 e0       	ldi	r23, 0x00	; 0
    2954:	fb 01       	movw	r30, r22
    2956:	ea 59       	subi	r30, 0x9A	; 154
    2958:	fc 4f       	sbci	r31, 0xFC	; 252
    295a:	e4 91       	lpm	r30, Z
    295c:	14 96       	adiw	r26, 0x04	; 4
    295e:	ec 93       	st	X, r30
    2960:	14 97       	sbiw	r26, 0x04	; 4
    2962:	50 e0       	ldi	r21, 0x00	; 0
    2964:	fa 01       	movw	r30, r20
    2966:	ea 59       	subi	r30, 0x9A	; 154
    2968:	fc 4f       	sbci	r31, 0xFC	; 252
    296a:	e4 91       	lpm	r30, Z
    296c:	15 96       	adiw	r26, 0x05	; 5
    296e:	ec 93       	st	X, r30
    2970:	15 97       	sbiw	r26, 0x05	; 5
    2972:	64 55       	subi	r22, 0x54	; 84
    2974:	7c 4f       	sbci	r23, 0xFC	; 252
    2976:	fb 01       	movw	r30, r22
    2978:	84 91       	lpm	r24, Z
    297a:	90 e0       	ldi	r25, 0x00	; 0
    297c:	88 0f       	add	r24, r24
    297e:	99 1f       	adc	r25, r25
    2980:	84 5f       	subi	r24, 0xF4	; 244
    2982:	9b 4f       	sbci	r25, 0xFB	; 251
    2984:	fc 01       	movw	r30, r24
    2986:	c5 91       	lpm	r28, Z+
    2988:	d4 91       	lpm	r29, Z
    298a:	17 96       	adiw	r26, 0x07	; 7
    298c:	dc 93       	st	X, r29
    298e:	ce 93       	st	-X, r28
    2990:	16 97       	sbiw	r26, 0x06	; 6
    2992:	fa 01       	movw	r30, r20
    2994:	e4 55       	subi	r30, 0x54	; 84
    2996:	fc 4f       	sbci	r31, 0xFC	; 252
    2998:	84 91       	lpm	r24, Z
    299a:	90 e0       	ldi	r25, 0x00	; 0
    299c:	88 0f       	add	r24, r24
    299e:	99 1f       	adc	r25, r25
    29a0:	8e 50       	subi	r24, 0x0E	; 14
    29a2:	9c 4f       	sbci	r25, 0xFC	; 252
    29a4:	fc 01       	movw	r30, r24
    29a6:	45 91       	lpm	r20, Z+
    29a8:	54 91       	lpm	r21, Z
    29aa:	19 96       	adiw	r26, 0x09	; 9
    29ac:	5c 93       	st	X, r21
    29ae:	4e 93       	st	-X, r20
    29b0:	18 97       	sbiw	r26, 0x08	; 8
    29b2:	fb 01       	movw	r30, r22
    29b4:	64 91       	lpm	r22, Z
    29b6:	e6 2f       	mov	r30, r22
    29b8:	f0 e0       	ldi	r31, 0x00	; 0
    29ba:	ee 0f       	add	r30, r30
    29bc:	ff 1f       	adc	r31, r31
    29be:	ea 5d       	subi	r30, 0xDA	; 218
    29c0:	fb 4f       	sbci	r31, 0xFB	; 251
    29c2:	85 91       	lpm	r24, Z+
    29c4:	94 91       	lpm	r25, Z
    29c6:	1b 96       	adiw	r26, 0x0b	; 11
    29c8:	9c 93       	st	X, r25
    29ca:	8e 93       	st	-X, r24
    29cc:	1a 97       	sbiw	r26, 0x0a	; 10
    29ce:	2f 5f       	subi	r18, 0xFF	; 255
    29d0:	3f 4f       	sbci	r19, 0xFF	; 255
    29d2:	49 e3       	ldi	r20, 0x39	; 57
    29d4:	42 9f       	mul	r20, r18
    29d6:	c0 01       	movw	r24, r0
    29d8:	43 9f       	mul	r20, r19
    29da:	90 0d       	add	r25, r0
    29dc:	11 24       	eor	r1, r1
    29de:	8e 38       	cpi	r24, 0x8E	; 142
    29e0:	ff e6       	ldi	r31, 0x6F	; 111
    29e2:	9f 07       	cpc	r25, r31
    29e4:	10 f0       	brcs	.+4      	; 0x29ea <_ZN7NewPingC1Ehhj+0x9e>
    29e6:	8d e8       	ldi	r24, 0x8D	; 141
    29e8:	9f e6       	ldi	r25, 0x6F	; 111
    29ea:	1d 96       	adiw	r26, 0x0d	; 13
    29ec:	9c 93       	st	X, r25
    29ee:	8e 93       	st	-X, r24
    29f0:	1c 97       	sbiw	r26, 0x0c	; 12
    29f2:	df 91       	pop	r29
    29f4:	cf 91       	pop	r28
    29f6:	08 95       	ret

000029f8 <__vector_21>:
	intFunc(); // Call wrapped function.
}
#elif defined (__arm__)
// Do nothing...
#else
ISR(TIMER0_COMPA_vect) {
    29f8:	1f 92       	push	r1
    29fa:	0f 92       	push	r0
    29fc:	0f b6       	in	r0, 0x3f	; 63
    29fe:	0f 92       	push	r0
    2a00:	11 24       	eor	r1, r1
    2a02:	0b b6       	in	r0, 0x3b	; 59
    2a04:	0f 92       	push	r0
    2a06:	2f 93       	push	r18
    2a08:	3f 93       	push	r19
    2a0a:	4f 93       	push	r20
    2a0c:	5f 93       	push	r21
    2a0e:	6f 93       	push	r22
    2a10:	7f 93       	push	r23
    2a12:	8f 93       	push	r24
    2a14:	9f 93       	push	r25
    2a16:	af 93       	push	r26
    2a18:	bf 93       	push	r27
    2a1a:	ef 93       	push	r30
    2a1c:	ff 93       	push	r31
	intFunc(); // Call wrapped function.
    2a1e:	e0 91 2c 0e 	lds	r30, 0x0E2C
    2a22:	f0 91 2d 0e 	lds	r31, 0x0E2D
    2a26:	19 95       	eicall
}
    2a28:	ff 91       	pop	r31
    2a2a:	ef 91       	pop	r30
    2a2c:	bf 91       	pop	r27
    2a2e:	af 91       	pop	r26
    2a30:	9f 91       	pop	r25
    2a32:	8f 91       	pop	r24
    2a34:	7f 91       	pop	r23
    2a36:	6f 91       	pop	r22
    2a38:	5f 91       	pop	r21
    2a3a:	4f 91       	pop	r20
    2a3c:	3f 91       	pop	r19
    2a3e:	2f 91       	pop	r18
    2a40:	0f 90       	pop	r0
    2a42:	0b be       	out	0x3b, r0	; 59
    2a44:	0f 90       	pop	r0
    2a46:	0f be       	out	0x3f, r0	; 63
    2a48:	0f 90       	pop	r0
    2a4a:	1f 90       	pop	r1
    2a4c:	18 95       	reti

00002a4e <pxPortInitialiseStack>:
	return pdTRUE;
}
/*-----------------------------------------------------------*/

void vPortEndScheduler( void )
{
    2a4e:	31 e1       	ldi	r19, 0x11	; 17
    2a50:	fc 01       	movw	r30, r24
    2a52:	30 83       	st	Z, r19
    2a54:	31 97       	sbiw	r30, 0x01	; 1
    2a56:	22 e2       	ldi	r18, 0x22	; 34
    2a58:	20 83       	st	Z, r18
    2a5a:	31 97       	sbiw	r30, 0x01	; 1
    2a5c:	a3 e3       	ldi	r26, 0x33	; 51
    2a5e:	a0 83       	st	Z, r26
    2a60:	31 97       	sbiw	r30, 0x01	; 1
    2a62:	60 83       	st	Z, r22
    2a64:	31 97       	sbiw	r30, 0x01	; 1
    2a66:	70 83       	st	Z, r23
    2a68:	31 97       	sbiw	r30, 0x01	; 1
    2a6a:	10 82       	st	Z, r1
    2a6c:	31 97       	sbiw	r30, 0x01	; 1
    2a6e:	10 82       	st	Z, r1
    2a70:	31 97       	sbiw	r30, 0x01	; 1
    2a72:	60 e8       	ldi	r22, 0x80	; 128
    2a74:	60 83       	st	Z, r22
    2a76:	31 97       	sbiw	r30, 0x01	; 1
    2a78:	10 82       	st	Z, r1
    2a7a:	31 97       	sbiw	r30, 0x01	; 1
    2a7c:	10 82       	st	Z, r1
    2a7e:	31 97       	sbiw	r30, 0x01	; 1
    2a80:	10 82       	st	Z, r1
    2a82:	31 97       	sbiw	r30, 0x01	; 1
    2a84:	62 e0       	ldi	r22, 0x02	; 2
    2a86:	60 83       	st	Z, r22
    2a88:	31 97       	sbiw	r30, 0x01	; 1
    2a8a:	63 e0       	ldi	r22, 0x03	; 3
    2a8c:	60 83       	st	Z, r22
    2a8e:	31 97       	sbiw	r30, 0x01	; 1
    2a90:	64 e0       	ldi	r22, 0x04	; 4
    2a92:	60 83       	st	Z, r22
    2a94:	31 97       	sbiw	r30, 0x01	; 1
    2a96:	65 e0       	ldi	r22, 0x05	; 5
    2a98:	60 83       	st	Z, r22
    2a9a:	31 97       	sbiw	r30, 0x01	; 1
    2a9c:	66 e0       	ldi	r22, 0x06	; 6
    2a9e:	60 83       	st	Z, r22
    2aa0:	31 97       	sbiw	r30, 0x01	; 1
    2aa2:	67 e0       	ldi	r22, 0x07	; 7
    2aa4:	60 83       	st	Z, r22
    2aa6:	31 97       	sbiw	r30, 0x01	; 1
    2aa8:	68 e0       	ldi	r22, 0x08	; 8
    2aaa:	60 83       	st	Z, r22
    2aac:	31 97       	sbiw	r30, 0x01	; 1
    2aae:	69 e0       	ldi	r22, 0x09	; 9
    2ab0:	60 83       	st	Z, r22
    2ab2:	31 97       	sbiw	r30, 0x01	; 1
    2ab4:	60 e1       	ldi	r22, 0x10	; 16
    2ab6:	60 83       	st	Z, r22
    2ab8:	31 97       	sbiw	r30, 0x01	; 1
    2aba:	30 83       	st	Z, r19
    2abc:	31 97       	sbiw	r30, 0x01	; 1
    2abe:	32 e1       	ldi	r19, 0x12	; 18
    2ac0:	30 83       	st	Z, r19
    2ac2:	31 97       	sbiw	r30, 0x01	; 1
    2ac4:	33 e1       	ldi	r19, 0x13	; 19
    2ac6:	30 83       	st	Z, r19
    2ac8:	31 97       	sbiw	r30, 0x01	; 1
    2aca:	34 e1       	ldi	r19, 0x14	; 20
    2acc:	30 83       	st	Z, r19
    2ace:	31 97       	sbiw	r30, 0x01	; 1
    2ad0:	35 e1       	ldi	r19, 0x15	; 21
    2ad2:	30 83       	st	Z, r19
    2ad4:	31 97       	sbiw	r30, 0x01	; 1
    2ad6:	36 e1       	ldi	r19, 0x16	; 22
    2ad8:	30 83       	st	Z, r19
    2ada:	31 97       	sbiw	r30, 0x01	; 1
    2adc:	37 e1       	ldi	r19, 0x17	; 23
    2ade:	30 83       	st	Z, r19
    2ae0:	31 97       	sbiw	r30, 0x01	; 1
    2ae2:	38 e1       	ldi	r19, 0x18	; 24
    2ae4:	30 83       	st	Z, r19
    2ae6:	31 97       	sbiw	r30, 0x01	; 1
    2ae8:	39 e1       	ldi	r19, 0x19	; 25
    2aea:	30 83       	st	Z, r19
    2aec:	31 97       	sbiw	r30, 0x01	; 1
    2aee:	30 e2       	ldi	r19, 0x20	; 32
    2af0:	30 83       	st	Z, r19
    2af2:	31 97       	sbiw	r30, 0x01	; 1
    2af4:	31 e2       	ldi	r19, 0x21	; 33
    2af6:	30 83       	st	Z, r19
    2af8:	31 97       	sbiw	r30, 0x01	; 1
    2afa:	20 83       	st	Z, r18
    2afc:	31 97       	sbiw	r30, 0x01	; 1
    2afe:	23 e2       	ldi	r18, 0x23	; 35
    2b00:	20 83       	st	Z, r18
    2b02:	31 97       	sbiw	r30, 0x01	; 1
    2b04:	40 83       	st	Z, r20
    2b06:	31 97       	sbiw	r30, 0x01	; 1
    2b08:	50 83       	st	Z, r21
    2b0a:	31 97       	sbiw	r30, 0x01	; 1
    2b0c:	26 e2       	ldi	r18, 0x26	; 38
    2b0e:	20 83       	st	Z, r18
    2b10:	31 97       	sbiw	r30, 0x01	; 1
    2b12:	27 e2       	ldi	r18, 0x27	; 39
    2b14:	20 83       	st	Z, r18
    2b16:	31 97       	sbiw	r30, 0x01	; 1
    2b18:	28 e2       	ldi	r18, 0x28	; 40
    2b1a:	20 83       	st	Z, r18
    2b1c:	31 97       	sbiw	r30, 0x01	; 1
    2b1e:	29 e2       	ldi	r18, 0x29	; 41
    2b20:	20 83       	st	Z, r18
    2b22:	31 97       	sbiw	r30, 0x01	; 1
    2b24:	20 e3       	ldi	r18, 0x30	; 48
    2b26:	20 83       	st	Z, r18
    2b28:	31 97       	sbiw	r30, 0x01	; 1
    2b2a:	21 e3       	ldi	r18, 0x31	; 49
    2b2c:	20 83       	st	Z, r18
    2b2e:	89 97       	sbiw	r24, 0x29	; 41
    2b30:	08 95       	ret

00002b32 <xPortStartScheduler>:
    2b32:	82 e0       	ldi	r24, 0x02	; 2
    2b34:	80 93 b0 00 	sts	0x00B0, r24
    2b38:	10 92 b2 00 	sts	0x00B2, r1
    2b3c:	80 e3       	ldi	r24, 0x30	; 48
    2b3e:	80 93 b3 00 	sts	0x00B3, r24
    2b42:	e0 e7       	ldi	r30, 0x70	; 112
    2b44:	f0 e0       	ldi	r31, 0x00	; 0
    2b46:	80 81       	ld	r24, Z
    2b48:	82 60       	ori	r24, 0x02	; 2
    2b4a:	80 83       	st	Z, r24
    2b4c:	83 e0       	ldi	r24, 0x03	; 3
    2b4e:	80 93 b1 00 	sts	0x00B1, r24
    2b52:	a0 91 85 0e 	lds	r26, 0x0E85
    2b56:	b0 91 86 0e 	lds	r27, 0x0E86
    2b5a:	cd 91       	ld	r28, X+
    2b5c:	cd bf       	out	0x3d, r28	; 61
    2b5e:	dd 91       	ld	r29, X+
    2b60:	de bf       	out	0x3e, r29	; 62
    2b62:	ff 91       	pop	r31
    2b64:	ef 91       	pop	r30
    2b66:	df 91       	pop	r29
    2b68:	cf 91       	pop	r28
    2b6a:	bf 91       	pop	r27
    2b6c:	af 91       	pop	r26
    2b6e:	9f 91       	pop	r25
    2b70:	8f 91       	pop	r24
    2b72:	7f 91       	pop	r23
    2b74:	6f 91       	pop	r22
    2b76:	5f 91       	pop	r21
    2b78:	4f 91       	pop	r20
    2b7a:	3f 91       	pop	r19
    2b7c:	2f 91       	pop	r18
    2b7e:	1f 91       	pop	r17
    2b80:	0f 91       	pop	r16
    2b82:	ff 90       	pop	r15
    2b84:	ef 90       	pop	r14
    2b86:	df 90       	pop	r13
    2b88:	cf 90       	pop	r12
    2b8a:	bf 90       	pop	r11
    2b8c:	af 90       	pop	r10
    2b8e:	9f 90       	pop	r9
    2b90:	8f 90       	pop	r8
    2b92:	7f 90       	pop	r7
    2b94:	6f 90       	pop	r6
    2b96:	5f 90       	pop	r5
    2b98:	4f 90       	pop	r4
    2b9a:	3f 90       	pop	r3
    2b9c:	2f 90       	pop	r2
    2b9e:	1f 90       	pop	r1
    2ba0:	0f 90       	pop	r0
    2ba2:	0c be       	out	0x3c, r0	; 60
    2ba4:	0f 90       	pop	r0
    2ba6:	0b be       	out	0x3b, r0	; 59
    2ba8:	0f 90       	pop	r0
    2baa:	0f be       	out	0x3f, r0	; 63
    2bac:	0f 90       	pop	r0
    2bae:	08 95       	ret
    2bb0:	81 e0       	ldi	r24, 0x01	; 1
    2bb2:	08 95       	ret

00002bb4 <vPortYield>:
 * can use a naked attribute.
 */
void vPortYield( void ) __attribute__ ( ( naked ) );
void vPortYield( void )
{
	portSAVE_CONTEXT();
    2bb4:	0f 92       	push	r0
    2bb6:	0f b6       	in	r0, 0x3f	; 63
    2bb8:	f8 94       	cli
    2bba:	0f 92       	push	r0
    2bbc:	0b b6       	in	r0, 0x3b	; 59
    2bbe:	0f 92       	push	r0
    2bc0:	0c b6       	in	r0, 0x3c	; 60
    2bc2:	0f 92       	push	r0
    2bc4:	1f 92       	push	r1
    2bc6:	11 24       	eor	r1, r1
    2bc8:	2f 92       	push	r2
    2bca:	3f 92       	push	r3
    2bcc:	4f 92       	push	r4
    2bce:	5f 92       	push	r5
    2bd0:	6f 92       	push	r6
    2bd2:	7f 92       	push	r7
    2bd4:	8f 92       	push	r8
    2bd6:	9f 92       	push	r9
    2bd8:	af 92       	push	r10
    2bda:	bf 92       	push	r11
    2bdc:	cf 92       	push	r12
    2bde:	df 92       	push	r13
    2be0:	ef 92       	push	r14
    2be2:	ff 92       	push	r15
    2be4:	0f 93       	push	r16
    2be6:	1f 93       	push	r17
    2be8:	2f 93       	push	r18
    2bea:	3f 93       	push	r19
    2bec:	4f 93       	push	r20
    2bee:	5f 93       	push	r21
    2bf0:	6f 93       	push	r22
    2bf2:	7f 93       	push	r23
    2bf4:	8f 93       	push	r24
    2bf6:	9f 93       	push	r25
    2bf8:	af 93       	push	r26
    2bfa:	bf 93       	push	r27
    2bfc:	cf 93       	push	r28
    2bfe:	df 93       	push	r29
    2c00:	ef 93       	push	r30
    2c02:	ff 93       	push	r31
    2c04:	a0 91 85 0e 	lds	r26, 0x0E85
    2c08:	b0 91 86 0e 	lds	r27, 0x0E86
    2c0c:	0d b6       	in	r0, 0x3d	; 61
    2c0e:	0d 92       	st	X+, r0
    2c10:	0e b6       	in	r0, 0x3e	; 62
    2c12:	0d 92       	st	X+, r0
	vTaskSwitchContext();
    2c14:	61 d3       	rcall	.+1730   	; 0x32d8 <vTaskSwitchContext>
	portRESTORE_CONTEXT();
    2c16:	a0 91 85 0e 	lds	r26, 0x0E85
    2c1a:	b0 91 86 0e 	lds	r27, 0x0E86
    2c1e:	cd 91       	ld	r28, X+
    2c20:	cd bf       	out	0x3d, r28	; 61
    2c22:	dd 91       	ld	r29, X+
    2c24:	de bf       	out	0x3e, r29	; 62
    2c26:	ff 91       	pop	r31
    2c28:	ef 91       	pop	r30
    2c2a:	df 91       	pop	r29
    2c2c:	cf 91       	pop	r28
    2c2e:	bf 91       	pop	r27
    2c30:	af 91       	pop	r26
    2c32:	9f 91       	pop	r25
    2c34:	8f 91       	pop	r24
    2c36:	7f 91       	pop	r23
    2c38:	6f 91       	pop	r22
    2c3a:	5f 91       	pop	r21
    2c3c:	4f 91       	pop	r20
    2c3e:	3f 91       	pop	r19
    2c40:	2f 91       	pop	r18
    2c42:	1f 91       	pop	r17
    2c44:	0f 91       	pop	r16
    2c46:	ff 90       	pop	r15
    2c48:	ef 90       	pop	r14
    2c4a:	df 90       	pop	r13
    2c4c:	cf 90       	pop	r12
    2c4e:	bf 90       	pop	r11
    2c50:	af 90       	pop	r10
    2c52:	9f 90       	pop	r9
    2c54:	8f 90       	pop	r8
    2c56:	7f 90       	pop	r7
    2c58:	6f 90       	pop	r6
    2c5a:	5f 90       	pop	r5
    2c5c:	4f 90       	pop	r4
    2c5e:	3f 90       	pop	r3
    2c60:	2f 90       	pop	r2
    2c62:	1f 90       	pop	r1
    2c64:	0f 90       	pop	r0
    2c66:	0c be       	out	0x3c, r0	; 60
    2c68:	0f 90       	pop	r0
    2c6a:	0b be       	out	0x3b, r0	; 59
    2c6c:	0f 90       	pop	r0
    2c6e:	0f be       	out	0x3f, r0	; 63
    2c70:	0f 90       	pop	r0

	asm volatile ( "ret" );
    2c72:	08 95       	ret

00002c74 <vPortYieldFromTick>:
 * call comes from the tick ISR.
 */
void vPortYieldFromTick( void ) __attribute__ ( ( naked ) );
void vPortYieldFromTick( void )
{
	portSAVE_CONTEXT();
    2c74:	0f 92       	push	r0
    2c76:	0f b6       	in	r0, 0x3f	; 63
    2c78:	f8 94       	cli
    2c7a:	0f 92       	push	r0
    2c7c:	0b b6       	in	r0, 0x3b	; 59
    2c7e:	0f 92       	push	r0
    2c80:	0c b6       	in	r0, 0x3c	; 60
    2c82:	0f 92       	push	r0
    2c84:	1f 92       	push	r1
    2c86:	11 24       	eor	r1, r1
    2c88:	2f 92       	push	r2
    2c8a:	3f 92       	push	r3
    2c8c:	4f 92       	push	r4
    2c8e:	5f 92       	push	r5
    2c90:	6f 92       	push	r6
    2c92:	7f 92       	push	r7
    2c94:	8f 92       	push	r8
    2c96:	9f 92       	push	r9
    2c98:	af 92       	push	r10
    2c9a:	bf 92       	push	r11
    2c9c:	cf 92       	push	r12
    2c9e:	df 92       	push	r13
    2ca0:	ef 92       	push	r14
    2ca2:	ff 92       	push	r15
    2ca4:	0f 93       	push	r16
    2ca6:	1f 93       	push	r17
    2ca8:	2f 93       	push	r18
    2caa:	3f 93       	push	r19
    2cac:	4f 93       	push	r20
    2cae:	5f 93       	push	r21
    2cb0:	6f 93       	push	r22
    2cb2:	7f 93       	push	r23
    2cb4:	8f 93       	push	r24
    2cb6:	9f 93       	push	r25
    2cb8:	af 93       	push	r26
    2cba:	bf 93       	push	r27
    2cbc:	cf 93       	push	r28
    2cbe:	df 93       	push	r29
    2cc0:	ef 93       	push	r30
    2cc2:	ff 93       	push	r31
    2cc4:	a0 91 85 0e 	lds	r26, 0x0E85
    2cc8:	b0 91 86 0e 	lds	r27, 0x0E86
    2ccc:	0d b6       	in	r0, 0x3d	; 61
    2cce:	0d 92       	st	X+, r0
    2cd0:	0e b6       	in	r0, 0x3e	; 62
    2cd2:	0d 92       	st	X+, r0
	if( xTaskIncrementTick() != pdFALSE )
    2cd4:	89 d1       	rcall	.+786    	; 0x2fe8 <xTaskIncrementTick>
    2cd6:	81 11       	cpse	r24, r1
	{
		vTaskSwitchContext();
    2cd8:	ff d2       	rcall	.+1534   	; 0x32d8 <vTaskSwitchContext>
	}
	portRESTORE_CONTEXT();
    2cda:	a0 91 85 0e 	lds	r26, 0x0E85
    2cde:	b0 91 86 0e 	lds	r27, 0x0E86
    2ce2:	cd 91       	ld	r28, X+
    2ce4:	cd bf       	out	0x3d, r28	; 61
    2ce6:	dd 91       	ld	r29, X+
    2ce8:	de bf       	out	0x3e, r29	; 62
    2cea:	ff 91       	pop	r31
    2cec:	ef 91       	pop	r30
    2cee:	df 91       	pop	r29
    2cf0:	cf 91       	pop	r28
    2cf2:	bf 91       	pop	r27
    2cf4:	af 91       	pop	r26
    2cf6:	9f 91       	pop	r25
    2cf8:	8f 91       	pop	r24
    2cfa:	7f 91       	pop	r23
    2cfc:	6f 91       	pop	r22
    2cfe:	5f 91       	pop	r21
    2d00:	4f 91       	pop	r20
    2d02:	3f 91       	pop	r19
    2d04:	2f 91       	pop	r18
    2d06:	1f 91       	pop	r17
    2d08:	0f 91       	pop	r16
    2d0a:	ff 90       	pop	r15
    2d0c:	ef 90       	pop	r14
    2d0e:	df 90       	pop	r13
    2d10:	cf 90       	pop	r12
    2d12:	bf 90       	pop	r11
    2d14:	af 90       	pop	r10
    2d16:	9f 90       	pop	r9
    2d18:	8f 90       	pop	r8
    2d1a:	7f 90       	pop	r7
    2d1c:	6f 90       	pop	r6
    2d1e:	5f 90       	pop	r5
    2d20:	4f 90       	pop	r4
    2d22:	3f 90       	pop	r3
    2d24:	2f 90       	pop	r2
    2d26:	1f 90       	pop	r1
    2d28:	0f 90       	pop	r0
    2d2a:	0c be       	out	0x3c, r0	; 60
    2d2c:	0f 90       	pop	r0
    2d2e:	0b be       	out	0x3b, r0	; 59
    2d30:	0f 90       	pop	r0
    2d32:	0f be       	out	0x3f, r0	; 63
    2d34:	0f 90       	pop	r0

	asm volatile ( "ret" );
    2d36:	08 95       	ret

00002d38 <__vector_13>:
*	the	context	is	saved	at	the	start	of	vPortYieldFromTick().		The	tick
*	count	is	incremented	after	the	context	is	saved.
*/
ISR(TIMER2_COMPA_vect,	ISR_NAKED)
{
	vPortYieldFromTick();
    2d38:	9d df       	rcall	.-198    	; 0x2c74 <vPortYieldFromTick>
	asm	volatile	(	"reti"	);
    2d3a:	18 95       	reti

00002d3c <prvResetNextTaskUnblockTime>:
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
    2d3c:	e0 91 4d 0e 	lds	r30, 0x0E4D
    2d40:	f0 91 4e 0e 	lds	r31, 0x0E4E
    2d44:	80 81       	ld	r24, Z
    2d46:	81 11       	cpse	r24, r1
    2d48:	07 c0       	rjmp	.+14     	; 0x2d58 <prvResetNextTaskUnblockTime+0x1c>
    2d4a:	8f ef       	ldi	r24, 0xFF	; 255
    2d4c:	9f ef       	ldi	r25, 0xFF	; 255
    2d4e:	90 93 5f 02 	sts	0x025F, r25
    2d52:	80 93 5e 02 	sts	0x025E, r24
    2d56:	08 95       	ret
    2d58:	e0 91 4d 0e 	lds	r30, 0x0E4D
    2d5c:	f0 91 4e 0e 	lds	r31, 0x0E4E
    2d60:	05 80       	ldd	r0, Z+5	; 0x05
    2d62:	f6 81       	ldd	r31, Z+6	; 0x06
    2d64:	e0 2d       	mov	r30, r0
    2d66:	06 80       	ldd	r0, Z+6	; 0x06
    2d68:	f7 81       	ldd	r31, Z+7	; 0x07
    2d6a:	e0 2d       	mov	r30, r0
    2d6c:	82 81       	ldd	r24, Z+2	; 0x02
    2d6e:	93 81       	ldd	r25, Z+3	; 0x03
    2d70:	90 93 5f 02 	sts	0x025F, r25
    2d74:	80 93 5e 02 	sts	0x025E, r24
    2d78:	08 95       	ret

00002d7a <xTaskGenericCreate>:
    2d7a:	4f 92       	push	r4
    2d7c:	5f 92       	push	r5
    2d7e:	6f 92       	push	r6
    2d80:	7f 92       	push	r7
    2d82:	8f 92       	push	r8
    2d84:	9f 92       	push	r9
    2d86:	af 92       	push	r10
    2d88:	bf 92       	push	r11
    2d8a:	cf 92       	push	r12
    2d8c:	df 92       	push	r13
    2d8e:	ef 92       	push	r14
    2d90:	ff 92       	push	r15
    2d92:	0f 93       	push	r16
    2d94:	1f 93       	push	r17
    2d96:	cf 93       	push	r28
    2d98:	df 93       	push	r29
    2d9a:	4c 01       	movw	r8, r24
    2d9c:	5b 01       	movw	r10, r22
    2d9e:	2a 01       	movw	r4, r20
    2da0:	39 01       	movw	r6, r18
    2da2:	81 e2       	ldi	r24, 0x21	; 33
    2da4:	90 e0       	ldi	r25, 0x00	; 0
    2da6:	0e 94 87 0c 	call	0x190e	; 0x190e <pvPortMalloc>
    2daa:	ec 01       	movw	r28, r24
    2dac:	00 97       	sbiw	r24, 0x00	; 0
    2dae:	09 f4       	brne	.+2      	; 0x2db2 <xTaskGenericCreate+0x38>
    2db0:	da c0       	rjmp	.+436    	; 0x2f66 <xTaskGenericCreate+0x1ec>
    2db2:	c1 14       	cp	r12, r1
    2db4:	d1 04       	cpc	r13, r1
    2db6:	09 f0       	breq	.+2      	; 0x2dba <xTaskGenericCreate+0x40>
    2db8:	bf c0       	rjmp	.+382    	; 0x2f38 <xTaskGenericCreate+0x1be>
    2dba:	c2 01       	movw	r24, r4
    2dbc:	0e 94 87 0c 	call	0x190e	; 0x190e <pvPortMalloc>
    2dc0:	98 8f       	std	Y+24, r25	; 0x18
    2dc2:	8f 8b       	std	Y+23, r24	; 0x17
    2dc4:	89 2b       	or	r24, r25
    2dc6:	09 f0       	breq	.+2      	; 0x2dca <xTaskGenericCreate+0x50>
    2dc8:	b9 c0       	rjmp	.+370    	; 0x2f3c <xTaskGenericCreate+0x1c2>
    2dca:	ce 01       	movw	r24, r28
    2dcc:	0e 94 bc 0c 	call	0x1978	; 0x1978 <vPortFree>
    2dd0:	ca c0       	rjmp	.+404    	; 0x2f66 <xTaskGenericCreate+0x1ec>
    2dd2:	cf 01       	movw	r24, r30
    2dd4:	31 91       	ld	r19, Z+
    2dd6:	da 01       	movw	r26, r20
    2dd8:	3d 93       	st	X+, r19
    2dda:	ad 01       	movw	r20, r26
    2ddc:	dc 01       	movw	r26, r24
    2dde:	8c 91       	ld	r24, X
    2de0:	88 23       	and	r24, r24
    2de2:	11 f0       	breq	.+4      	; 0x2de8 <xTaskGenericCreate+0x6e>
    2de4:	21 50       	subi	r18, 0x01	; 1
    2de6:	a9 f7       	brne	.-22     	; 0x2dd2 <xTaskGenericCreate+0x58>
    2de8:	18 a2       	std	Y+32, r1	; 0x20
    2dea:	10 2f       	mov	r17, r16
    2dec:	04 30       	cpi	r16, 0x04	; 4
    2dee:	08 f0       	brcs	.+2      	; 0x2df2 <xTaskGenericCreate+0x78>
    2df0:	13 e0       	ldi	r17, 0x03	; 3
    2df2:	1e 8b       	std	Y+22, r17	; 0x16
    2df4:	5e 01       	movw	r10, r28
    2df6:	b2 e0       	ldi	r27, 0x02	; 2
    2df8:	ab 0e       	add	r10, r27
    2dfa:	b1 1c       	adc	r11, r1
    2dfc:	c5 01       	movw	r24, r10
    2dfe:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <vListInitialiseItem>
    2e02:	ce 01       	movw	r24, r28
    2e04:	0c 96       	adiw	r24, 0x0c	; 12
    2e06:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <vListInitialiseItem>
    2e0a:	d9 87       	std	Y+9, r29	; 0x09
    2e0c:	c8 87       	std	Y+8, r28	; 0x08
    2e0e:	84 e0       	ldi	r24, 0x04	; 4
    2e10:	90 e0       	ldi	r25, 0x00	; 0
    2e12:	81 1b       	sub	r24, r17
    2e14:	91 09       	sbc	r25, r1
    2e16:	9d 87       	std	Y+13, r25	; 0x0d
    2e18:	8c 87       	std	Y+12, r24	; 0x0c
    2e1a:	db 8b       	std	Y+19, r29	; 0x13
    2e1c:	ca 8b       	std	Y+18, r28	; 0x12
    2e1e:	a3 01       	movw	r20, r6
    2e20:	b4 01       	movw	r22, r8
    2e22:	c6 01       	movw	r24, r12
    2e24:	14 de       	rcall	.-984    	; 0x2a4e <pxPortInitialiseStack>
    2e26:	99 83       	std	Y+1, r25	; 0x01
    2e28:	88 83       	st	Y, r24
    2e2a:	e1 14       	cp	r14, r1
    2e2c:	f1 04       	cpc	r15, r1
    2e2e:	19 f0       	breq	.+6      	; 0x2e36 <xTaskGenericCreate+0xbc>
    2e30:	f7 01       	movw	r30, r14
    2e32:	d1 83       	std	Z+1, r29	; 0x01
    2e34:	c0 83       	st	Z, r28
    2e36:	0f b6       	in	r0, 0x3f	; 63
    2e38:	f8 94       	cli
    2e3a:	0f 92       	push	r0
    2e3c:	80 91 37 0e 	lds	r24, 0x0E37
    2e40:	8f 5f       	subi	r24, 0xFF	; 255
    2e42:	80 93 37 0e 	sts	0x0E37, r24
    2e46:	80 91 85 0e 	lds	r24, 0x0E85
    2e4a:	90 91 86 0e 	lds	r25, 0x0E86
    2e4e:	89 2b       	or	r24, r25
    2e50:	a9 f5       	brne	.+106    	; 0x2ebc <xTaskGenericCreate+0x142>
    2e52:	d0 93 86 0e 	sts	0x0E86, r29
    2e56:	c0 93 85 0e 	sts	0x0E85, r28
    2e5a:	80 91 37 0e 	lds	r24, 0x0E37
    2e5e:	81 30       	cpi	r24, 0x01	; 1
    2e60:	e1 f5       	brne	.+120    	; 0x2eda <xTaskGenericCreate+0x160>
    2e62:	81 e6       	ldi	r24, 0x61	; 97
    2e64:	9e e0       	ldi	r25, 0x0E	; 14
    2e66:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <vListInitialise>
    2e6a:	8a e6       	ldi	r24, 0x6A	; 106
    2e6c:	9e e0       	ldi	r25, 0x0E	; 14
    2e6e:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <vListInitialise>
    2e72:	83 e7       	ldi	r24, 0x73	; 115
    2e74:	9e e0       	ldi	r25, 0x0E	; 14
    2e76:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <vListInitialise>
    2e7a:	8c e7       	ldi	r24, 0x7C	; 124
    2e7c:	9e e0       	ldi	r25, 0x0E	; 14
    2e7e:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <vListInitialise>
    2e82:	88 e5       	ldi	r24, 0x58	; 88
    2e84:	9e e0       	ldi	r25, 0x0E	; 14
    2e86:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <vListInitialise>
    2e8a:	8f e4       	ldi	r24, 0x4F	; 79
    2e8c:	9e e0       	ldi	r25, 0x0E	; 14
    2e8e:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <vListInitialise>
    2e92:	82 e4       	ldi	r24, 0x42	; 66
    2e94:	9e e0       	ldi	r25, 0x0E	; 14
    2e96:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <vListInitialise>
    2e9a:	89 e3       	ldi	r24, 0x39	; 57
    2e9c:	9e e0       	ldi	r25, 0x0E	; 14
    2e9e:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <vListInitialise>
    2ea2:	88 e5       	ldi	r24, 0x58	; 88
    2ea4:	9e e0       	ldi	r25, 0x0E	; 14
    2ea6:	90 93 4e 0e 	sts	0x0E4E, r25
    2eaa:	80 93 4d 0e 	sts	0x0E4D, r24
    2eae:	8f e4       	ldi	r24, 0x4F	; 79
    2eb0:	9e e0       	ldi	r25, 0x0E	; 14
    2eb2:	90 93 4c 0e 	sts	0x0E4C, r25
    2eb6:	80 93 4b 0e 	sts	0x0E4B, r24
    2eba:	0f c0       	rjmp	.+30     	; 0x2eda <xTaskGenericCreate+0x160>
    2ebc:	80 91 33 0e 	lds	r24, 0x0E33
    2ec0:	81 11       	cpse	r24, r1
    2ec2:	0b c0       	rjmp	.+22     	; 0x2eda <xTaskGenericCreate+0x160>
    2ec4:	e0 91 85 0e 	lds	r30, 0x0E85
    2ec8:	f0 91 86 0e 	lds	r31, 0x0E86
    2ecc:	86 89       	ldd	r24, Z+22	; 0x16
    2ece:	08 17       	cp	r16, r24
    2ed0:	20 f0       	brcs	.+8      	; 0x2eda <xTaskGenericCreate+0x160>
    2ed2:	d0 93 86 0e 	sts	0x0E86, r29
    2ed6:	c0 93 85 0e 	sts	0x0E85, r28
    2eda:	80 91 2f 0e 	lds	r24, 0x0E2F
    2ede:	8f 5f       	subi	r24, 0xFF	; 255
    2ee0:	80 93 2f 0e 	sts	0x0E2F, r24
    2ee4:	8e 89       	ldd	r24, Y+22	; 0x16
    2ee6:	90 91 34 0e 	lds	r25, 0x0E34
    2eea:	98 17       	cp	r25, r24
    2eec:	10 f4       	brcc	.+4      	; 0x2ef2 <xTaskGenericCreate+0x178>
    2eee:	80 93 34 0e 	sts	0x0E34, r24
    2ef2:	90 e0       	ldi	r25, 0x00	; 0
    2ef4:	9c 01       	movw	r18, r24
    2ef6:	22 0f       	add	r18, r18
    2ef8:	33 1f       	adc	r19, r19
    2efa:	22 0f       	add	r18, r18
    2efc:	33 1f       	adc	r19, r19
    2efe:	22 0f       	add	r18, r18
    2f00:	33 1f       	adc	r19, r19
    2f02:	82 0f       	add	r24, r18
    2f04:	93 1f       	adc	r25, r19
    2f06:	b5 01       	movw	r22, r10
    2f08:	8f 59       	subi	r24, 0x9F	; 159
    2f0a:	91 4f       	sbci	r25, 0xF1	; 241
    2f0c:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <vListInsertEnd>
    2f10:	0f 90       	pop	r0
    2f12:	0f be       	out	0x3f, r0	; 63
    2f14:	80 91 33 0e 	lds	r24, 0x0E33
    2f18:	88 23       	and	r24, r24
    2f1a:	51 f0       	breq	.+20     	; 0x2f30 <xTaskGenericCreate+0x1b6>
    2f1c:	e0 91 85 0e 	lds	r30, 0x0E85
    2f20:	f0 91 86 0e 	lds	r31, 0x0E86
    2f24:	86 89       	ldd	r24, Z+22	; 0x16
    2f26:	80 17       	cp	r24, r16
    2f28:	28 f4       	brcc	.+10     	; 0x2f34 <xTaskGenericCreate+0x1ba>
    2f2a:	44 de       	rcall	.-888    	; 0x2bb4 <vPortYield>
    2f2c:	81 e0       	ldi	r24, 0x01	; 1
    2f2e:	1c c0       	rjmp	.+56     	; 0x2f68 <xTaskGenericCreate+0x1ee>
    2f30:	81 e0       	ldi	r24, 0x01	; 1
    2f32:	1a c0       	rjmp	.+52     	; 0x2f68 <xTaskGenericCreate+0x1ee>
    2f34:	81 e0       	ldi	r24, 0x01	; 1
    2f36:	18 c0       	rjmp	.+48     	; 0x2f68 <xTaskGenericCreate+0x1ee>
    2f38:	d8 8e       	std	Y+24, r13	; 0x18
    2f3a:	cf 8a       	std	Y+23, r12	; 0x17
    2f3c:	f1 e0       	ldi	r31, 0x01	; 1
    2f3e:	4f 1a       	sub	r4, r31
    2f40:	51 08       	sbc	r5, r1
    2f42:	cf 88       	ldd	r12, Y+23	; 0x17
    2f44:	d8 8c       	ldd	r13, Y+24	; 0x18
    2f46:	c4 0c       	add	r12, r4
    2f48:	d5 1c       	adc	r13, r5
    2f4a:	d5 01       	movw	r26, r10
    2f4c:	8c 91       	ld	r24, X
    2f4e:	89 8f       	std	Y+25, r24	; 0x19
    2f50:	8c 91       	ld	r24, X
    2f52:	88 23       	and	r24, r24
    2f54:	09 f4       	brne	.+2      	; 0x2f58 <xTaskGenericCreate+0x1de>
    2f56:	48 cf       	rjmp	.-368    	; 0x2de8 <xTaskGenericCreate+0x6e>
    2f58:	ae 01       	movw	r20, r28
    2f5a:	46 5e       	subi	r20, 0xE6	; 230
    2f5c:	5f 4f       	sbci	r21, 0xFF	; 255
    2f5e:	f5 01       	movw	r30, r10
    2f60:	31 96       	adiw	r30, 0x01	; 1
    2f62:	27 e0       	ldi	r18, 0x07	; 7
    2f64:	36 cf       	rjmp	.-404    	; 0x2dd2 <xTaskGenericCreate+0x58>
    2f66:	8f ef       	ldi	r24, 0xFF	; 255
    2f68:	df 91       	pop	r29
    2f6a:	cf 91       	pop	r28
    2f6c:	1f 91       	pop	r17
    2f6e:	0f 91       	pop	r16
    2f70:	ff 90       	pop	r15
    2f72:	ef 90       	pop	r14
    2f74:	df 90       	pop	r13
    2f76:	cf 90       	pop	r12
    2f78:	bf 90       	pop	r11
    2f7a:	af 90       	pop	r10
    2f7c:	9f 90       	pop	r9
    2f7e:	8f 90       	pop	r8
    2f80:	7f 90       	pop	r7
    2f82:	6f 90       	pop	r6
    2f84:	5f 90       	pop	r5
    2f86:	4f 90       	pop	r4
    2f88:	08 95       	ret

00002f8a <vTaskStartScheduler>:
    2f8a:	af 92       	push	r10
    2f8c:	bf 92       	push	r11
    2f8e:	cf 92       	push	r12
    2f90:	df 92       	push	r13
    2f92:	ef 92       	push	r14
    2f94:	ff 92       	push	r15
    2f96:	0f 93       	push	r16
    2f98:	a1 2c       	mov	r10, r1
    2f9a:	b1 2c       	mov	r11, r1
    2f9c:	c1 2c       	mov	r12, r1
    2f9e:	d1 2c       	mov	r13, r1
    2fa0:	e1 2c       	mov	r14, r1
    2fa2:	f1 2c       	mov	r15, r1
    2fa4:	00 e0       	ldi	r16, 0x00	; 0
    2fa6:	20 e0       	ldi	r18, 0x00	; 0
    2fa8:	30 e0       	ldi	r19, 0x00	; 0
    2faa:	45 e5       	ldi	r20, 0x55	; 85
    2fac:	50 e0       	ldi	r21, 0x00	; 0
    2fae:	6f ea       	ldi	r22, 0xAF	; 175
    2fb0:	72 e0       	ldi	r23, 0x02	; 2
    2fb2:	83 e3       	ldi	r24, 0x33	; 51
    2fb4:	99 e1       	ldi	r25, 0x19	; 25
    2fb6:	e1 de       	rcall	.-574    	; 0x2d7a <xTaskGenericCreate>
    2fb8:	81 30       	cpi	r24, 0x01	; 1
    2fba:	41 f4       	brne	.+16     	; 0x2fcc <vTaskStartScheduler+0x42>
    2fbc:	f8 94       	cli
    2fbe:	80 93 33 0e 	sts	0x0E33, r24
    2fc2:	10 92 36 0e 	sts	0x0E36, r1
    2fc6:	10 92 35 0e 	sts	0x0E35, r1
    2fca:	b3 dd       	rcall	.-1178   	; 0x2b32 <xPortStartScheduler>
    2fcc:	0f 91       	pop	r16
    2fce:	ff 90       	pop	r15
    2fd0:	ef 90       	pop	r14
    2fd2:	df 90       	pop	r13
    2fd4:	cf 90       	pop	r12
    2fd6:	bf 90       	pop	r11
    2fd8:	af 90       	pop	r10
    2fda:	08 95       	ret

00002fdc <vTaskSuspendAll>:
    2fdc:	80 91 2e 0e 	lds	r24, 0x0E2E
    2fe0:	8f 5f       	subi	r24, 0xFF	; 255
    2fe2:	80 93 2e 0e 	sts	0x0E2E, r24
    2fe6:	08 95       	ret

00002fe8 <xTaskIncrementTick>:
    2fe8:	cf 92       	push	r12
    2fea:	df 92       	push	r13
    2fec:	ef 92       	push	r14
    2fee:	ff 92       	push	r15
    2ff0:	0f 93       	push	r16
    2ff2:	1f 93       	push	r17
    2ff4:	cf 93       	push	r28
    2ff6:	df 93       	push	r29
    2ff8:	80 91 2e 0e 	lds	r24, 0x0E2E
    2ffc:	81 11       	cpse	r24, r1
    2ffe:	99 c0       	rjmp	.+306    	; 0x3132 <xTaskIncrementTick+0x14a>
    3000:	80 91 35 0e 	lds	r24, 0x0E35
    3004:	90 91 36 0e 	lds	r25, 0x0E36
    3008:	01 96       	adiw	r24, 0x01	; 1
    300a:	90 93 36 0e 	sts	0x0E36, r25
    300e:	80 93 35 0e 	sts	0x0E35, r24
    3012:	e0 90 35 0e 	lds	r14, 0x0E35
    3016:	f0 90 36 0e 	lds	r15, 0x0E36
    301a:	e1 14       	cp	r14, r1
    301c:	f1 04       	cpc	r15, r1
    301e:	b1 f4       	brne	.+44     	; 0x304c <xTaskIncrementTick+0x64>
    3020:	80 91 4d 0e 	lds	r24, 0x0E4D
    3024:	90 91 4e 0e 	lds	r25, 0x0E4E
    3028:	20 91 4b 0e 	lds	r18, 0x0E4B
    302c:	30 91 4c 0e 	lds	r19, 0x0E4C
    3030:	30 93 4e 0e 	sts	0x0E4E, r19
    3034:	20 93 4d 0e 	sts	0x0E4D, r18
    3038:	90 93 4c 0e 	sts	0x0E4C, r25
    303c:	80 93 4b 0e 	sts	0x0E4B, r24
    3040:	80 91 30 0e 	lds	r24, 0x0E30
    3044:	8f 5f       	subi	r24, 0xFF	; 255
    3046:	80 93 30 0e 	sts	0x0E30, r24
    304a:	78 de       	rcall	.-784    	; 0x2d3c <prvResetNextTaskUnblockTime>
    304c:	80 91 5e 02 	lds	r24, 0x025E
    3050:	90 91 5f 02 	lds	r25, 0x025F
    3054:	e8 16       	cp	r14, r24
    3056:	f9 06       	cpc	r15, r25
    3058:	08 f4       	brcc	.+2      	; 0x305c <xTaskIncrementTick+0x74>
    305a:	54 c0       	rjmp	.+168    	; 0x3104 <xTaskIncrementTick+0x11c>
    305c:	d1 2c       	mov	r13, r1
    305e:	cc 24       	eor	r12, r12
    3060:	c3 94       	inc	r12
    3062:	01 c0       	rjmp	.+2      	; 0x3066 <xTaskIncrementTick+0x7e>
    3064:	dc 2c       	mov	r13, r12
    3066:	e0 91 4d 0e 	lds	r30, 0x0E4D
    306a:	f0 91 4e 0e 	lds	r31, 0x0E4E
    306e:	80 81       	ld	r24, Z
    3070:	81 11       	cpse	r24, r1
    3072:	07 c0       	rjmp	.+14     	; 0x3082 <xTaskIncrementTick+0x9a>
    3074:	8f ef       	ldi	r24, 0xFF	; 255
    3076:	9f ef       	ldi	r25, 0xFF	; 255
    3078:	90 93 5f 02 	sts	0x025F, r25
    307c:	80 93 5e 02 	sts	0x025E, r24
    3080:	42 c0       	rjmp	.+132    	; 0x3106 <xTaskIncrementTick+0x11e>
    3082:	e0 91 4d 0e 	lds	r30, 0x0E4D
    3086:	f0 91 4e 0e 	lds	r31, 0x0E4E
    308a:	05 80       	ldd	r0, Z+5	; 0x05
    308c:	f6 81       	ldd	r31, Z+6	; 0x06
    308e:	e0 2d       	mov	r30, r0
    3090:	c6 81       	ldd	r28, Z+6	; 0x06
    3092:	d7 81       	ldd	r29, Z+7	; 0x07
    3094:	2a 81       	ldd	r18, Y+2	; 0x02
    3096:	3b 81       	ldd	r19, Y+3	; 0x03
    3098:	e2 16       	cp	r14, r18
    309a:	f3 06       	cpc	r15, r19
    309c:	28 f4       	brcc	.+10     	; 0x30a8 <xTaskIncrementTick+0xc0>
    309e:	30 93 5f 02 	sts	0x025F, r19
    30a2:	20 93 5e 02 	sts	0x025E, r18
    30a6:	2f c0       	rjmp	.+94     	; 0x3106 <xTaskIncrementTick+0x11e>
    30a8:	8e 01       	movw	r16, r28
    30aa:	0e 5f       	subi	r16, 0xFE	; 254
    30ac:	1f 4f       	sbci	r17, 0xFF	; 255
    30ae:	c8 01       	movw	r24, r16
    30b0:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <uxListRemove>
    30b4:	8c 89       	ldd	r24, Y+20	; 0x14
    30b6:	9d 89       	ldd	r25, Y+21	; 0x15
    30b8:	89 2b       	or	r24, r25
    30ba:	21 f0       	breq	.+8      	; 0x30c4 <xTaskIncrementTick+0xdc>
    30bc:	ce 01       	movw	r24, r28
    30be:	0c 96       	adiw	r24, 0x0c	; 12
    30c0:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <uxListRemove>
    30c4:	2e 89       	ldd	r18, Y+22	; 0x16
    30c6:	80 91 34 0e 	lds	r24, 0x0E34
    30ca:	82 17       	cp	r24, r18
    30cc:	10 f4       	brcc	.+4      	; 0x30d2 <xTaskIncrementTick+0xea>
    30ce:	20 93 34 0e 	sts	0x0E34, r18
    30d2:	30 e0       	ldi	r19, 0x00	; 0
    30d4:	c9 01       	movw	r24, r18
    30d6:	88 0f       	add	r24, r24
    30d8:	99 1f       	adc	r25, r25
    30da:	88 0f       	add	r24, r24
    30dc:	99 1f       	adc	r25, r25
    30de:	88 0f       	add	r24, r24
    30e0:	99 1f       	adc	r25, r25
    30e2:	82 0f       	add	r24, r18
    30e4:	93 1f       	adc	r25, r19
    30e6:	b8 01       	movw	r22, r16
    30e8:	8f 59       	subi	r24, 0x9F	; 159
    30ea:	91 4f       	sbci	r25, 0xF1	; 241
    30ec:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <vListInsertEnd>
    30f0:	e0 91 85 0e 	lds	r30, 0x0E85
    30f4:	f0 91 86 0e 	lds	r31, 0x0E86
    30f8:	9e 89       	ldd	r25, Y+22	; 0x16
    30fa:	86 89       	ldd	r24, Z+22	; 0x16
    30fc:	98 17       	cp	r25, r24
    30fe:	08 f0       	brcs	.+2      	; 0x3102 <xTaskIncrementTick+0x11a>
    3100:	b1 cf       	rjmp	.-158    	; 0x3064 <xTaskIncrementTick+0x7c>
    3102:	b1 cf       	rjmp	.-158    	; 0x3066 <xTaskIncrementTick+0x7e>
    3104:	d1 2c       	mov	r13, r1
    3106:	e0 91 85 0e 	lds	r30, 0x0E85
    310a:	f0 91 86 0e 	lds	r31, 0x0E86
    310e:	86 89       	ldd	r24, Z+22	; 0x16
    3110:	90 e0       	ldi	r25, 0x00	; 0
    3112:	fc 01       	movw	r30, r24
    3114:	ee 0f       	add	r30, r30
    3116:	ff 1f       	adc	r31, r31
    3118:	ee 0f       	add	r30, r30
    311a:	ff 1f       	adc	r31, r31
    311c:	ee 0f       	add	r30, r30
    311e:	ff 1f       	adc	r31, r31
    3120:	8e 0f       	add	r24, r30
    3122:	9f 1f       	adc	r25, r31
    3124:	fc 01       	movw	r30, r24
    3126:	ef 59       	subi	r30, 0x9F	; 159
    3128:	f1 4f       	sbci	r31, 0xF1	; 241
    312a:	80 81       	ld	r24, Z
    312c:	82 30       	cpi	r24, 0x02	; 2
    312e:	40 f4       	brcc	.+16     	; 0x3140 <xTaskIncrementTick+0x158>
    3130:	09 c0       	rjmp	.+18     	; 0x3144 <xTaskIncrementTick+0x15c>
    3132:	80 91 32 0e 	lds	r24, 0x0E32
    3136:	8f 5f       	subi	r24, 0xFF	; 255
    3138:	80 93 32 0e 	sts	0x0E32, r24
    313c:	d1 2c       	mov	r13, r1
    313e:	02 c0       	rjmp	.+4      	; 0x3144 <xTaskIncrementTick+0x15c>
    3140:	dd 24       	eor	r13, r13
    3142:	d3 94       	inc	r13
    3144:	80 91 31 0e 	lds	r24, 0x0E31
    3148:	88 23       	and	r24, r24
    314a:	11 f0       	breq	.+4      	; 0x3150 <xTaskIncrementTick+0x168>
    314c:	dd 24       	eor	r13, r13
    314e:	d3 94       	inc	r13
    3150:	8d 2d       	mov	r24, r13
    3152:	df 91       	pop	r29
    3154:	cf 91       	pop	r28
    3156:	1f 91       	pop	r17
    3158:	0f 91       	pop	r16
    315a:	ff 90       	pop	r15
    315c:	ef 90       	pop	r14
    315e:	df 90       	pop	r13
    3160:	cf 90       	pop	r12
    3162:	08 95       	ret

00003164 <xTaskResumeAll>:
    3164:	df 92       	push	r13
    3166:	ef 92       	push	r14
    3168:	ff 92       	push	r15
    316a:	0f 93       	push	r16
    316c:	1f 93       	push	r17
    316e:	cf 93       	push	r28
    3170:	df 93       	push	r29
    3172:	0f b6       	in	r0, 0x3f	; 63
    3174:	f8 94       	cli
    3176:	0f 92       	push	r0
    3178:	80 91 2e 0e 	lds	r24, 0x0E2E
    317c:	81 50       	subi	r24, 0x01	; 1
    317e:	80 93 2e 0e 	sts	0x0E2E, r24
    3182:	80 91 2e 0e 	lds	r24, 0x0E2E
    3186:	81 11       	cpse	r24, r1
    3188:	5f c0       	rjmp	.+190    	; 0x3248 <xTaskResumeAll+0xe4>
    318a:	80 91 37 0e 	lds	r24, 0x0E37
    318e:	88 23       	and	r24, r24
    3190:	09 f4       	brne	.+2      	; 0x3194 <xTaskResumeAll+0x30>
    3192:	5c c0       	rjmp	.+184    	; 0x324c <xTaskResumeAll+0xe8>
    3194:	0f 2e       	mov	r0, r31
    3196:	f2 e4       	ldi	r31, 0x42	; 66
    3198:	ef 2e       	mov	r14, r31
    319a:	fe e0       	ldi	r31, 0x0E	; 14
    319c:	ff 2e       	mov	r15, r31
    319e:	f0 2d       	mov	r31, r0
    31a0:	dd 24       	eor	r13, r13
    31a2:	d3 94       	inc	r13
    31a4:	30 c0       	rjmp	.+96     	; 0x3206 <xTaskResumeAll+0xa2>
    31a6:	e0 91 47 0e 	lds	r30, 0x0E47
    31aa:	f0 91 48 0e 	lds	r31, 0x0E48
    31ae:	c6 81       	ldd	r28, Z+6	; 0x06
    31b0:	d7 81       	ldd	r29, Z+7	; 0x07
    31b2:	ce 01       	movw	r24, r28
    31b4:	0c 96       	adiw	r24, 0x0c	; 12
    31b6:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <uxListRemove>
    31ba:	8e 01       	movw	r16, r28
    31bc:	0e 5f       	subi	r16, 0xFE	; 254
    31be:	1f 4f       	sbci	r17, 0xFF	; 255
    31c0:	c8 01       	movw	r24, r16
    31c2:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <uxListRemove>
    31c6:	8e 89       	ldd	r24, Y+22	; 0x16
    31c8:	90 91 34 0e 	lds	r25, 0x0E34
    31cc:	98 17       	cp	r25, r24
    31ce:	10 f4       	brcc	.+4      	; 0x31d4 <xTaskResumeAll+0x70>
    31d0:	80 93 34 0e 	sts	0x0E34, r24
    31d4:	90 e0       	ldi	r25, 0x00	; 0
    31d6:	9c 01       	movw	r18, r24
    31d8:	22 0f       	add	r18, r18
    31da:	33 1f       	adc	r19, r19
    31dc:	22 0f       	add	r18, r18
    31de:	33 1f       	adc	r19, r19
    31e0:	22 0f       	add	r18, r18
    31e2:	33 1f       	adc	r19, r19
    31e4:	82 0f       	add	r24, r18
    31e6:	93 1f       	adc	r25, r19
    31e8:	b8 01       	movw	r22, r16
    31ea:	8f 59       	subi	r24, 0x9F	; 159
    31ec:	91 4f       	sbci	r25, 0xF1	; 241
    31ee:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <vListInsertEnd>
    31f2:	e0 91 85 0e 	lds	r30, 0x0E85
    31f6:	f0 91 86 0e 	lds	r31, 0x0E86
    31fa:	9e 89       	ldd	r25, Y+22	; 0x16
    31fc:	86 89       	ldd	r24, Z+22	; 0x16
    31fe:	98 17       	cp	r25, r24
    3200:	10 f0       	brcs	.+4      	; 0x3206 <xTaskResumeAll+0xa2>
    3202:	d0 92 31 0e 	sts	0x0E31, r13
    3206:	f7 01       	movw	r30, r14
    3208:	80 81       	ld	r24, Z
    320a:	81 11       	cpse	r24, r1
    320c:	cc cf       	rjmp	.-104    	; 0x31a6 <xTaskResumeAll+0x42>
    320e:	80 91 32 0e 	lds	r24, 0x0E32
    3212:	88 23       	and	r24, r24
    3214:	91 f0       	breq	.+36     	; 0x323a <xTaskResumeAll+0xd6>
    3216:	80 91 32 0e 	lds	r24, 0x0E32
    321a:	88 23       	and	r24, r24
    321c:	71 f0       	breq	.+28     	; 0x323a <xTaskResumeAll+0xd6>
    321e:	c1 e0       	ldi	r28, 0x01	; 1
    3220:	e3 de       	rcall	.-570    	; 0x2fe8 <xTaskIncrementTick>
    3222:	81 11       	cpse	r24, r1
    3224:	c0 93 31 0e 	sts	0x0E31, r28
    3228:	80 91 32 0e 	lds	r24, 0x0E32
    322c:	81 50       	subi	r24, 0x01	; 1
    322e:	80 93 32 0e 	sts	0x0E32, r24
    3232:	80 91 32 0e 	lds	r24, 0x0E32
    3236:	81 11       	cpse	r24, r1
    3238:	f3 cf       	rjmp	.-26     	; 0x3220 <xTaskResumeAll+0xbc>
    323a:	80 91 31 0e 	lds	r24, 0x0E31
    323e:	81 30       	cpi	r24, 0x01	; 1
    3240:	39 f4       	brne	.+14     	; 0x3250 <xTaskResumeAll+0xec>
    3242:	b8 dc       	rcall	.-1680   	; 0x2bb4 <vPortYield>
    3244:	81 e0       	ldi	r24, 0x01	; 1
    3246:	05 c0       	rjmp	.+10     	; 0x3252 <xTaskResumeAll+0xee>
    3248:	80 e0       	ldi	r24, 0x00	; 0
    324a:	03 c0       	rjmp	.+6      	; 0x3252 <xTaskResumeAll+0xee>
    324c:	80 e0       	ldi	r24, 0x00	; 0
    324e:	01 c0       	rjmp	.+2      	; 0x3252 <xTaskResumeAll+0xee>
    3250:	80 e0       	ldi	r24, 0x00	; 0
    3252:	0f 90       	pop	r0
    3254:	0f be       	out	0x3f, r0	; 63
    3256:	df 91       	pop	r29
    3258:	cf 91       	pop	r28
    325a:	1f 91       	pop	r17
    325c:	0f 91       	pop	r16
    325e:	ff 90       	pop	r15
    3260:	ef 90       	pop	r14
    3262:	df 90       	pop	r13
    3264:	08 95       	ret

00003266 <prvIdleTask>:

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    3266:	0f 2e       	mov	r0, r31
    3268:	f1 e6       	ldi	r31, 0x61	; 97
    326a:	ef 2e       	mov	r14, r31
    326c:	fe e0       	ldi	r31, 0x0E	; 14
    326e:	ff 2e       	mov	r15, r31
    3270:	f0 2d       	mov	r31, r0
		too often in the idle task. */
		while( uxTasksDeleted > ( UBaseType_t ) 0U )
		{
			vTaskSuspendAll();
			{
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
    3272:	c9 e3       	ldi	r28, 0x39	; 57
    3274:	de e0       	ldi	r29, 0x0E	; 14
    3276:	26 c0       	rjmp	.+76     	; 0x32c4 <prvIdleTask+0x5e>

		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
		too often in the idle task. */
		while( uxTasksDeleted > ( UBaseType_t ) 0U )
		{
			vTaskSuspendAll();
    3278:	b1 de       	rcall	.-670    	; 0x2fdc <vTaskSuspendAll>
			{
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
    327a:	18 81       	ld	r17, Y
			}
			( void ) xTaskResumeAll();
    327c:	73 df       	rcall	.-282    	; 0x3164 <xTaskResumeAll>

			if( xListIsEmpty == pdFALSE )
    327e:	11 23       	and	r17, r17
    3280:	09 f1       	breq	.+66     	; 0x32c4 <prvIdleTask+0x5e>
			{
				TCB_t *pxTCB;

				taskENTER_CRITICAL();
    3282:	0f b6       	in	r0, 0x3f	; 63
    3284:	f8 94       	cli
    3286:	0f 92       	push	r0
				{
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
    3288:	e0 91 3e 0e 	lds	r30, 0x0E3E
    328c:	f0 91 3f 0e 	lds	r31, 0x0E3F
    3290:	06 81       	ldd	r16, Z+6	; 0x06
    3292:	17 81       	ldd	r17, Z+7	; 0x07
					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
    3294:	c8 01       	movw	r24, r16
    3296:	02 96       	adiw	r24, 0x02	; 2
    3298:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <uxListRemove>
					--uxCurrentNumberOfTasks;
    329c:	80 91 37 0e 	lds	r24, 0x0E37
    32a0:	81 50       	subi	r24, 0x01	; 1
    32a2:	80 93 37 0e 	sts	0x0E37, r24
					--uxTasksDeleted;
    32a6:	80 91 38 0e 	lds	r24, 0x0E38
    32aa:	81 50       	subi	r24, 0x01	; 1
    32ac:	80 93 38 0e 	sts	0x0E38, r24
				}
				taskEXIT_CRITICAL();
    32b0:	0f 90       	pop	r0
    32b2:	0f be       	out	0x3f, r0	; 63
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
		}
		#endif /* configUSE_NEWLIB_REENTRANT */
		vPortFreeAligned( pxTCB->pxStack );
    32b4:	f8 01       	movw	r30, r16
    32b6:	87 89       	ldd	r24, Z+23	; 0x17
    32b8:	90 8d       	ldd	r25, Z+24	; 0x18
    32ba:	0e 94 bc 0c 	call	0x1978	; 0x1978 <vPortFree>
		vPortFree( pxTCB );
    32be:	c8 01       	movw	r24, r16
    32c0:	0e 94 bc 0c 	call	0x1978	; 0x1978 <vPortFree>
	{
		BaseType_t xListIsEmpty;

		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
		too often in the idle task. */
		while( uxTasksDeleted > ( UBaseType_t ) 0U )
    32c4:	80 91 38 0e 	lds	r24, 0x0E38
    32c8:	81 11       	cpse	r24, r1
    32ca:	d6 cf       	rjmp	.-84     	; 0x3278 <prvIdleTask+0x12>

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    32cc:	f7 01       	movw	r30, r14
    32ce:	80 81       	ld	r24, Z
    32d0:	82 30       	cpi	r24, 0x02	; 2
    32d2:	c0 f3       	brcs	.-16     	; 0x32c4 <prvIdleTask+0x5e>
			{
				taskYIELD();
    32d4:	6f dc       	rcall	.-1826   	; 0x2bb4 <vPortYield>
    32d6:	f6 cf       	rjmp	.-20     	; 0x32c4 <prvIdleTask+0x5e>

000032d8 <vTaskSwitchContext>:
#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
    32d8:	80 91 2e 0e 	lds	r24, 0x0E2E
    32dc:	88 23       	and	r24, r24
    32de:	21 f0       	breq	.+8      	; 0x32e8 <vTaskSwitchContext+0x10>
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xYieldPending = pdTRUE;
    32e0:	81 e0       	ldi	r24, 0x01	; 1
    32e2:	80 93 31 0e 	sts	0x0E31, r24
    32e6:	08 95       	ret
	}
	else
	{
		xYieldPending = pdFALSE;
    32e8:	10 92 31 0e 	sts	0x0E31, r1
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		/* Select a new task to run using either the generic C or port
		optimised asm code. */
		taskSELECT_HIGHEST_PRIORITY_TASK();
    32ec:	80 91 34 0e 	lds	r24, 0x0E34
    32f0:	90 e0       	ldi	r25, 0x00	; 0
    32f2:	fc 01       	movw	r30, r24
    32f4:	ee 0f       	add	r30, r30
    32f6:	ff 1f       	adc	r31, r31
    32f8:	ee 0f       	add	r30, r30
    32fa:	ff 1f       	adc	r31, r31
    32fc:	ee 0f       	add	r30, r30
    32fe:	ff 1f       	adc	r31, r31
    3300:	8e 0f       	add	r24, r30
    3302:	9f 1f       	adc	r25, r31
    3304:	fc 01       	movw	r30, r24
    3306:	ef 59       	subi	r30, 0x9F	; 159
    3308:	f1 4f       	sbci	r31, 0xF1	; 241
    330a:	80 81       	ld	r24, Z
    330c:	81 11       	cpse	r24, r1
    330e:	17 c0       	rjmp	.+46     	; 0x333e <vTaskSwitchContext+0x66>
    3310:	80 91 34 0e 	lds	r24, 0x0E34
    3314:	81 50       	subi	r24, 0x01	; 1
    3316:	80 93 34 0e 	sts	0x0E34, r24
    331a:	80 91 34 0e 	lds	r24, 0x0E34
    331e:	90 e0       	ldi	r25, 0x00	; 0
    3320:	fc 01       	movw	r30, r24
    3322:	ee 0f       	add	r30, r30
    3324:	ff 1f       	adc	r31, r31
    3326:	ee 0f       	add	r30, r30
    3328:	ff 1f       	adc	r31, r31
    332a:	ee 0f       	add	r30, r30
    332c:	ff 1f       	adc	r31, r31
    332e:	8e 0f       	add	r24, r30
    3330:	9f 1f       	adc	r25, r31
    3332:	fc 01       	movw	r30, r24
    3334:	ef 59       	subi	r30, 0x9F	; 159
    3336:	f1 4f       	sbci	r31, 0xF1	; 241
    3338:	80 81       	ld	r24, Z
    333a:	88 23       	and	r24, r24
    333c:	49 f3       	breq	.-46     	; 0x3310 <vTaskSwitchContext+0x38>
    333e:	e0 91 34 0e 	lds	r30, 0x0E34
    3342:	f0 e0       	ldi	r31, 0x00	; 0
    3344:	cf 01       	movw	r24, r30
    3346:	88 0f       	add	r24, r24
    3348:	99 1f       	adc	r25, r25
    334a:	88 0f       	add	r24, r24
    334c:	99 1f       	adc	r25, r25
    334e:	88 0f       	add	r24, r24
    3350:	99 1f       	adc	r25, r25
    3352:	e8 0f       	add	r30, r24
    3354:	f9 1f       	adc	r31, r25
    3356:	ef 59       	subi	r30, 0x9F	; 159
    3358:	f1 4f       	sbci	r31, 0xF1	; 241
    335a:	a1 81       	ldd	r26, Z+1	; 0x01
    335c:	b2 81       	ldd	r27, Z+2	; 0x02
    335e:	12 96       	adiw	r26, 0x02	; 2
    3360:	0d 90       	ld	r0, X+
    3362:	bc 91       	ld	r27, X
    3364:	a0 2d       	mov	r26, r0
    3366:	b2 83       	std	Z+2, r27	; 0x02
    3368:	a1 83       	std	Z+1, r26	; 0x01
    336a:	cf 01       	movw	r24, r30
    336c:	03 96       	adiw	r24, 0x03	; 3
    336e:	a8 17       	cp	r26, r24
    3370:	b9 07       	cpc	r27, r25
    3372:	31 f4       	brne	.+12     	; 0x3380 <vTaskSwitchContext+0xa8>
    3374:	12 96       	adiw	r26, 0x02	; 2
    3376:	8d 91       	ld	r24, X+
    3378:	9c 91       	ld	r25, X
    337a:	13 97       	sbiw	r26, 0x03	; 3
    337c:	92 83       	std	Z+2, r25	; 0x02
    337e:	81 83       	std	Z+1, r24	; 0x01
    3380:	01 80       	ldd	r0, Z+1	; 0x01
    3382:	f2 81       	ldd	r31, Z+2	; 0x02
    3384:	e0 2d       	mov	r30, r0
    3386:	86 81       	ldd	r24, Z+6	; 0x06
    3388:	97 81       	ldd	r25, Z+7	; 0x07
    338a:	90 93 86 0e 	sts	0x0E86, r25
    338e:	80 93 85 0e 	sts	0x0E85, r24
    3392:	08 95       	ret

00003394 <twi_init>:
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    3394:	10 92 f4 0e 	sts	0x0EF4, r1
    3398:	81 e0       	ldi	r24, 0x01	; 1
    339a:	80 93 f2 0e 	sts	0x0EF2, r24
    339e:	10 92 f1 0e 	sts	0x0EF1, r1
    33a2:	61 e0       	ldi	r22, 0x01	; 1
    33a4:	84 e1       	ldi	r24, 0x14	; 20
    33a6:	0e 94 55 26 	call	0x4caa	; 0x4caa <digitalWrite>
    33aa:	61 e0       	ldi	r22, 0x01	; 1
    33ac:	85 e1       	ldi	r24, 0x15	; 21
    33ae:	0e 94 55 26 	call	0x4caa	; 0x4caa <digitalWrite>
    33b2:	e9 eb       	ldi	r30, 0xB9	; 185
    33b4:	f0 e0       	ldi	r31, 0x00	; 0
    33b6:	80 81       	ld	r24, Z
    33b8:	8e 7f       	andi	r24, 0xFE	; 254
    33ba:	80 83       	st	Z, r24
    33bc:	80 81       	ld	r24, Z
    33be:	8d 7f       	andi	r24, 0xFD	; 253
    33c0:	80 83       	st	Z, r24
    33c2:	88 e4       	ldi	r24, 0x48	; 72
    33c4:	80 93 b8 00 	sts	0x00B8, r24
    33c8:	85 e4       	ldi	r24, 0x45	; 69
    33ca:	80 93 bc 00 	sts	0x00BC, r24
    33ce:	08 95       	ret

000033d0 <twi_readFrom>:
    33d0:	41 32       	cpi	r20, 0x21	; 33
    33d2:	08 f0       	brcs	.+2      	; 0x33d6 <twi_readFrom+0x6>
    33d4:	45 c0       	rjmp	.+138    	; 0x3460 <twi_readFrom+0x90>
    33d6:	90 91 f4 0e 	lds	r25, 0x0EF4
    33da:	91 11       	cpse	r25, r1
    33dc:	fc cf       	rjmp	.-8      	; 0x33d6 <twi_readFrom+0x6>
    33de:	91 e0       	ldi	r25, 0x01	; 1
    33e0:	90 93 f4 0e 	sts	0x0EF4, r25
    33e4:	20 93 f2 0e 	sts	0x0EF2, r18
    33e8:	2f ef       	ldi	r18, 0xFF	; 255
    33ea:	20 93 87 0e 	sts	0x0E87, r18
    33ee:	10 92 cc 0e 	sts	0x0ECC, r1
    33f2:	24 0f       	add	r18, r20
    33f4:	20 93 cb 0e 	sts	0x0ECB, r18
    33f8:	90 93 f3 0e 	sts	0x0EF3, r25
    33fc:	90 91 f3 0e 	lds	r25, 0x0EF3
    3400:	88 0f       	add	r24, r24
    3402:	89 2b       	or	r24, r25
    3404:	80 93 f3 0e 	sts	0x0EF3, r24
    3408:	80 91 f1 0e 	lds	r24, 0x0EF1
    340c:	81 30       	cpi	r24, 0x01	; 1
    340e:	51 f4       	brne	.+20     	; 0x3424 <twi_readFrom+0x54>
    3410:	10 92 f1 0e 	sts	0x0EF1, r1
    3414:	80 91 f3 0e 	lds	r24, 0x0EF3
    3418:	80 93 bb 00 	sts	0x00BB, r24
    341c:	85 ec       	ldi	r24, 0xC5	; 197
    341e:	80 93 bc 00 	sts	0x00BC, r24
    3422:	03 c0       	rjmp	.+6      	; 0x342a <twi_readFrom+0x5a>
    3424:	85 ee       	ldi	r24, 0xE5	; 229
    3426:	80 93 bc 00 	sts	0x00BC, r24
    342a:	80 91 f4 0e 	lds	r24, 0x0EF4
    342e:	81 30       	cpi	r24, 0x01	; 1
    3430:	e1 f3       	breq	.-8      	; 0x342a <twi_readFrom+0x5a>
    3432:	80 91 cc 0e 	lds	r24, 0x0ECC
    3436:	84 17       	cp	r24, r20
    3438:	10 f4       	brcc	.+4      	; 0x343e <twi_readFrom+0x6e>
    343a:	40 91 cc 0e 	lds	r20, 0x0ECC
    343e:	44 23       	and	r20, r20
    3440:	89 f0       	breq	.+34     	; 0x3464 <twi_readFrom+0x94>
    3442:	ed ec       	ldi	r30, 0xCD	; 205
    3444:	fe e0       	ldi	r31, 0x0E	; 14
    3446:	a6 2f       	mov	r26, r22
    3448:	b7 2f       	mov	r27, r23
    344a:	2f ef       	ldi	r18, 0xFF	; 255
    344c:	24 0f       	add	r18, r20
    344e:	30 e0       	ldi	r19, 0x00	; 0
    3450:	22 53       	subi	r18, 0x32	; 50
    3452:	31 4f       	sbci	r19, 0xF1	; 241
    3454:	91 91       	ld	r25, Z+
    3456:	9d 93       	st	X+, r25
    3458:	e2 17       	cp	r30, r18
    345a:	f3 07       	cpc	r31, r19
    345c:	d9 f7       	brne	.-10     	; 0x3454 <twi_readFrom+0x84>
    345e:	04 c0       	rjmp	.+8      	; 0x3468 <twi_readFrom+0x98>
    3460:	80 e0       	ldi	r24, 0x00	; 0
    3462:	08 95       	ret
    3464:	84 2f       	mov	r24, r20
    3466:	08 95       	ret
    3468:	84 2f       	mov	r24, r20
    346a:	08 95       	ret

0000346c <twi_writeTo>:
    346c:	0f 93       	push	r16
    346e:	41 32       	cpi	r20, 0x21	; 33
    3470:	08 f0       	brcs	.+2      	; 0x3474 <twi_writeTo+0x8>
    3472:	50 c0       	rjmp	.+160    	; 0x3514 <twi_writeTo+0xa8>
    3474:	90 91 f4 0e 	lds	r25, 0x0EF4
    3478:	91 11       	cpse	r25, r1
    347a:	fc cf       	rjmp	.-8      	; 0x3474 <twi_writeTo+0x8>
    347c:	92 e0       	ldi	r25, 0x02	; 2
    347e:	90 93 f4 0e 	sts	0x0EF4, r25
    3482:	00 93 f2 0e 	sts	0x0EF2, r16
    3486:	9f ef       	ldi	r25, 0xFF	; 255
    3488:	90 93 87 0e 	sts	0x0E87, r25
    348c:	10 92 cc 0e 	sts	0x0ECC, r1
    3490:	40 93 cb 0e 	sts	0x0ECB, r20
    3494:	44 23       	and	r20, r20
    3496:	69 f0       	breq	.+26     	; 0x34b2 <twi_writeTo+0x46>
    3498:	fb 01       	movw	r30, r22
    349a:	ad ec       	ldi	r26, 0xCD	; 205
    349c:	be e0       	ldi	r27, 0x0E	; 14
    349e:	6f 5f       	subi	r22, 0xFF	; 255
    34a0:	7f 4f       	sbci	r23, 0xFF	; 255
    34a2:	41 50       	subi	r20, 0x01	; 1
    34a4:	64 0f       	add	r22, r20
    34a6:	71 1d       	adc	r23, r1
    34a8:	91 91       	ld	r25, Z+
    34aa:	9d 93       	st	X+, r25
    34ac:	e6 17       	cp	r30, r22
    34ae:	f7 07       	cpc	r31, r23
    34b0:	d9 f7       	brne	.-10     	; 0x34a8 <twi_writeTo+0x3c>
    34b2:	10 92 f3 0e 	sts	0x0EF3, r1
    34b6:	90 91 f3 0e 	lds	r25, 0x0EF3
    34ba:	88 0f       	add	r24, r24
    34bc:	89 2b       	or	r24, r25
    34be:	80 93 f3 0e 	sts	0x0EF3, r24
    34c2:	80 91 f1 0e 	lds	r24, 0x0EF1
    34c6:	81 30       	cpi	r24, 0x01	; 1
    34c8:	51 f4       	brne	.+20     	; 0x34de <twi_writeTo+0x72>
    34ca:	10 92 f1 0e 	sts	0x0EF1, r1
    34ce:	80 91 f3 0e 	lds	r24, 0x0EF3
    34d2:	80 93 bb 00 	sts	0x00BB, r24
    34d6:	85 ec       	ldi	r24, 0xC5	; 197
    34d8:	80 93 bc 00 	sts	0x00BC, r24
    34dc:	03 c0       	rjmp	.+6      	; 0x34e4 <twi_writeTo+0x78>
    34de:	85 ee       	ldi	r24, 0xE5	; 229
    34e0:	80 93 bc 00 	sts	0x00BC, r24
    34e4:	22 23       	and	r18, r18
    34e6:	41 f0       	breq	.+16     	; 0x34f8 <twi_writeTo+0x8c>
    34e8:	80 91 f4 0e 	lds	r24, 0x0EF4
    34ec:	82 30       	cpi	r24, 0x02	; 2
    34ee:	21 f4       	brne	.+8      	; 0x34f8 <twi_writeTo+0x8c>
    34f0:	80 91 f4 0e 	lds	r24, 0x0EF4
    34f4:	82 30       	cpi	r24, 0x02	; 2
    34f6:	e1 f3       	breq	.-8      	; 0x34f0 <twi_writeTo+0x84>
    34f8:	80 91 87 0e 	lds	r24, 0x0E87
    34fc:	8f 3f       	cpi	r24, 0xFF	; 255
    34fe:	61 f0       	breq	.+24     	; 0x3518 <twi_writeTo+0xac>
    3500:	80 91 87 0e 	lds	r24, 0x0E87
    3504:	80 32       	cpi	r24, 0x20	; 32
    3506:	51 f0       	breq	.+20     	; 0x351c <twi_writeTo+0xb0>
    3508:	80 91 87 0e 	lds	r24, 0x0E87
    350c:	80 33       	cpi	r24, 0x30	; 48
    350e:	41 f4       	brne	.+16     	; 0x3520 <twi_writeTo+0xb4>
    3510:	83 e0       	ldi	r24, 0x03	; 3
    3512:	07 c0       	rjmp	.+14     	; 0x3522 <twi_writeTo+0xb6>
    3514:	81 e0       	ldi	r24, 0x01	; 1
    3516:	05 c0       	rjmp	.+10     	; 0x3522 <twi_writeTo+0xb6>
    3518:	80 e0       	ldi	r24, 0x00	; 0
    351a:	03 c0       	rjmp	.+6      	; 0x3522 <twi_writeTo+0xb6>
    351c:	82 e0       	ldi	r24, 0x02	; 2
    351e:	01 c0       	rjmp	.+2      	; 0x3522 <twi_writeTo+0xb6>
    3520:	84 e0       	ldi	r24, 0x04	; 4
    3522:	0f 91       	pop	r16
    3524:	08 95       	ret

00003526 <twi_transmit>:
    3526:	61 32       	cpi	r22, 0x21	; 33
    3528:	a8 f4       	brcc	.+42     	; 0x3554 <twi_transmit+0x2e>
    352a:	20 91 f4 0e 	lds	r18, 0x0EF4
    352e:	24 30       	cpi	r18, 0x04	; 4
    3530:	99 f4       	brne	.+38     	; 0x3558 <twi_transmit+0x32>
    3532:	60 93 a9 0e 	sts	0x0EA9, r22
    3536:	66 23       	and	r22, r22
    3538:	89 f0       	breq	.+34     	; 0x355c <twi_transmit+0x36>
    353a:	fc 01       	movw	r30, r24
    353c:	ab ea       	ldi	r26, 0xAB	; 171
    353e:	be e0       	ldi	r27, 0x0E	; 14
    3540:	01 96       	adiw	r24, 0x01	; 1
    3542:	61 50       	subi	r22, 0x01	; 1
    3544:	86 0f       	add	r24, r22
    3546:	91 1d       	adc	r25, r1
    3548:	21 91       	ld	r18, Z+
    354a:	2d 93       	st	X+, r18
    354c:	e8 17       	cp	r30, r24
    354e:	f9 07       	cpc	r31, r25
    3550:	d9 f7       	brne	.-10     	; 0x3548 <twi_transmit+0x22>
    3552:	06 c0       	rjmp	.+12     	; 0x3560 <twi_transmit+0x3a>
    3554:	81 e0       	ldi	r24, 0x01	; 1
    3556:	08 95       	ret
    3558:	82 e0       	ldi	r24, 0x02	; 2
    355a:	08 95       	ret
    355c:	80 e0       	ldi	r24, 0x00	; 0
    355e:	08 95       	ret
    3560:	80 e0       	ldi	r24, 0x00	; 0
    3562:	08 95       	ret

00003564 <twi_stop>:
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
    3564:	85 ed       	ldi	r24, 0xD5	; 213
    3566:	80 93 bc 00 	sts	0x00BC, r24

  // wait for stop condition to be exectued on bus
  // TWINT is not set after a stop condition!
  while(TWCR & _BV(TWSTO)){
    356a:	ec eb       	ldi	r30, 0xBC	; 188
    356c:	f0 e0       	ldi	r31, 0x00	; 0
    356e:	80 81       	ld	r24, Z
    3570:	84 fd       	sbrc	r24, 4
    3572:	fd cf       	rjmp	.-6      	; 0x356e <twi_stop+0xa>
    continue;
  }

  // update twi state
  twi_state = TWI_READY;
    3574:	10 92 f4 0e 	sts	0x0EF4, r1
    3578:	08 95       	ret

0000357a <twi_releaseBus>:
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    357a:	85 ec       	ldi	r24, 0xC5	; 197
    357c:	80 93 bc 00 	sts	0x00BC, r24

  // update twi state
  twi_state = TWI_READY;
    3580:	10 92 f4 0e 	sts	0x0EF4, r1
    3584:	08 95       	ret

00003586 <__vector_39>:
}

ISR(TWI_vect)
{
    3586:	1f 92       	push	r1
    3588:	0f 92       	push	r0
    358a:	0f b6       	in	r0, 0x3f	; 63
    358c:	0f 92       	push	r0
    358e:	11 24       	eor	r1, r1
    3590:	0b b6       	in	r0, 0x3b	; 59
    3592:	0f 92       	push	r0
    3594:	2f 93       	push	r18
    3596:	3f 93       	push	r19
    3598:	4f 93       	push	r20
    359a:	5f 93       	push	r21
    359c:	6f 93       	push	r22
    359e:	7f 93       	push	r23
    35a0:	8f 93       	push	r24
    35a2:	9f 93       	push	r25
    35a4:	af 93       	push	r26
    35a6:	bf 93       	push	r27
    35a8:	ef 93       	push	r30
    35aa:	ff 93       	push	r31
  switch(TW_STATUS){
    35ac:	80 91 b9 00 	lds	r24, 0x00B9
    35b0:	88 7f       	andi	r24, 0xF8	; 248
    35b2:	90 e0       	ldi	r25, 0x00	; 0
    35b4:	89 3c       	cpi	r24, 0xC9	; 201
    35b6:	91 05       	cpc	r25, r1
    35b8:	08 f0       	brcs	.+2      	; 0x35bc <__vector_39+0x36>
    35ba:	ee c0       	rjmp	.+476    	; 0x3798 <__vector_39+0x212>
    35bc:	fc 01       	movw	r30, r24
    35be:	ee 58       	subi	r30, 0x8E	; 142
    35c0:	ff 4f       	sbci	r31, 0xFF	; 255
    35c2:	0c 94 b6 26 	jmp	0x4d6c	; 0x4d6c <__tablejump2__>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    35c6:	80 91 f3 0e 	lds	r24, 0x0EF3
    35ca:	80 93 bb 00 	sts	0x00BB, r24
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    35ce:	85 ec       	ldi	r24, 0xC5	; 197
    35d0:	80 93 bc 00 	sts	0x00BC, r24
    35d4:	e1 c0       	rjmp	.+450    	; 0x3798 <__vector_39+0x212>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    35d6:	90 91 cc 0e 	lds	r25, 0x0ECC
    35da:	80 91 cb 0e 	lds	r24, 0x0ECB
    35de:	98 17       	cp	r25, r24
    35e0:	80 f4       	brcc	.+32     	; 0x3602 <__vector_39+0x7c>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    35e2:	e0 91 cc 0e 	lds	r30, 0x0ECC
    35e6:	81 e0       	ldi	r24, 0x01	; 1
    35e8:	8e 0f       	add	r24, r30
    35ea:	80 93 cc 0e 	sts	0x0ECC, r24
    35ee:	f0 e0       	ldi	r31, 0x00	; 0
    35f0:	e3 53       	subi	r30, 0x33	; 51
    35f2:	f1 4f       	sbci	r31, 0xF1	; 241
    35f4:	80 81       	ld	r24, Z
    35f6:	80 93 bb 00 	sts	0x00BB, r24
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    35fa:	85 ec       	ldi	r24, 0xC5	; 197
    35fc:	80 93 bc 00 	sts	0x00BC, r24
    3600:	cb c0       	rjmp	.+406    	; 0x3798 <__vector_39+0x212>
      if(twi_masterBufferIndex < twi_masterBufferLength){
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
        twi_reply(1);
      }else{
	if (twi_sendStop)
    3602:	80 91 f2 0e 	lds	r24, 0x0EF2
    3606:	88 23       	and	r24, r24
    3608:	11 f0       	breq	.+4      	; 0x360e <__vector_39+0x88>
          twi_stop();
    360a:	ac df       	rcall	.-168    	; 0x3564 <twi_stop>
    360c:	c5 c0       	rjmp	.+394    	; 0x3798 <__vector_39+0x212>
	else {
	  twi_inRepStart = true;	// we're gonna send the START
    360e:	81 e0       	ldi	r24, 0x01	; 1
    3610:	80 93 f1 0e 	sts	0x0EF1, r24
	  // don't enable the interrupt. We'll generate the start, but we 
	  // avoid handling the interrupt until we're in the next transaction,
	  // at the point where we would normally issue the start.
	  TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    3614:	84 ea       	ldi	r24, 0xA4	; 164
    3616:	80 93 bc 00 	sts	0x00BC, r24
	  twi_state = TWI_READY;
    361a:	10 92 f4 0e 	sts	0x0EF4, r1
    361e:	bc c0       	rjmp	.+376    	; 0x3798 <__vector_39+0x212>
	}
      }
      break;
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
    3620:	80 e2       	ldi	r24, 0x20	; 32
    3622:	80 93 87 0e 	sts	0x0E87, r24
      twi_stop();
    3626:	9e df       	rcall	.-196    	; 0x3564 <twi_stop>
      break;
    3628:	b7 c0       	rjmp	.+366    	; 0x3798 <__vector_39+0x212>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    362a:	80 e3       	ldi	r24, 0x30	; 48
    362c:	80 93 87 0e 	sts	0x0E87, r24
      twi_stop();
    3630:	99 df       	rcall	.-206    	; 0x3564 <twi_stop>
      break;
    3632:	b2 c0       	rjmp	.+356    	; 0x3798 <__vector_39+0x212>
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    3634:	88 e3       	ldi	r24, 0x38	; 56
    3636:	80 93 87 0e 	sts	0x0E87, r24
      twi_releaseBus();
    363a:	9f df       	rcall	.-194    	; 0x357a <twi_releaseBus>
      break;
    363c:	ad c0       	rjmp	.+346    	; 0x3798 <__vector_39+0x212>

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    363e:	e0 91 cc 0e 	lds	r30, 0x0ECC
    3642:	81 e0       	ldi	r24, 0x01	; 1
    3644:	8e 0f       	add	r24, r30
    3646:	80 93 cc 0e 	sts	0x0ECC, r24
    364a:	80 91 bb 00 	lds	r24, 0x00BB
    364e:	f0 e0       	ldi	r31, 0x00	; 0
    3650:	e3 53       	subi	r30, 0x33	; 51
    3652:	f1 4f       	sbci	r31, 0xF1	; 241
    3654:	80 83       	st	Z, r24
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    3656:	90 91 cc 0e 	lds	r25, 0x0ECC
    365a:	80 91 cb 0e 	lds	r24, 0x0ECB
    365e:	98 17       	cp	r25, r24
    3660:	20 f4       	brcc	.+8      	; 0x366a <__vector_39+0xe4>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3662:	85 ec       	ldi	r24, 0xC5	; 197
    3664:	80 93 bc 00 	sts	0x00BC, r24
    3668:	97 c0       	rjmp	.+302    	; 0x3798 <__vector_39+0x212>
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    366a:	85 e8       	ldi	r24, 0x85	; 133
    366c:	80 93 bc 00 	sts	0x00BC, r24
    3670:	93 c0       	rjmp	.+294    	; 0x3798 <__vector_39+0x212>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    3672:	e0 91 cc 0e 	lds	r30, 0x0ECC
    3676:	81 e0       	ldi	r24, 0x01	; 1
    3678:	8e 0f       	add	r24, r30
    367a:	80 93 cc 0e 	sts	0x0ECC, r24
    367e:	80 91 bb 00 	lds	r24, 0x00BB
    3682:	f0 e0       	ldi	r31, 0x00	; 0
    3684:	e3 53       	subi	r30, 0x33	; 51
    3686:	f1 4f       	sbci	r31, 0xF1	; 241
    3688:	80 83       	st	Z, r24
	if (twi_sendStop)
    368a:	80 91 f2 0e 	lds	r24, 0x0EF2
    368e:	88 23       	and	r24, r24
    3690:	11 f0       	breq	.+4      	; 0x3696 <__vector_39+0x110>
          twi_stop();
    3692:	68 df       	rcall	.-304    	; 0x3564 <twi_stop>
    3694:	81 c0       	rjmp	.+258    	; 0x3798 <__vector_39+0x212>
	else {
	  twi_inRepStart = true;	// we're gonna send the START
    3696:	81 e0       	ldi	r24, 0x01	; 1
    3698:	80 93 f1 0e 	sts	0x0EF1, r24
	  // don't enable the interrupt. We'll generate the start, but we 
	  // avoid handling the interrupt until we're in the next transaction,
	  // at the point where we would normally issue the start.
	  TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    369c:	84 ea       	ldi	r24, 0xA4	; 164
    369e:	80 93 bc 00 	sts	0x00BC, r24
	  twi_state = TWI_READY;
    36a2:	10 92 f4 0e 	sts	0x0EF4, r1
    36a6:	78 c0       	rjmp	.+240    	; 0x3798 <__vector_39+0x212>
	}    
	break;
    case TW_MR_SLA_NACK: // address sent, nack received
      twi_stop();
    36a8:	5d df       	rcall	.-326    	; 0x3564 <twi_stop>
      break;
    36aa:	76 c0       	rjmp	.+236    	; 0x3798 <__vector_39+0x212>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    36ac:	83 e0       	ldi	r24, 0x03	; 3
    36ae:	80 93 f4 0e 	sts	0x0EF4, r24
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    36b2:	10 92 88 0e 	sts	0x0E88, r1
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    36b6:	85 ec       	ldi	r24, 0xC5	; 197
    36b8:	80 93 bc 00 	sts	0x00BC, r24
    36bc:	6d c0       	rjmp	.+218    	; 0x3798 <__vector_39+0x212>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    36be:	80 91 88 0e 	lds	r24, 0x0E88
    36c2:	80 32       	cpi	r24, 0x20	; 32
    36c4:	80 f4       	brcc	.+32     	; 0x36e6 <__vector_39+0x160>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    36c6:	e0 91 88 0e 	lds	r30, 0x0E88
    36ca:	81 e0       	ldi	r24, 0x01	; 1
    36cc:	8e 0f       	add	r24, r30
    36ce:	80 93 88 0e 	sts	0x0E88, r24
    36d2:	80 91 bb 00 	lds	r24, 0x00BB
    36d6:	f0 e0       	ldi	r31, 0x00	; 0
    36d8:	e7 57       	subi	r30, 0x77	; 119
    36da:	f1 4f       	sbci	r31, 0xF1	; 241
    36dc:	80 83       	st	Z, r24
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    36de:	85 ec       	ldi	r24, 0xC5	; 197
    36e0:	80 93 bc 00 	sts	0x00BC, r24
    36e4:	59 c0       	rjmp	.+178    	; 0x3798 <__vector_39+0x212>
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    36e6:	85 e8       	ldi	r24, 0x85	; 133
    36e8:	80 93 bc 00 	sts	0x00BC, r24
    36ec:	55 c0       	rjmp	.+170    	; 0x3798 <__vector_39+0x212>
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    36ee:	80 91 88 0e 	lds	r24, 0x0E88
    36f2:	80 32       	cpi	r24, 0x20	; 32
    36f4:	30 f4       	brcc	.+12     	; 0x3702 <__vector_39+0x17c>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    36f6:	e0 91 88 0e 	lds	r30, 0x0E88
    36fa:	f0 e0       	ldi	r31, 0x00	; 0
    36fc:	e7 57       	subi	r30, 0x77	; 119
    36fe:	f1 4f       	sbci	r31, 0xF1	; 241
    3700:	10 82       	st	Z, r1
      }
      // sends ack and stops interface for clock stretching
      twi_stop();
    3702:	30 df       	rcall	.-416    	; 0x3564 <twi_stop>
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    3704:	60 91 88 0e 	lds	r22, 0x0E88
    3708:	70 e0       	ldi	r23, 0x00	; 0
    370a:	e0 91 ed 0e 	lds	r30, 0x0EED
    370e:	f0 91 ee 0e 	lds	r31, 0x0EEE
    3712:	89 e8       	ldi	r24, 0x89	; 137
    3714:	9e e0       	ldi	r25, 0x0E	; 14
    3716:	19 95       	eicall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    3718:	10 92 88 0e 	sts	0x0E88, r1
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    371c:	2e df       	rcall	.-420    	; 0x357a <twi_releaseBus>
      break;
    371e:	3c c0       	rjmp	.+120    	; 0x3798 <__vector_39+0x212>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    3720:	85 e8       	ldi	r24, 0x85	; 133
    3722:	80 93 bc 00 	sts	0x00BC, r24
    3726:	38 c0       	rjmp	.+112    	; 0x3798 <__vector_39+0x212>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    3728:	84 e0       	ldi	r24, 0x04	; 4
    372a:	80 93 f4 0e 	sts	0x0EF4, r24
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    372e:	10 92 aa 0e 	sts	0x0EAA, r1
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    3732:	10 92 a9 0e 	sts	0x0EA9, r1
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    3736:	e0 91 ef 0e 	lds	r30, 0x0EEF
    373a:	f0 91 f0 0e 	lds	r31, 0x0EF0
    373e:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    3740:	80 91 a9 0e 	lds	r24, 0x0EA9
    3744:	81 11       	cpse	r24, r1
    3746:	05 c0       	rjmp	.+10     	; 0x3752 <__vector_39+0x1cc>
        twi_txBufferLength = 1;
    3748:	81 e0       	ldi	r24, 0x01	; 1
    374a:	80 93 a9 0e 	sts	0x0EA9, r24
        twi_txBuffer[0] = 0x00;
    374e:	10 92 ab 0e 	sts	0x0EAB, r1
      }
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    3752:	e0 91 aa 0e 	lds	r30, 0x0EAA
    3756:	81 e0       	ldi	r24, 0x01	; 1
    3758:	8e 0f       	add	r24, r30
    375a:	80 93 aa 0e 	sts	0x0EAA, r24
    375e:	f0 e0       	ldi	r31, 0x00	; 0
    3760:	e5 55       	subi	r30, 0x55	; 85
    3762:	f1 4f       	sbci	r31, 0xF1	; 241
    3764:	80 81       	ld	r24, Z
    3766:	80 93 bb 00 	sts	0x00BB, r24
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    376a:	90 91 aa 0e 	lds	r25, 0x0EAA
    376e:	80 91 a9 0e 	lds	r24, 0x0EA9
    3772:	98 17       	cp	r25, r24
    3774:	20 f4       	brcc	.+8      	; 0x377e <__vector_39+0x1f8>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3776:	85 ec       	ldi	r24, 0xC5	; 197
    3778:	80 93 bc 00 	sts	0x00BC, r24
    377c:	0d c0       	rjmp	.+26     	; 0x3798 <__vector_39+0x212>
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    377e:	85 e8       	ldi	r24, 0x85	; 133
    3780:	80 93 bc 00 	sts	0x00BC, r24
    3784:	09 c0       	rjmp	.+18     	; 0x3798 <__vector_39+0x212>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3786:	85 ec       	ldi	r24, 0xC5	; 197
    3788:	80 93 bc 00 	sts	0x00BC, r24
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    378c:	10 92 f4 0e 	sts	0x0EF4, r1
      break;
    3790:	03 c0       	rjmp	.+6      	; 0x3798 <__vector_39+0x212>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    3792:	10 92 87 0e 	sts	0x0E87, r1
      twi_stop();
    3796:	e6 de       	rcall	.-564    	; 0x3564 <twi_stop>
      break;
  }
}
    3798:	ff 91       	pop	r31
    379a:	ef 91       	pop	r30
    379c:	bf 91       	pop	r27
    379e:	af 91       	pop	r26
    37a0:	9f 91       	pop	r25
    37a2:	8f 91       	pop	r24
    37a4:	7f 91       	pop	r23
    37a6:	6f 91       	pop	r22
    37a8:	5f 91       	pop	r21
    37aa:	4f 91       	pop	r20
    37ac:	3f 91       	pop	r19
    37ae:	2f 91       	pop	r18
    37b0:	0f 90       	pop	r0
    37b2:	0b be       	out	0x3b, r0	; 59
    37b4:	0f 90       	pop	r0
    37b6:	0f be       	out	0x3f, r0	; 63
    37b8:	0f 90       	pop	r0
    37ba:	1f 90       	pop	r1
    37bc:	18 95       	reti

000037be <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
    37be:	80 91 25 0f 	lds	r24, 0x0F25
    37c2:	90 e0       	ldi	r25, 0x00	; 0
    37c4:	20 91 26 0f 	lds	r18, 0x0F26
    37c8:	82 1b       	sub	r24, r18
    37ca:	91 09       	sbc	r25, r1
    37cc:	08 95       	ret

000037ce <_ZN7TwoWire4readEv>:
    37ce:	20 91 26 0f 	lds	r18, 0x0F26
    37d2:	80 91 25 0f 	lds	r24, 0x0F25
    37d6:	28 17       	cp	r18, r24
    37d8:	50 f4       	brcc	.+20     	; 0x37ee <_ZN7TwoWire4readEv+0x20>
    37da:	e2 2f       	mov	r30, r18
    37dc:	f0 e0       	ldi	r31, 0x00	; 0
    37de:	e9 5d       	subi	r30, 0xD9	; 217
    37e0:	f0 4f       	sbci	r31, 0xF0	; 240
    37e2:	80 81       	ld	r24, Z
    37e4:	90 e0       	ldi	r25, 0x00	; 0
    37e6:	2f 5f       	subi	r18, 0xFF	; 255
    37e8:	20 93 26 0f 	sts	0x0F26, r18
    37ec:	08 95       	ret
    37ee:	8f ef       	ldi	r24, 0xFF	; 255
    37f0:	9f ef       	ldi	r25, 0xFF	; 255
    37f2:	08 95       	ret

000037f4 <_ZN7TwoWire4peekEv>:
    37f4:	e0 91 26 0f 	lds	r30, 0x0F26
    37f8:	80 91 25 0f 	lds	r24, 0x0F25
    37fc:	e8 17       	cp	r30, r24
    37fe:	30 f4       	brcc	.+12     	; 0x380c <_ZN7TwoWire4peekEv+0x18>
    3800:	f0 e0       	ldi	r31, 0x00	; 0
    3802:	e9 5d       	subi	r30, 0xD9	; 217
    3804:	f0 4f       	sbci	r31, 0xF0	; 240
    3806:	80 81       	ld	r24, Z
    3808:	90 e0       	ldi	r25, 0x00	; 0
    380a:	08 95       	ret
    380c:	8f ef       	ldi	r24, 0xFF	; 255
    380e:	9f ef       	ldi	r25, 0xFF	; 255
    3810:	08 95       	ret

00003812 <_ZN7TwoWire5flushEv>:
    3812:	08 95       	ret

00003814 <_ZN7TwoWire5writeEPKhj>:
    3814:	cf 92       	push	r12
    3816:	df 92       	push	r13
    3818:	ef 92       	push	r14
    381a:	ff 92       	push	r15
    381c:	0f 93       	push	r16
    381e:	1f 93       	push	r17
    3820:	cf 93       	push	r28
    3822:	df 93       	push	r29
    3824:	8c 01       	movw	r16, r24
    3826:	7b 01       	movw	r14, r22
    3828:	6a 01       	movw	r12, r20
    382a:	80 91 01 0f 	lds	r24, 0x0F01
    382e:	88 23       	and	r24, r24
    3830:	99 f0       	breq	.+38     	; 0x3858 <_ZN7TwoWire5writeEPKhj+0x44>
    3832:	41 15       	cp	r20, r1
    3834:	51 05       	cpc	r21, r1
    3836:	99 f0       	breq	.+38     	; 0x385e <_ZN7TwoWire5writeEPKhj+0x4a>
    3838:	eb 01       	movw	r28, r22
    383a:	e4 0e       	add	r14, r20
    383c:	f5 1e       	adc	r15, r21
    383e:	69 91       	ld	r22, Y+
    3840:	d8 01       	movw	r26, r16
    3842:	ed 91       	ld	r30, X+
    3844:	fc 91       	ld	r31, X
    3846:	01 90       	ld	r0, Z+
    3848:	f0 81       	ld	r31, Z
    384a:	e0 2d       	mov	r30, r0
    384c:	c8 01       	movw	r24, r16
    384e:	19 95       	eicall
    3850:	ce 15       	cp	r28, r14
    3852:	df 05       	cpc	r29, r15
    3854:	a1 f7       	brne	.-24     	; 0x383e <_ZN7TwoWire5writeEPKhj+0x2a>
    3856:	03 c0       	rjmp	.+6      	; 0x385e <_ZN7TwoWire5writeEPKhj+0x4a>
    3858:	64 2f       	mov	r22, r20
    385a:	c7 01       	movw	r24, r14
    385c:	64 de       	rcall	.-824    	; 0x3526 <twi_transmit>
    385e:	c6 01       	movw	r24, r12
    3860:	df 91       	pop	r29
    3862:	cf 91       	pop	r28
    3864:	1f 91       	pop	r17
    3866:	0f 91       	pop	r16
    3868:	ff 90       	pop	r15
    386a:	ef 90       	pop	r14
    386c:	df 90       	pop	r13
    386e:	cf 90       	pop	r12
    3870:	08 95       	ret

00003872 <_ZN7TwoWire5writeEh>:
    3872:	cf 93       	push	r28
    3874:	df 93       	push	r29
    3876:	1f 92       	push	r1
    3878:	cd b7       	in	r28, 0x3d	; 61
    387a:	de b7       	in	r29, 0x3e	; 62
    387c:	69 83       	std	Y+1, r22	; 0x01
    387e:	20 91 01 0f 	lds	r18, 0x0F01
    3882:	22 23       	and	r18, r18
    3884:	e1 f0       	breq	.+56     	; 0x38be <_ZN7TwoWire5writeEh+0x4c>
    3886:	20 91 02 0f 	lds	r18, 0x0F02
    388a:	20 32       	cpi	r18, 0x20	; 32
    388c:	40 f0       	brcs	.+16     	; 0x389e <_ZN7TwoWire5writeEh+0x2c>
    388e:	21 e0       	ldi	r18, 0x01	; 1
    3890:	30 e0       	ldi	r19, 0x00	; 0
    3892:	fc 01       	movw	r30, r24
    3894:	33 83       	std	Z+3, r19	; 0x03
    3896:	22 83       	std	Z+2, r18	; 0x02
    3898:	80 e0       	ldi	r24, 0x00	; 0
    389a:	90 e0       	ldi	r25, 0x00	; 0
    389c:	16 c0       	rjmp	.+44     	; 0x38ca <_ZN7TwoWire5writeEh+0x58>
    389e:	80 91 03 0f 	lds	r24, 0x0F03
    38a2:	e8 2f       	mov	r30, r24
    38a4:	f0 e0       	ldi	r31, 0x00	; 0
    38a6:	ec 5f       	subi	r30, 0xFC	; 252
    38a8:	f0 4f       	sbci	r31, 0xF0	; 240
    38aa:	99 81       	ldd	r25, Y+1	; 0x01
    38ac:	90 83       	st	Z, r25
    38ae:	8f 5f       	subi	r24, 0xFF	; 255
    38b0:	80 93 03 0f 	sts	0x0F03, r24
    38b4:	80 93 02 0f 	sts	0x0F02, r24
    38b8:	81 e0       	ldi	r24, 0x01	; 1
    38ba:	90 e0       	ldi	r25, 0x00	; 0
    38bc:	06 c0       	rjmp	.+12     	; 0x38ca <_ZN7TwoWire5writeEh+0x58>
    38be:	61 e0       	ldi	r22, 0x01	; 1
    38c0:	ce 01       	movw	r24, r28
    38c2:	01 96       	adiw	r24, 0x01	; 1
    38c4:	30 de       	rcall	.-928    	; 0x3526 <twi_transmit>
    38c6:	81 e0       	ldi	r24, 0x01	; 1
    38c8:	90 e0       	ldi	r25, 0x00	; 0
    38ca:	0f 90       	pop	r0
    38cc:	df 91       	pop	r29
    38ce:	cf 91       	pop	r28
    38d0:	08 95       	ret

000038d2 <_ZN7TwoWireC1Ev>:
    38d2:	fc 01       	movw	r30, r24
    38d4:	13 82       	std	Z+3, r1	; 0x03
    38d6:	12 82       	std	Z+2, r1	; 0x02
    38d8:	48 ee       	ldi	r20, 0xE8	; 232
    38da:	53 e0       	ldi	r21, 0x03	; 3
    38dc:	60 e0       	ldi	r22, 0x00	; 0
    38de:	70 e0       	ldi	r23, 0x00	; 0
    38e0:	44 83       	std	Z+4, r20	; 0x04
    38e2:	55 83       	std	Z+5, r21	; 0x05
    38e4:	66 83       	std	Z+6, r22	; 0x06
    38e6:	77 83       	std	Z+7, r23	; 0x07
    38e8:	88 eb       	ldi	r24, 0xB8	; 184
    38ea:	92 e0       	ldi	r25, 0x02	; 2
    38ec:	91 83       	std	Z+1, r25	; 0x01
    38ee:	80 83       	st	Z, r24
    38f0:	08 95       	ret

000038f2 <_ZN7TwoWire5beginEv>:
    38f2:	10 92 26 0f 	sts	0x0F26, r1
    38f6:	10 92 25 0f 	sts	0x0F25, r1
    38fa:	10 92 03 0f 	sts	0x0F03, r1
    38fe:	10 92 02 0f 	sts	0x0F02, r1
    3902:	48 cd       	rjmp	.-1392   	; 0x3394 <twi_init>
    3904:	08 95       	ret

00003906 <_ZN7TwoWire11requestFromEhhh>:
    3906:	86 2f       	mov	r24, r22
    3908:	41 32       	cpi	r20, 0x21	; 33
    390a:	08 f0       	brcs	.+2      	; 0x390e <_ZN7TwoWire11requestFromEhhh+0x8>
    390c:	40 e2       	ldi	r20, 0x20	; 32
    390e:	67 e2       	ldi	r22, 0x27	; 39
    3910:	7f e0       	ldi	r23, 0x0F	; 15
    3912:	5e dd       	rcall	.-1348   	; 0x33d0 <twi_readFrom>
    3914:	10 92 26 0f 	sts	0x0F26, r1
    3918:	80 93 25 0f 	sts	0x0F25, r24
    391c:	08 95       	ret

0000391e <_ZN7TwoWire11requestFromEhh>:
    391e:	21 e0       	ldi	r18, 0x01	; 1
    3920:	f2 cf       	rjmp	.-28     	; 0x3906 <_ZN7TwoWire11requestFromEhhh>
    3922:	08 95       	ret

00003924 <_ZN7TwoWire17beginTransmissionEh>:
    3924:	81 e0       	ldi	r24, 0x01	; 1
    3926:	80 93 01 0f 	sts	0x0F01, r24
    392a:	60 93 24 0f 	sts	0x0F24, r22
    392e:	10 92 03 0f 	sts	0x0F03, r1
    3932:	10 92 02 0f 	sts	0x0F02, r1
    3936:	08 95       	ret

00003938 <_ZN7TwoWire15endTransmissionEh>:
    3938:	0f 93       	push	r16
    393a:	06 2f       	mov	r16, r22
    393c:	21 e0       	ldi	r18, 0x01	; 1
    393e:	40 91 02 0f 	lds	r20, 0x0F02
    3942:	64 e0       	ldi	r22, 0x04	; 4
    3944:	7f e0       	ldi	r23, 0x0F	; 15
    3946:	80 91 24 0f 	lds	r24, 0x0F24
    394a:	90 dd       	rcall	.-1248   	; 0x346c <twi_writeTo>
    394c:	10 92 03 0f 	sts	0x0F03, r1
    3950:	10 92 02 0f 	sts	0x0F02, r1
    3954:	10 92 01 0f 	sts	0x0F01, r1
    3958:	0f 91       	pop	r16
    395a:	08 95       	ret

0000395c <_ZN7TwoWire15endTransmissionEv>:
    395c:	61 e0       	ldi	r22, 0x01	; 1
    395e:	ec cf       	rjmp	.-40     	; 0x3938 <_ZN7TwoWire15endTransmissionEh>
    3960:	08 95       	ret

00003962 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    3962:	85 ef       	ldi	r24, 0xF5	; 245
    3964:	9e e0       	ldi	r25, 0x0E	; 14
    3966:	b5 cf       	rjmp	.-150    	; 0x38d2 <_ZN7TwoWireC1Ev>
    3968:	08 95       	ret

0000396a <__subsf3>:
    396a:	50 58       	subi	r21, 0x80	; 128

0000396c <__addsf3>:
    396c:	bb 27       	eor	r27, r27
    396e:	aa 27       	eor	r26, r26
    3970:	0e d0       	rcall	.+28     	; 0x398e <__addsf3x>
    3972:	39 c2       	rjmp	.+1138   	; 0x3de6 <__fp_round>
    3974:	02 d2       	rcall	.+1028   	; 0x3d7a <__fp_pscA>
    3976:	30 f0       	brcs	.+12     	; 0x3984 <__addsf3+0x18>
    3978:	07 d2       	rcall	.+1038   	; 0x3d88 <__fp_pscB>
    397a:	20 f0       	brcs	.+8      	; 0x3984 <__addsf3+0x18>
    397c:	31 f4       	brne	.+12     	; 0x398a <__addsf3+0x1e>
    397e:	9f 3f       	cpi	r25, 0xFF	; 255
    3980:	11 f4       	brne	.+4      	; 0x3986 <__addsf3+0x1a>
    3982:	1e f4       	brtc	.+6      	; 0x398a <__addsf3+0x1e>
    3984:	c1 c1       	rjmp	.+898    	; 0x3d08 <__fp_nan>
    3986:	0e f4       	brtc	.+2      	; 0x398a <__addsf3+0x1e>
    3988:	e0 95       	com	r30
    398a:	e7 fb       	bst	r30, 7
    398c:	b7 c1       	rjmp	.+878    	; 0x3cfc <__fp_inf>

0000398e <__addsf3x>:
    398e:	e9 2f       	mov	r30, r25
    3990:	4c d2       	rcall	.+1176   	; 0x3e2a <__fp_split3>
    3992:	80 f3       	brcs	.-32     	; 0x3974 <__addsf3+0x8>
    3994:	ba 17       	cp	r27, r26
    3996:	62 07       	cpc	r22, r18
    3998:	73 07       	cpc	r23, r19
    399a:	84 07       	cpc	r24, r20
    399c:	95 07       	cpc	r25, r21
    399e:	18 f0       	brcs	.+6      	; 0x39a6 <__addsf3x+0x18>
    39a0:	71 f4       	brne	.+28     	; 0x39be <__addsf3x+0x30>
    39a2:	9e f5       	brtc	.+102    	; 0x3a0a <__addsf3x+0x7c>
    39a4:	64 c2       	rjmp	.+1224   	; 0x3e6e <__fp_zero>
    39a6:	0e f4       	brtc	.+2      	; 0x39aa <__addsf3x+0x1c>
    39a8:	e0 95       	com	r30
    39aa:	0b 2e       	mov	r0, r27
    39ac:	ba 2f       	mov	r27, r26
    39ae:	a0 2d       	mov	r26, r0
    39b0:	0b 01       	movw	r0, r22
    39b2:	b9 01       	movw	r22, r18
    39b4:	90 01       	movw	r18, r0
    39b6:	0c 01       	movw	r0, r24
    39b8:	ca 01       	movw	r24, r20
    39ba:	a0 01       	movw	r20, r0
    39bc:	11 24       	eor	r1, r1
    39be:	ff 27       	eor	r31, r31
    39c0:	59 1b       	sub	r21, r25
    39c2:	99 f0       	breq	.+38     	; 0x39ea <__addsf3x+0x5c>
    39c4:	59 3f       	cpi	r21, 0xF9	; 249
    39c6:	50 f4       	brcc	.+20     	; 0x39dc <__addsf3x+0x4e>
    39c8:	50 3e       	cpi	r21, 0xE0	; 224
    39ca:	68 f1       	brcs	.+90     	; 0x3a26 <__addsf3x+0x98>
    39cc:	1a 16       	cp	r1, r26
    39ce:	f0 40       	sbci	r31, 0x00	; 0
    39d0:	a2 2f       	mov	r26, r18
    39d2:	23 2f       	mov	r18, r19
    39d4:	34 2f       	mov	r19, r20
    39d6:	44 27       	eor	r20, r20
    39d8:	58 5f       	subi	r21, 0xF8	; 248
    39da:	f3 cf       	rjmp	.-26     	; 0x39c2 <__addsf3x+0x34>
    39dc:	46 95       	lsr	r20
    39de:	37 95       	ror	r19
    39e0:	27 95       	ror	r18
    39e2:	a7 95       	ror	r26
    39e4:	f0 40       	sbci	r31, 0x00	; 0
    39e6:	53 95       	inc	r21
    39e8:	c9 f7       	brne	.-14     	; 0x39dc <__addsf3x+0x4e>
    39ea:	7e f4       	brtc	.+30     	; 0x3a0a <__addsf3x+0x7c>
    39ec:	1f 16       	cp	r1, r31
    39ee:	ba 0b       	sbc	r27, r26
    39f0:	62 0b       	sbc	r22, r18
    39f2:	73 0b       	sbc	r23, r19
    39f4:	84 0b       	sbc	r24, r20
    39f6:	ba f0       	brmi	.+46     	; 0x3a26 <__addsf3x+0x98>
    39f8:	91 50       	subi	r25, 0x01	; 1
    39fa:	a1 f0       	breq	.+40     	; 0x3a24 <__addsf3x+0x96>
    39fc:	ff 0f       	add	r31, r31
    39fe:	bb 1f       	adc	r27, r27
    3a00:	66 1f       	adc	r22, r22
    3a02:	77 1f       	adc	r23, r23
    3a04:	88 1f       	adc	r24, r24
    3a06:	c2 f7       	brpl	.-16     	; 0x39f8 <__addsf3x+0x6a>
    3a08:	0e c0       	rjmp	.+28     	; 0x3a26 <__addsf3x+0x98>
    3a0a:	ba 0f       	add	r27, r26
    3a0c:	62 1f       	adc	r22, r18
    3a0e:	73 1f       	adc	r23, r19
    3a10:	84 1f       	adc	r24, r20
    3a12:	48 f4       	brcc	.+18     	; 0x3a26 <__addsf3x+0x98>
    3a14:	87 95       	ror	r24
    3a16:	77 95       	ror	r23
    3a18:	67 95       	ror	r22
    3a1a:	b7 95       	ror	r27
    3a1c:	f7 95       	ror	r31
    3a1e:	9e 3f       	cpi	r25, 0xFE	; 254
    3a20:	08 f0       	brcs	.+2      	; 0x3a24 <__addsf3x+0x96>
    3a22:	b3 cf       	rjmp	.-154    	; 0x398a <__addsf3+0x1e>
    3a24:	93 95       	inc	r25
    3a26:	88 0f       	add	r24, r24
    3a28:	08 f0       	brcs	.+2      	; 0x3a2c <__addsf3x+0x9e>
    3a2a:	99 27       	eor	r25, r25
    3a2c:	ee 0f       	add	r30, r30
    3a2e:	97 95       	ror	r25
    3a30:	87 95       	ror	r24
    3a32:	08 95       	ret

00003a34 <asin>:
    3a34:	9f 93       	push	r25
    3a36:	9f 77       	andi	r25, 0x7F	; 127
    3a38:	ee e3       	ldi	r30, 0x3E	; 62
    3a3a:	89 37       	cpi	r24, 0x79	; 121
    3a3c:	9e 07       	cpc	r25, r30
    3a3e:	20 f4       	brcc	.+8      	; 0x3a48 <asin+0x14>
    3a40:	e6 e7       	ldi	r30, 0x76	; 118
    3a42:	f2 e0       	ldi	r31, 0x02	; 2
    3a44:	89 d1       	rcall	.+786    	; 0x3d58 <__fp_powsodd>
    3a46:	09 c0       	rjmp	.+18     	; 0x3a5a <asin+0x26>
    3a48:	1a d1       	rcall	.+564    	; 0x3c7e <__fp_arccos>
    3a4a:	90 58       	subi	r25, 0x80	; 128
    3a4c:	a2 ea       	ldi	r26, 0xA2	; 162
    3a4e:	2a ed       	ldi	r18, 0xDA	; 218
    3a50:	3f e0       	ldi	r19, 0x0F	; 15
    3a52:	49 ec       	ldi	r20, 0xC9	; 201
    3a54:	5f e3       	ldi	r21, 0x3F	; 63
    3a56:	9b df       	rcall	.-202    	; 0x398e <__addsf3x>
    3a58:	c6 d1       	rcall	.+908    	; 0x3de6 <__fp_round>
    3a5a:	0f 90       	pop	r0
    3a5c:	07 fc       	sbrc	r0, 7
    3a5e:	90 58       	subi	r25, 0x80	; 128
    3a60:	08 95       	ret
    3a62:	8b d1       	rcall	.+790    	; 0x3d7a <__fp_pscA>
    3a64:	58 f0       	brcs	.+22     	; 0x3a7c <asin+0x48>
    3a66:	80 e8       	ldi	r24, 0x80	; 128
    3a68:	91 e0       	ldi	r25, 0x01	; 1
    3a6a:	09 f4       	brne	.+2      	; 0x3a6e <asin+0x3a>
    3a6c:	9e ef       	ldi	r25, 0xFE	; 254
    3a6e:	8c d1       	rcall	.+792    	; 0x3d88 <__fp_pscB>
    3a70:	28 f0       	brcs	.+10     	; 0x3a7c <asin+0x48>
    3a72:	40 e8       	ldi	r20, 0x80	; 128
    3a74:	51 e0       	ldi	r21, 0x01	; 1
    3a76:	59 f4       	brne	.+22     	; 0x3a8e <atan2+0xe>
    3a78:	5e ef       	ldi	r21, 0xFE	; 254
    3a7a:	09 c0       	rjmp	.+18     	; 0x3a8e <atan2+0xe>
    3a7c:	45 c1       	rjmp	.+650    	; 0x3d08 <__fp_nan>
    3a7e:	f7 c1       	rjmp	.+1006   	; 0x3e6e <__fp_zero>

00003a80 <atan2>:
    3a80:	e9 2f       	mov	r30, r25
    3a82:	e0 78       	andi	r30, 0x80	; 128
    3a84:	d2 d1       	rcall	.+932    	; 0x3e2a <__fp_split3>
    3a86:	68 f3       	brcs	.-38     	; 0x3a62 <asin+0x2e>
    3a88:	09 2e       	mov	r0, r25
    3a8a:	05 2a       	or	r0, r21
    3a8c:	c1 f3       	breq	.-16     	; 0x3a7e <asin+0x4a>
    3a8e:	26 17       	cp	r18, r22
    3a90:	37 07       	cpc	r19, r23
    3a92:	48 07       	cpc	r20, r24
    3a94:	59 07       	cpc	r21, r25
    3a96:	38 f0       	brcs	.+14     	; 0x3aa6 <atan2+0x26>
    3a98:	0e 2e       	mov	r0, r30
    3a9a:	07 f8       	bld	r0, 7
    3a9c:	e0 25       	eor	r30, r0
    3a9e:	69 f0       	breq	.+26     	; 0x3aba <atan2+0x3a>
    3aa0:	e0 25       	eor	r30, r0
    3aa2:	e0 64       	ori	r30, 0x40	; 64
    3aa4:	0a c0       	rjmp	.+20     	; 0x3aba <atan2+0x3a>
    3aa6:	ef 63       	ori	r30, 0x3F	; 63
    3aa8:	07 f8       	bld	r0, 7
    3aaa:	00 94       	com	r0
    3aac:	07 fa       	bst	r0, 7
    3aae:	db 01       	movw	r26, r22
    3ab0:	b9 01       	movw	r22, r18
    3ab2:	9d 01       	movw	r18, r26
    3ab4:	dc 01       	movw	r26, r24
    3ab6:	ca 01       	movw	r24, r20
    3ab8:	ad 01       	movw	r20, r26
    3aba:	ef 93       	push	r30
    3abc:	4a d0       	rcall	.+148    	; 0x3b52 <__divsf3_pse>
    3abe:	93 d1       	rcall	.+806    	; 0x3de6 <__fp_round>
    3ac0:	0a d0       	rcall	.+20     	; 0x3ad6 <atan>
    3ac2:	5f 91       	pop	r21
    3ac4:	55 23       	and	r21, r21
    3ac6:	31 f0       	breq	.+12     	; 0x3ad4 <atan2+0x54>
    3ac8:	2b ed       	ldi	r18, 0xDB	; 219
    3aca:	3f e0       	ldi	r19, 0x0F	; 15
    3acc:	49 e4       	ldi	r20, 0x49	; 73
    3ace:	50 fd       	sbrc	r21, 0
    3ad0:	49 ec       	ldi	r20, 0xC9	; 201
    3ad2:	4c cf       	rjmp	.-360    	; 0x396c <__addsf3>
    3ad4:	08 95       	ret

00003ad6 <atan>:
    3ad6:	df 93       	push	r29
    3ad8:	dd 27       	eor	r29, r29
    3ada:	b9 2f       	mov	r27, r25
    3adc:	bf 77       	andi	r27, 0x7F	; 127
    3ade:	40 e8       	ldi	r20, 0x80	; 128
    3ae0:	5f e3       	ldi	r21, 0x3F	; 63
    3ae2:	16 16       	cp	r1, r22
    3ae4:	17 06       	cpc	r1, r23
    3ae6:	48 07       	cpc	r20, r24
    3ae8:	5b 07       	cpc	r21, r27
    3aea:	10 f4       	brcc	.+4      	; 0x3af0 <atan+0x1a>
    3aec:	d9 2f       	mov	r29, r25
    3aee:	ca d1       	rcall	.+916    	; 0x3e84 <inverse>
    3af0:	9f 93       	push	r25
    3af2:	8f 93       	push	r24
    3af4:	7f 93       	push	r23
    3af6:	6f 93       	push	r22
    3af8:	77 d2       	rcall	.+1262   	; 0x3fe8 <square>
    3afa:	ea e8       	ldi	r30, 0x8A	; 138
    3afc:	f2 e0       	ldi	r31, 0x02	; 2
    3afe:	07 d1       	rcall	.+526    	; 0x3d0e <__fp_powser>
    3b00:	72 d1       	rcall	.+740    	; 0x3de6 <__fp_round>
    3b02:	2f 91       	pop	r18
    3b04:	3f 91       	pop	r19
    3b06:	4f 91       	pop	r20
    3b08:	5f 91       	pop	r21
    3b0a:	cf d1       	rcall	.+926    	; 0x3eaa <__mulsf3x>
    3b0c:	dd 23       	and	r29, r29
    3b0e:	49 f0       	breq	.+18     	; 0x3b22 <atan+0x4c>
    3b10:	90 58       	subi	r25, 0x80	; 128
    3b12:	a2 ea       	ldi	r26, 0xA2	; 162
    3b14:	2a ed       	ldi	r18, 0xDA	; 218
    3b16:	3f e0       	ldi	r19, 0x0F	; 15
    3b18:	49 ec       	ldi	r20, 0xC9	; 201
    3b1a:	5f e3       	ldi	r21, 0x3F	; 63
    3b1c:	d0 78       	andi	r29, 0x80	; 128
    3b1e:	5d 27       	eor	r21, r29
    3b20:	36 df       	rcall	.-404    	; 0x398e <__addsf3x>
    3b22:	df 91       	pop	r29
    3b24:	60 c1       	rjmp	.+704    	; 0x3de6 <__fp_round>

00003b26 <__cmpsf2>:
    3b26:	c6 d0       	rcall	.+396    	; 0x3cb4 <__fp_cmp>
    3b28:	08 f4       	brcc	.+2      	; 0x3b2c <__cmpsf2+0x6>
    3b2a:	81 e0       	ldi	r24, 0x01	; 1
    3b2c:	08 95       	ret

00003b2e <cos>:
    3b2e:	34 d1       	rcall	.+616    	; 0x3d98 <__fp_rempio2>
    3b30:	e3 95       	inc	r30
    3b32:	6a c1       	rjmp	.+724    	; 0x3e08 <__fp_sinus>

00003b34 <__divsf3>:
    3b34:	0c d0       	rcall	.+24     	; 0x3b4e <__divsf3x>
    3b36:	57 c1       	rjmp	.+686    	; 0x3de6 <__fp_round>
    3b38:	27 d1       	rcall	.+590    	; 0x3d88 <__fp_pscB>
    3b3a:	40 f0       	brcs	.+16     	; 0x3b4c <__divsf3+0x18>
    3b3c:	1e d1       	rcall	.+572    	; 0x3d7a <__fp_pscA>
    3b3e:	30 f0       	brcs	.+12     	; 0x3b4c <__divsf3+0x18>
    3b40:	21 f4       	brne	.+8      	; 0x3b4a <__divsf3+0x16>
    3b42:	5f 3f       	cpi	r21, 0xFF	; 255
    3b44:	19 f0       	breq	.+6      	; 0x3b4c <__divsf3+0x18>
    3b46:	da c0       	rjmp	.+436    	; 0x3cfc <__fp_inf>
    3b48:	51 11       	cpse	r21, r1
    3b4a:	92 c1       	rjmp	.+804    	; 0x3e70 <__fp_szero>
    3b4c:	dd c0       	rjmp	.+442    	; 0x3d08 <__fp_nan>

00003b4e <__divsf3x>:
    3b4e:	6d d1       	rcall	.+730    	; 0x3e2a <__fp_split3>
    3b50:	98 f3       	brcs	.-26     	; 0x3b38 <__divsf3+0x4>

00003b52 <__divsf3_pse>:
    3b52:	99 23       	and	r25, r25
    3b54:	c9 f3       	breq	.-14     	; 0x3b48 <__divsf3+0x14>
    3b56:	55 23       	and	r21, r21
    3b58:	b1 f3       	breq	.-20     	; 0x3b46 <__divsf3+0x12>
    3b5a:	95 1b       	sub	r25, r21
    3b5c:	55 0b       	sbc	r21, r21
    3b5e:	bb 27       	eor	r27, r27
    3b60:	aa 27       	eor	r26, r26
    3b62:	62 17       	cp	r22, r18
    3b64:	73 07       	cpc	r23, r19
    3b66:	84 07       	cpc	r24, r20
    3b68:	38 f0       	brcs	.+14     	; 0x3b78 <__divsf3_pse+0x26>
    3b6a:	9f 5f       	subi	r25, 0xFF	; 255
    3b6c:	5f 4f       	sbci	r21, 0xFF	; 255
    3b6e:	22 0f       	add	r18, r18
    3b70:	33 1f       	adc	r19, r19
    3b72:	44 1f       	adc	r20, r20
    3b74:	aa 1f       	adc	r26, r26
    3b76:	a9 f3       	breq	.-22     	; 0x3b62 <__divsf3_pse+0x10>
    3b78:	33 d0       	rcall	.+102    	; 0x3be0 <__divsf3_pse+0x8e>
    3b7a:	0e 2e       	mov	r0, r30
    3b7c:	3a f0       	brmi	.+14     	; 0x3b8c <__divsf3_pse+0x3a>
    3b7e:	e0 e8       	ldi	r30, 0x80	; 128
    3b80:	30 d0       	rcall	.+96     	; 0x3be2 <__divsf3_pse+0x90>
    3b82:	91 50       	subi	r25, 0x01	; 1
    3b84:	50 40       	sbci	r21, 0x00	; 0
    3b86:	e6 95       	lsr	r30
    3b88:	00 1c       	adc	r0, r0
    3b8a:	ca f7       	brpl	.-14     	; 0x3b7e <__divsf3_pse+0x2c>
    3b8c:	29 d0       	rcall	.+82     	; 0x3be0 <__divsf3_pse+0x8e>
    3b8e:	fe 2f       	mov	r31, r30
    3b90:	27 d0       	rcall	.+78     	; 0x3be0 <__divsf3_pse+0x8e>
    3b92:	66 0f       	add	r22, r22
    3b94:	77 1f       	adc	r23, r23
    3b96:	88 1f       	adc	r24, r24
    3b98:	bb 1f       	adc	r27, r27
    3b9a:	26 17       	cp	r18, r22
    3b9c:	37 07       	cpc	r19, r23
    3b9e:	48 07       	cpc	r20, r24
    3ba0:	ab 07       	cpc	r26, r27
    3ba2:	b0 e8       	ldi	r27, 0x80	; 128
    3ba4:	09 f0       	breq	.+2      	; 0x3ba8 <__divsf3_pse+0x56>
    3ba6:	bb 0b       	sbc	r27, r27
    3ba8:	80 2d       	mov	r24, r0
    3baa:	bf 01       	movw	r22, r30
    3bac:	ff 27       	eor	r31, r31
    3bae:	93 58       	subi	r25, 0x83	; 131
    3bb0:	5f 4f       	sbci	r21, 0xFF	; 255
    3bb2:	2a f0       	brmi	.+10     	; 0x3bbe <__divsf3_pse+0x6c>
    3bb4:	9e 3f       	cpi	r25, 0xFE	; 254
    3bb6:	51 05       	cpc	r21, r1
    3bb8:	68 f0       	brcs	.+26     	; 0x3bd4 <__divsf3_pse+0x82>
    3bba:	a0 c0       	rjmp	.+320    	; 0x3cfc <__fp_inf>
    3bbc:	59 c1       	rjmp	.+690    	; 0x3e70 <__fp_szero>
    3bbe:	5f 3f       	cpi	r21, 0xFF	; 255
    3bc0:	ec f3       	brlt	.-6      	; 0x3bbc <__divsf3_pse+0x6a>
    3bc2:	98 3e       	cpi	r25, 0xE8	; 232
    3bc4:	dc f3       	brlt	.-10     	; 0x3bbc <__divsf3_pse+0x6a>
    3bc6:	86 95       	lsr	r24
    3bc8:	77 95       	ror	r23
    3bca:	67 95       	ror	r22
    3bcc:	b7 95       	ror	r27
    3bce:	f7 95       	ror	r31
    3bd0:	9f 5f       	subi	r25, 0xFF	; 255
    3bd2:	c9 f7       	brne	.-14     	; 0x3bc6 <__divsf3_pse+0x74>
    3bd4:	88 0f       	add	r24, r24
    3bd6:	91 1d       	adc	r25, r1
    3bd8:	96 95       	lsr	r25
    3bda:	87 95       	ror	r24
    3bdc:	97 f9       	bld	r25, 7
    3bde:	08 95       	ret
    3be0:	e1 e0       	ldi	r30, 0x01	; 1
    3be2:	66 0f       	add	r22, r22
    3be4:	77 1f       	adc	r23, r23
    3be6:	88 1f       	adc	r24, r24
    3be8:	bb 1f       	adc	r27, r27
    3bea:	62 17       	cp	r22, r18
    3bec:	73 07       	cpc	r23, r19
    3bee:	84 07       	cpc	r24, r20
    3bf0:	ba 07       	cpc	r27, r26
    3bf2:	20 f0       	brcs	.+8      	; 0x3bfc <__divsf3_pse+0xaa>
    3bf4:	62 1b       	sub	r22, r18
    3bf6:	73 0b       	sbc	r23, r19
    3bf8:	84 0b       	sbc	r24, r20
    3bfa:	ba 0b       	sbc	r27, r26
    3bfc:	ee 1f       	adc	r30, r30
    3bfe:	88 f7       	brcc	.-30     	; 0x3be2 <__divsf3_pse+0x90>
    3c00:	e0 95       	com	r30
    3c02:	08 95       	ret

00003c04 <__floatunsisf>:
    3c04:	e8 94       	clt
    3c06:	09 c0       	rjmp	.+18     	; 0x3c1a <__floatsisf+0x12>

00003c08 <__floatsisf>:
    3c08:	97 fb       	bst	r25, 7
    3c0a:	3e f4       	brtc	.+14     	; 0x3c1a <__floatsisf+0x12>
    3c0c:	90 95       	com	r25
    3c0e:	80 95       	com	r24
    3c10:	70 95       	com	r23
    3c12:	61 95       	neg	r22
    3c14:	7f 4f       	sbci	r23, 0xFF	; 255
    3c16:	8f 4f       	sbci	r24, 0xFF	; 255
    3c18:	9f 4f       	sbci	r25, 0xFF	; 255
    3c1a:	99 23       	and	r25, r25
    3c1c:	a9 f0       	breq	.+42     	; 0x3c48 <__floatsisf+0x40>
    3c1e:	f9 2f       	mov	r31, r25
    3c20:	96 e9       	ldi	r25, 0x96	; 150
    3c22:	bb 27       	eor	r27, r27
    3c24:	93 95       	inc	r25
    3c26:	f6 95       	lsr	r31
    3c28:	87 95       	ror	r24
    3c2a:	77 95       	ror	r23
    3c2c:	67 95       	ror	r22
    3c2e:	b7 95       	ror	r27
    3c30:	f1 11       	cpse	r31, r1
    3c32:	f8 cf       	rjmp	.-16     	; 0x3c24 <__floatsisf+0x1c>
    3c34:	fa f4       	brpl	.+62     	; 0x3c74 <__floatsisf+0x6c>
    3c36:	bb 0f       	add	r27, r27
    3c38:	11 f4       	brne	.+4      	; 0x3c3e <__floatsisf+0x36>
    3c3a:	60 ff       	sbrs	r22, 0
    3c3c:	1b c0       	rjmp	.+54     	; 0x3c74 <__floatsisf+0x6c>
    3c3e:	6f 5f       	subi	r22, 0xFF	; 255
    3c40:	7f 4f       	sbci	r23, 0xFF	; 255
    3c42:	8f 4f       	sbci	r24, 0xFF	; 255
    3c44:	9f 4f       	sbci	r25, 0xFF	; 255
    3c46:	16 c0       	rjmp	.+44     	; 0x3c74 <__floatsisf+0x6c>
    3c48:	88 23       	and	r24, r24
    3c4a:	11 f0       	breq	.+4      	; 0x3c50 <__floatsisf+0x48>
    3c4c:	96 e9       	ldi	r25, 0x96	; 150
    3c4e:	11 c0       	rjmp	.+34     	; 0x3c72 <__floatsisf+0x6a>
    3c50:	77 23       	and	r23, r23
    3c52:	21 f0       	breq	.+8      	; 0x3c5c <__floatsisf+0x54>
    3c54:	9e e8       	ldi	r25, 0x8E	; 142
    3c56:	87 2f       	mov	r24, r23
    3c58:	76 2f       	mov	r23, r22
    3c5a:	05 c0       	rjmp	.+10     	; 0x3c66 <__floatsisf+0x5e>
    3c5c:	66 23       	and	r22, r22
    3c5e:	71 f0       	breq	.+28     	; 0x3c7c <__floatsisf+0x74>
    3c60:	96 e8       	ldi	r25, 0x86	; 134
    3c62:	86 2f       	mov	r24, r22
    3c64:	70 e0       	ldi	r23, 0x00	; 0
    3c66:	60 e0       	ldi	r22, 0x00	; 0
    3c68:	2a f0       	brmi	.+10     	; 0x3c74 <__floatsisf+0x6c>
    3c6a:	9a 95       	dec	r25
    3c6c:	66 0f       	add	r22, r22
    3c6e:	77 1f       	adc	r23, r23
    3c70:	88 1f       	adc	r24, r24
    3c72:	da f7       	brpl	.-10     	; 0x3c6a <__floatsisf+0x62>
    3c74:	88 0f       	add	r24, r24
    3c76:	96 95       	lsr	r25
    3c78:	87 95       	ror	r24
    3c7a:	97 f9       	bld	r25, 7
    3c7c:	08 95       	ret

00003c7e <__fp_arccos>:
    3c7e:	df 93       	push	r29
    3c80:	cf 93       	push	r28
    3c82:	1f 93       	push	r17
    3c84:	0f 93       	push	r16
    3c86:	8b 01       	movw	r16, r22
    3c88:	ec 01       	movw	r28, r24
    3c8a:	e7 eb       	ldi	r30, 0xB7	; 183
    3c8c:	f2 e0       	ldi	r31, 0x02	; 2
    3c8e:	3f d0       	rcall	.+126    	; 0x3d0e <__fp_powser>
    3c90:	aa d0       	rcall	.+340    	; 0x3de6 <__fp_round>
    3c92:	98 01       	movw	r18, r16
    3c94:	ae 01       	movw	r20, r28
    3c96:	8b 01       	movw	r16, r22
    3c98:	ec 01       	movw	r28, r24
    3c9a:	60 e0       	ldi	r22, 0x00	; 0
    3c9c:	70 e0       	ldi	r23, 0x00	; 0
    3c9e:	80 e8       	ldi	r24, 0x80	; 128
    3ca0:	9f e3       	ldi	r25, 0x3F	; 63
    3ca2:	63 de       	rcall	.-826    	; 0x396a <__subsf3>
    3ca4:	63 d1       	rcall	.+710    	; 0x3f6c <sqrt>
    3ca6:	98 01       	movw	r18, r16
    3ca8:	ae 01       	movw	r20, r28
    3caa:	0f 91       	pop	r16
    3cac:	1f 91       	pop	r17
    3cae:	cf 91       	pop	r28
    3cb0:	df 91       	pop	r29
    3cb2:	fb c0       	rjmp	.+502    	; 0x3eaa <__mulsf3x>

00003cb4 <__fp_cmp>:
    3cb4:	99 0f       	add	r25, r25
    3cb6:	00 08       	sbc	r0, r0
    3cb8:	55 0f       	add	r21, r21
    3cba:	aa 0b       	sbc	r26, r26
    3cbc:	e0 e8       	ldi	r30, 0x80	; 128
    3cbe:	fe ef       	ldi	r31, 0xFE	; 254
    3cc0:	16 16       	cp	r1, r22
    3cc2:	17 06       	cpc	r1, r23
    3cc4:	e8 07       	cpc	r30, r24
    3cc6:	f9 07       	cpc	r31, r25
    3cc8:	c0 f0       	brcs	.+48     	; 0x3cfa <__fp_cmp+0x46>
    3cca:	12 16       	cp	r1, r18
    3ccc:	13 06       	cpc	r1, r19
    3cce:	e4 07       	cpc	r30, r20
    3cd0:	f5 07       	cpc	r31, r21
    3cd2:	98 f0       	brcs	.+38     	; 0x3cfa <__fp_cmp+0x46>
    3cd4:	62 1b       	sub	r22, r18
    3cd6:	73 0b       	sbc	r23, r19
    3cd8:	84 0b       	sbc	r24, r20
    3cda:	95 0b       	sbc	r25, r21
    3cdc:	39 f4       	brne	.+14     	; 0x3cec <__fp_cmp+0x38>
    3cde:	0a 26       	eor	r0, r26
    3ce0:	61 f0       	breq	.+24     	; 0x3cfa <__fp_cmp+0x46>
    3ce2:	23 2b       	or	r18, r19
    3ce4:	24 2b       	or	r18, r20
    3ce6:	25 2b       	or	r18, r21
    3ce8:	21 f4       	brne	.+8      	; 0x3cf2 <__fp_cmp+0x3e>
    3cea:	08 95       	ret
    3cec:	0a 26       	eor	r0, r26
    3cee:	09 f4       	brne	.+2      	; 0x3cf2 <__fp_cmp+0x3e>
    3cf0:	a1 40       	sbci	r26, 0x01	; 1
    3cf2:	a6 95       	lsr	r26
    3cf4:	8f ef       	ldi	r24, 0xFF	; 255
    3cf6:	81 1d       	adc	r24, r1
    3cf8:	81 1d       	adc	r24, r1
    3cfa:	08 95       	ret

00003cfc <__fp_inf>:
    3cfc:	97 f9       	bld	r25, 7
    3cfe:	9f 67       	ori	r25, 0x7F	; 127
    3d00:	80 e8       	ldi	r24, 0x80	; 128
    3d02:	70 e0       	ldi	r23, 0x00	; 0
    3d04:	60 e0       	ldi	r22, 0x00	; 0
    3d06:	08 95       	ret

00003d08 <__fp_nan>:
    3d08:	9f ef       	ldi	r25, 0xFF	; 255
    3d0a:	80 ec       	ldi	r24, 0xC0	; 192
    3d0c:	08 95       	ret

00003d0e <__fp_powser>:
    3d0e:	df 93       	push	r29
    3d10:	cf 93       	push	r28
    3d12:	1f 93       	push	r17
    3d14:	0f 93       	push	r16
    3d16:	ff 92       	push	r15
    3d18:	ef 92       	push	r14
    3d1a:	df 92       	push	r13
    3d1c:	7b 01       	movw	r14, r22
    3d1e:	8c 01       	movw	r16, r24
    3d20:	68 94       	set
    3d22:	05 c0       	rjmp	.+10     	; 0x3d2e <__fp_powser+0x20>
    3d24:	da 2e       	mov	r13, r26
    3d26:	ef 01       	movw	r28, r30
    3d28:	c0 d0       	rcall	.+384    	; 0x3eaa <__mulsf3x>
    3d2a:	fe 01       	movw	r30, r28
    3d2c:	e8 94       	clt
    3d2e:	a5 91       	lpm	r26, Z+
    3d30:	25 91       	lpm	r18, Z+
    3d32:	35 91       	lpm	r19, Z+
    3d34:	45 91       	lpm	r20, Z+
    3d36:	55 91       	lpm	r21, Z+
    3d38:	ae f3       	brts	.-22     	; 0x3d24 <__fp_powser+0x16>
    3d3a:	ef 01       	movw	r28, r30
    3d3c:	28 de       	rcall	.-944    	; 0x398e <__addsf3x>
    3d3e:	fe 01       	movw	r30, r28
    3d40:	97 01       	movw	r18, r14
    3d42:	a8 01       	movw	r20, r16
    3d44:	da 94       	dec	r13
    3d46:	79 f7       	brne	.-34     	; 0x3d26 <__fp_powser+0x18>
    3d48:	df 90       	pop	r13
    3d4a:	ef 90       	pop	r14
    3d4c:	ff 90       	pop	r15
    3d4e:	0f 91       	pop	r16
    3d50:	1f 91       	pop	r17
    3d52:	cf 91       	pop	r28
    3d54:	df 91       	pop	r29
    3d56:	08 95       	ret

00003d58 <__fp_powsodd>:
    3d58:	9f 93       	push	r25
    3d5a:	8f 93       	push	r24
    3d5c:	7f 93       	push	r23
    3d5e:	6f 93       	push	r22
    3d60:	ff 93       	push	r31
    3d62:	ef 93       	push	r30
    3d64:	9b 01       	movw	r18, r22
    3d66:	ac 01       	movw	r20, r24
    3d68:	94 d0       	rcall	.+296    	; 0x3e92 <__mulsf3>
    3d6a:	ef 91       	pop	r30
    3d6c:	ff 91       	pop	r31
    3d6e:	cf df       	rcall	.-98     	; 0x3d0e <__fp_powser>
    3d70:	2f 91       	pop	r18
    3d72:	3f 91       	pop	r19
    3d74:	4f 91       	pop	r20
    3d76:	5f 91       	pop	r21
    3d78:	8c c0       	rjmp	.+280    	; 0x3e92 <__mulsf3>

00003d7a <__fp_pscA>:
    3d7a:	00 24       	eor	r0, r0
    3d7c:	0a 94       	dec	r0
    3d7e:	16 16       	cp	r1, r22
    3d80:	17 06       	cpc	r1, r23
    3d82:	18 06       	cpc	r1, r24
    3d84:	09 06       	cpc	r0, r25
    3d86:	08 95       	ret

00003d88 <__fp_pscB>:
    3d88:	00 24       	eor	r0, r0
    3d8a:	0a 94       	dec	r0
    3d8c:	12 16       	cp	r1, r18
    3d8e:	13 06       	cpc	r1, r19
    3d90:	14 06       	cpc	r1, r20
    3d92:	05 06       	cpc	r0, r21
    3d94:	08 95       	ret
    3d96:	b8 cf       	rjmp	.-144    	; 0x3d08 <__fp_nan>

00003d98 <__fp_rempio2>:
    3d98:	50 d0       	rcall	.+160    	; 0x3e3a <__fp_splitA>
    3d9a:	e8 f3       	brcs	.-6      	; 0x3d96 <__fp_pscB+0xe>
    3d9c:	e8 94       	clt
    3d9e:	e0 e0       	ldi	r30, 0x00	; 0
    3da0:	bb 27       	eor	r27, r27
    3da2:	9f 57       	subi	r25, 0x7F	; 127
    3da4:	f0 f0       	brcs	.+60     	; 0x3de2 <__fp_rempio2+0x4a>
    3da6:	2a ed       	ldi	r18, 0xDA	; 218
    3da8:	3f e0       	ldi	r19, 0x0F	; 15
    3daa:	49 ec       	ldi	r20, 0xC9	; 201
    3dac:	06 c0       	rjmp	.+12     	; 0x3dba <__fp_rempio2+0x22>
    3dae:	ee 0f       	add	r30, r30
    3db0:	bb 0f       	add	r27, r27
    3db2:	66 1f       	adc	r22, r22
    3db4:	77 1f       	adc	r23, r23
    3db6:	88 1f       	adc	r24, r24
    3db8:	28 f0       	brcs	.+10     	; 0x3dc4 <__fp_rempio2+0x2c>
    3dba:	b2 3a       	cpi	r27, 0xA2	; 162
    3dbc:	62 07       	cpc	r22, r18
    3dbe:	73 07       	cpc	r23, r19
    3dc0:	84 07       	cpc	r24, r20
    3dc2:	28 f0       	brcs	.+10     	; 0x3dce <__fp_rempio2+0x36>
    3dc4:	b2 5a       	subi	r27, 0xA2	; 162
    3dc6:	62 0b       	sbc	r22, r18
    3dc8:	73 0b       	sbc	r23, r19
    3dca:	84 0b       	sbc	r24, r20
    3dcc:	e3 95       	inc	r30
    3dce:	9a 95       	dec	r25
    3dd0:	72 f7       	brpl	.-36     	; 0x3dae <__fp_rempio2+0x16>
    3dd2:	80 38       	cpi	r24, 0x80	; 128
    3dd4:	30 f4       	brcc	.+12     	; 0x3de2 <__fp_rempio2+0x4a>
    3dd6:	9a 95       	dec	r25
    3dd8:	bb 0f       	add	r27, r27
    3dda:	66 1f       	adc	r22, r22
    3ddc:	77 1f       	adc	r23, r23
    3dde:	88 1f       	adc	r24, r24
    3de0:	d2 f7       	brpl	.-12     	; 0x3dd6 <__fp_rempio2+0x3e>
    3de2:	90 48       	sbci	r25, 0x80	; 128
    3de4:	06 c1       	rjmp	.+524    	; 0x3ff2 <__fp_mpack_finite>

00003de6 <__fp_round>:
    3de6:	09 2e       	mov	r0, r25
    3de8:	03 94       	inc	r0
    3dea:	00 0c       	add	r0, r0
    3dec:	11 f4       	brne	.+4      	; 0x3df2 <__fp_round+0xc>
    3dee:	88 23       	and	r24, r24
    3df0:	52 f0       	brmi	.+20     	; 0x3e06 <__fp_round+0x20>
    3df2:	bb 0f       	add	r27, r27
    3df4:	40 f4       	brcc	.+16     	; 0x3e06 <__fp_round+0x20>
    3df6:	bf 2b       	or	r27, r31
    3df8:	11 f4       	brne	.+4      	; 0x3dfe <__fp_round+0x18>
    3dfa:	60 ff       	sbrs	r22, 0
    3dfc:	04 c0       	rjmp	.+8      	; 0x3e06 <__fp_round+0x20>
    3dfe:	6f 5f       	subi	r22, 0xFF	; 255
    3e00:	7f 4f       	sbci	r23, 0xFF	; 255
    3e02:	8f 4f       	sbci	r24, 0xFF	; 255
    3e04:	9f 4f       	sbci	r25, 0xFF	; 255
    3e06:	08 95       	ret

00003e08 <__fp_sinus>:
    3e08:	ef 93       	push	r30
    3e0a:	e0 ff       	sbrs	r30, 0
    3e0c:	06 c0       	rjmp	.+12     	; 0x3e1a <__fp_sinus+0x12>
    3e0e:	a2 ea       	ldi	r26, 0xA2	; 162
    3e10:	2a ed       	ldi	r18, 0xDA	; 218
    3e12:	3f e0       	ldi	r19, 0x0F	; 15
    3e14:	49 ec       	ldi	r20, 0xC9	; 201
    3e16:	5f eb       	ldi	r21, 0xBF	; 191
    3e18:	ba dd       	rcall	.-1164   	; 0x398e <__addsf3x>
    3e1a:	e5 df       	rcall	.-54     	; 0x3de6 <__fp_round>
    3e1c:	0f 90       	pop	r0
    3e1e:	03 94       	inc	r0
    3e20:	01 fc       	sbrc	r0, 1
    3e22:	90 58       	subi	r25, 0x80	; 128
    3e24:	ef ed       	ldi	r30, 0xDF	; 223
    3e26:	f2 e0       	ldi	r31, 0x02	; 2
    3e28:	97 cf       	rjmp	.-210    	; 0x3d58 <__fp_powsodd>

00003e2a <__fp_split3>:
    3e2a:	57 fd       	sbrc	r21, 7
    3e2c:	90 58       	subi	r25, 0x80	; 128
    3e2e:	44 0f       	add	r20, r20
    3e30:	55 1f       	adc	r21, r21
    3e32:	59 f0       	breq	.+22     	; 0x3e4a <__fp_splitA+0x10>
    3e34:	5f 3f       	cpi	r21, 0xFF	; 255
    3e36:	71 f0       	breq	.+28     	; 0x3e54 <__fp_splitA+0x1a>
    3e38:	47 95       	ror	r20

00003e3a <__fp_splitA>:
    3e3a:	88 0f       	add	r24, r24
    3e3c:	97 fb       	bst	r25, 7
    3e3e:	99 1f       	adc	r25, r25
    3e40:	61 f0       	breq	.+24     	; 0x3e5a <__fp_splitA+0x20>
    3e42:	9f 3f       	cpi	r25, 0xFF	; 255
    3e44:	79 f0       	breq	.+30     	; 0x3e64 <__fp_splitA+0x2a>
    3e46:	87 95       	ror	r24
    3e48:	08 95       	ret
    3e4a:	12 16       	cp	r1, r18
    3e4c:	13 06       	cpc	r1, r19
    3e4e:	14 06       	cpc	r1, r20
    3e50:	55 1f       	adc	r21, r21
    3e52:	f2 cf       	rjmp	.-28     	; 0x3e38 <__fp_split3+0xe>
    3e54:	46 95       	lsr	r20
    3e56:	f1 df       	rcall	.-30     	; 0x3e3a <__fp_splitA>
    3e58:	08 c0       	rjmp	.+16     	; 0x3e6a <__fp_splitA+0x30>
    3e5a:	16 16       	cp	r1, r22
    3e5c:	17 06       	cpc	r1, r23
    3e5e:	18 06       	cpc	r1, r24
    3e60:	99 1f       	adc	r25, r25
    3e62:	f1 cf       	rjmp	.-30     	; 0x3e46 <__fp_splitA+0xc>
    3e64:	86 95       	lsr	r24
    3e66:	71 05       	cpc	r23, r1
    3e68:	61 05       	cpc	r22, r1
    3e6a:	08 94       	sec
    3e6c:	08 95       	ret

00003e6e <__fp_zero>:
    3e6e:	e8 94       	clt

00003e70 <__fp_szero>:
    3e70:	bb 27       	eor	r27, r27
    3e72:	66 27       	eor	r22, r22
    3e74:	77 27       	eor	r23, r23
    3e76:	cb 01       	movw	r24, r22
    3e78:	97 f9       	bld	r25, 7
    3e7a:	08 95       	ret

00003e7c <__gesf2>:
    3e7c:	1b df       	rcall	.-458    	; 0x3cb4 <__fp_cmp>
    3e7e:	08 f4       	brcc	.+2      	; 0x3e82 <__gesf2+0x6>
    3e80:	8f ef       	ldi	r24, 0xFF	; 255
    3e82:	08 95       	ret

00003e84 <inverse>:
    3e84:	9b 01       	movw	r18, r22
    3e86:	ac 01       	movw	r20, r24
    3e88:	60 e0       	ldi	r22, 0x00	; 0
    3e8a:	70 e0       	ldi	r23, 0x00	; 0
    3e8c:	80 e8       	ldi	r24, 0x80	; 128
    3e8e:	9f e3       	ldi	r25, 0x3F	; 63
    3e90:	51 ce       	rjmp	.-862    	; 0x3b34 <__divsf3>

00003e92 <__mulsf3>:
    3e92:	0b d0       	rcall	.+22     	; 0x3eaa <__mulsf3x>
    3e94:	a8 cf       	rjmp	.-176    	; 0x3de6 <__fp_round>
    3e96:	71 df       	rcall	.-286    	; 0x3d7a <__fp_pscA>
    3e98:	28 f0       	brcs	.+10     	; 0x3ea4 <__mulsf3+0x12>
    3e9a:	76 df       	rcall	.-276    	; 0x3d88 <__fp_pscB>
    3e9c:	18 f0       	brcs	.+6      	; 0x3ea4 <__mulsf3+0x12>
    3e9e:	95 23       	and	r25, r21
    3ea0:	09 f0       	breq	.+2      	; 0x3ea4 <__mulsf3+0x12>
    3ea2:	2c cf       	rjmp	.-424    	; 0x3cfc <__fp_inf>
    3ea4:	31 cf       	rjmp	.-414    	; 0x3d08 <__fp_nan>
    3ea6:	11 24       	eor	r1, r1
    3ea8:	e3 cf       	rjmp	.-58     	; 0x3e70 <__fp_szero>

00003eaa <__mulsf3x>:
    3eaa:	bf df       	rcall	.-130    	; 0x3e2a <__fp_split3>
    3eac:	a0 f3       	brcs	.-24     	; 0x3e96 <__mulsf3+0x4>

00003eae <__mulsf3_pse>:
    3eae:	95 9f       	mul	r25, r21
    3eb0:	d1 f3       	breq	.-12     	; 0x3ea6 <__mulsf3+0x14>
    3eb2:	95 0f       	add	r25, r21
    3eb4:	50 e0       	ldi	r21, 0x00	; 0
    3eb6:	55 1f       	adc	r21, r21
    3eb8:	62 9f       	mul	r22, r18
    3eba:	f0 01       	movw	r30, r0
    3ebc:	72 9f       	mul	r23, r18
    3ebe:	bb 27       	eor	r27, r27
    3ec0:	f0 0d       	add	r31, r0
    3ec2:	b1 1d       	adc	r27, r1
    3ec4:	63 9f       	mul	r22, r19
    3ec6:	aa 27       	eor	r26, r26
    3ec8:	f0 0d       	add	r31, r0
    3eca:	b1 1d       	adc	r27, r1
    3ecc:	aa 1f       	adc	r26, r26
    3ece:	64 9f       	mul	r22, r20
    3ed0:	66 27       	eor	r22, r22
    3ed2:	b0 0d       	add	r27, r0
    3ed4:	a1 1d       	adc	r26, r1
    3ed6:	66 1f       	adc	r22, r22
    3ed8:	82 9f       	mul	r24, r18
    3eda:	22 27       	eor	r18, r18
    3edc:	b0 0d       	add	r27, r0
    3ede:	a1 1d       	adc	r26, r1
    3ee0:	62 1f       	adc	r22, r18
    3ee2:	73 9f       	mul	r23, r19
    3ee4:	b0 0d       	add	r27, r0
    3ee6:	a1 1d       	adc	r26, r1
    3ee8:	62 1f       	adc	r22, r18
    3eea:	83 9f       	mul	r24, r19
    3eec:	a0 0d       	add	r26, r0
    3eee:	61 1d       	adc	r22, r1
    3ef0:	22 1f       	adc	r18, r18
    3ef2:	74 9f       	mul	r23, r20
    3ef4:	33 27       	eor	r19, r19
    3ef6:	a0 0d       	add	r26, r0
    3ef8:	61 1d       	adc	r22, r1
    3efa:	23 1f       	adc	r18, r19
    3efc:	84 9f       	mul	r24, r20
    3efe:	60 0d       	add	r22, r0
    3f00:	21 1d       	adc	r18, r1
    3f02:	82 2f       	mov	r24, r18
    3f04:	76 2f       	mov	r23, r22
    3f06:	6a 2f       	mov	r22, r26
    3f08:	11 24       	eor	r1, r1
    3f0a:	9f 57       	subi	r25, 0x7F	; 127
    3f0c:	50 40       	sbci	r21, 0x00	; 0
    3f0e:	8a f0       	brmi	.+34     	; 0x3f32 <__mulsf3_pse+0x84>
    3f10:	e1 f0       	breq	.+56     	; 0x3f4a <__mulsf3_pse+0x9c>
    3f12:	88 23       	and	r24, r24
    3f14:	4a f0       	brmi	.+18     	; 0x3f28 <__mulsf3_pse+0x7a>
    3f16:	ee 0f       	add	r30, r30
    3f18:	ff 1f       	adc	r31, r31
    3f1a:	bb 1f       	adc	r27, r27
    3f1c:	66 1f       	adc	r22, r22
    3f1e:	77 1f       	adc	r23, r23
    3f20:	88 1f       	adc	r24, r24
    3f22:	91 50       	subi	r25, 0x01	; 1
    3f24:	50 40       	sbci	r21, 0x00	; 0
    3f26:	a9 f7       	brne	.-22     	; 0x3f12 <__mulsf3_pse+0x64>
    3f28:	9e 3f       	cpi	r25, 0xFE	; 254
    3f2a:	51 05       	cpc	r21, r1
    3f2c:	70 f0       	brcs	.+28     	; 0x3f4a <__mulsf3_pse+0x9c>
    3f2e:	e6 ce       	rjmp	.-564    	; 0x3cfc <__fp_inf>
    3f30:	9f cf       	rjmp	.-194    	; 0x3e70 <__fp_szero>
    3f32:	5f 3f       	cpi	r21, 0xFF	; 255
    3f34:	ec f3       	brlt	.-6      	; 0x3f30 <__mulsf3_pse+0x82>
    3f36:	98 3e       	cpi	r25, 0xE8	; 232
    3f38:	dc f3       	brlt	.-10     	; 0x3f30 <__mulsf3_pse+0x82>
    3f3a:	86 95       	lsr	r24
    3f3c:	77 95       	ror	r23
    3f3e:	67 95       	ror	r22
    3f40:	b7 95       	ror	r27
    3f42:	f7 95       	ror	r31
    3f44:	e7 95       	ror	r30
    3f46:	9f 5f       	subi	r25, 0xFF	; 255
    3f48:	c1 f7       	brne	.-16     	; 0x3f3a <__mulsf3_pse+0x8c>
    3f4a:	fe 2b       	or	r31, r30
    3f4c:	88 0f       	add	r24, r24
    3f4e:	91 1d       	adc	r25, r1
    3f50:	96 95       	lsr	r25
    3f52:	87 95       	ror	r24
    3f54:	97 f9       	bld	r25, 7
    3f56:	08 95       	ret

00003f58 <sin>:
    3f58:	9f 93       	push	r25
    3f5a:	1e df       	rcall	.-452    	; 0x3d98 <__fp_rempio2>
    3f5c:	0f 90       	pop	r0
    3f5e:	07 fc       	sbrc	r0, 7
    3f60:	ee 5f       	subi	r30, 0xFE	; 254
    3f62:	52 cf       	rjmp	.-348    	; 0x3e08 <__fp_sinus>
    3f64:	11 f4       	brne	.+4      	; 0x3f6a <sin+0x12>
    3f66:	0e f4       	brtc	.+2      	; 0x3f6a <sin+0x12>
    3f68:	cf ce       	rjmp	.-610    	; 0x3d08 <__fp_nan>
    3f6a:	41 c0       	rjmp	.+130    	; 0x3fee <__fp_mpack>

00003f6c <sqrt>:
    3f6c:	66 df       	rcall	.-308    	; 0x3e3a <__fp_splitA>
    3f6e:	d0 f3       	brcs	.-12     	; 0x3f64 <sin+0xc>
    3f70:	99 23       	and	r25, r25
    3f72:	d9 f3       	breq	.-10     	; 0x3f6a <sin+0x12>
    3f74:	ce f3       	brts	.-14     	; 0x3f68 <sin+0x10>
    3f76:	9f 57       	subi	r25, 0x7F	; 127
    3f78:	55 0b       	sbc	r21, r21
    3f7a:	87 ff       	sbrs	r24, 7
    3f7c:	46 d0       	rcall	.+140    	; 0x400a <__fp_norm2>
    3f7e:	00 24       	eor	r0, r0
    3f80:	a0 e6       	ldi	r26, 0x60	; 96
    3f82:	40 ea       	ldi	r20, 0xA0	; 160
    3f84:	90 01       	movw	r18, r0
    3f86:	80 58       	subi	r24, 0x80	; 128
    3f88:	56 95       	lsr	r21
    3f8a:	97 95       	ror	r25
    3f8c:	28 f4       	brcc	.+10     	; 0x3f98 <sqrt+0x2c>
    3f8e:	80 5c       	subi	r24, 0xC0	; 192
    3f90:	66 0f       	add	r22, r22
    3f92:	77 1f       	adc	r23, r23
    3f94:	88 1f       	adc	r24, r24
    3f96:	20 f0       	brcs	.+8      	; 0x3fa0 <sqrt+0x34>
    3f98:	26 17       	cp	r18, r22
    3f9a:	37 07       	cpc	r19, r23
    3f9c:	48 07       	cpc	r20, r24
    3f9e:	30 f4       	brcc	.+12     	; 0x3fac <sqrt+0x40>
    3fa0:	62 1b       	sub	r22, r18
    3fa2:	73 0b       	sbc	r23, r19
    3fa4:	84 0b       	sbc	r24, r20
    3fa6:	20 29       	or	r18, r0
    3fa8:	31 29       	or	r19, r1
    3faa:	4a 2b       	or	r20, r26
    3fac:	a6 95       	lsr	r26
    3fae:	17 94       	ror	r1
    3fb0:	07 94       	ror	r0
    3fb2:	20 25       	eor	r18, r0
    3fb4:	31 25       	eor	r19, r1
    3fb6:	4a 27       	eor	r20, r26
    3fb8:	58 f7       	brcc	.-42     	; 0x3f90 <sqrt+0x24>
    3fba:	66 0f       	add	r22, r22
    3fbc:	77 1f       	adc	r23, r23
    3fbe:	88 1f       	adc	r24, r24
    3fc0:	20 f0       	brcs	.+8      	; 0x3fca <sqrt+0x5e>
    3fc2:	26 17       	cp	r18, r22
    3fc4:	37 07       	cpc	r19, r23
    3fc6:	48 07       	cpc	r20, r24
    3fc8:	30 f4       	brcc	.+12     	; 0x3fd6 <sqrt+0x6a>
    3fca:	62 0b       	sbc	r22, r18
    3fcc:	73 0b       	sbc	r23, r19
    3fce:	84 0b       	sbc	r24, r20
    3fd0:	20 0d       	add	r18, r0
    3fd2:	31 1d       	adc	r19, r1
    3fd4:	41 1d       	adc	r20, r1
    3fd6:	a0 95       	com	r26
    3fd8:	81 f7       	brne	.-32     	; 0x3fba <sqrt+0x4e>
    3fda:	b9 01       	movw	r22, r18
    3fdc:	84 2f       	mov	r24, r20
    3fde:	91 58       	subi	r25, 0x81	; 129
    3fe0:	88 0f       	add	r24, r24
    3fe2:	96 95       	lsr	r25
    3fe4:	87 95       	ror	r24
    3fe6:	08 95       	ret

00003fe8 <square>:
    3fe8:	9b 01       	movw	r18, r22
    3fea:	ac 01       	movw	r20, r24
    3fec:	52 cf       	rjmp	.-348    	; 0x3e92 <__mulsf3>

00003fee <__fp_mpack>:
    3fee:	9f 3f       	cpi	r25, 0xFF	; 255
    3ff0:	31 f0       	breq	.+12     	; 0x3ffe <__fp_mpack_finite+0xc>

00003ff2 <__fp_mpack_finite>:
    3ff2:	91 50       	subi	r25, 0x01	; 1
    3ff4:	20 f4       	brcc	.+8      	; 0x3ffe <__fp_mpack_finite+0xc>
    3ff6:	87 95       	ror	r24
    3ff8:	77 95       	ror	r23
    3ffa:	67 95       	ror	r22
    3ffc:	b7 95       	ror	r27
    3ffe:	88 0f       	add	r24, r24
    4000:	91 1d       	adc	r25, r1
    4002:	96 95       	lsr	r25
    4004:	87 95       	ror	r24
    4006:	97 f9       	bld	r25, 7
    4008:	08 95       	ret

0000400a <__fp_norm2>:
    400a:	91 50       	subi	r25, 0x01	; 1
    400c:	50 40       	sbci	r21, 0x00	; 0
    400e:	66 0f       	add	r22, r22
    4010:	77 1f       	adc	r23, r23
    4012:	88 1f       	adc	r24, r24
    4014:	d2 f7       	brpl	.-12     	; 0x400a <__fp_norm2>
    4016:	08 95       	ret

00004018 <_ZN14HardwareSerial9availableEv>:
    4018:	fc 01       	movw	r30, r24
    401a:	24 85       	ldd	r18, Z+12	; 0x0c
    401c:	35 85       	ldd	r19, Z+13	; 0x0d
    401e:	f9 01       	movw	r30, r18
    4020:	e0 5c       	subi	r30, 0xC0	; 192
    4022:	ff 4f       	sbci	r31, 0xFF	; 255
    4024:	80 81       	ld	r24, Z
    4026:	91 81       	ldd	r25, Z+1	; 0x01
    4028:	32 96       	adiw	r30, 0x02	; 2
    402a:	20 81       	ld	r18, Z
    402c:	31 81       	ldd	r19, Z+1	; 0x01
    402e:	80 5c       	subi	r24, 0xC0	; 192
    4030:	9f 4f       	sbci	r25, 0xFF	; 255
    4032:	82 1b       	sub	r24, r18
    4034:	93 0b       	sbc	r25, r19
    4036:	8f 73       	andi	r24, 0x3F	; 63
    4038:	90 78       	andi	r25, 0x80	; 128
    403a:	99 23       	and	r25, r25
    403c:	24 f4       	brge	.+8      	; 0x4046 <_ZN14HardwareSerial9availableEv+0x2e>
    403e:	01 97       	sbiw	r24, 0x01	; 1
    4040:	80 6c       	ori	r24, 0xC0	; 192
    4042:	9f 6f       	ori	r25, 0xFF	; 255
    4044:	01 96       	adiw	r24, 0x01	; 1
    4046:	08 95       	ret

00004048 <_ZN14HardwareSerial4peekEv>:
    4048:	fc 01       	movw	r30, r24
    404a:	84 85       	ldd	r24, Z+12	; 0x0c
    404c:	95 85       	ldd	r25, Z+13	; 0x0d
    404e:	fc 01       	movw	r30, r24
    4050:	e0 5c       	subi	r30, 0xC0	; 192
    4052:	ff 4f       	sbci	r31, 0xFF	; 255
    4054:	40 81       	ld	r20, Z
    4056:	51 81       	ldd	r21, Z+1	; 0x01
    4058:	32 96       	adiw	r30, 0x02	; 2
    405a:	20 81       	ld	r18, Z
    405c:	31 81       	ldd	r19, Z+1	; 0x01
    405e:	42 17       	cp	r20, r18
    4060:	53 07       	cpc	r21, r19
    4062:	41 f0       	breq	.+16     	; 0x4074 <_ZN14HardwareSerial4peekEv+0x2c>
    4064:	20 81       	ld	r18, Z
    4066:	31 81       	ldd	r19, Z+1	; 0x01
    4068:	fc 01       	movw	r30, r24
    406a:	e2 0f       	add	r30, r18
    406c:	f3 1f       	adc	r31, r19
    406e:	80 81       	ld	r24, Z
    4070:	90 e0       	ldi	r25, 0x00	; 0
    4072:	08 95       	ret
    4074:	8f ef       	ldi	r24, 0xFF	; 255
    4076:	9f ef       	ldi	r25, 0xFF	; 255
    4078:	08 95       	ret

0000407a <_ZN14HardwareSerial4readEv>:
    407a:	fc 01       	movw	r30, r24
    407c:	84 85       	ldd	r24, Z+12	; 0x0c
    407e:	95 85       	ldd	r25, Z+13	; 0x0d
    4080:	fc 01       	movw	r30, r24
    4082:	e0 5c       	subi	r30, 0xC0	; 192
    4084:	ff 4f       	sbci	r31, 0xFF	; 255
    4086:	40 81       	ld	r20, Z
    4088:	51 81       	ldd	r21, Z+1	; 0x01
    408a:	32 96       	adiw	r30, 0x02	; 2
    408c:	20 81       	ld	r18, Z
    408e:	31 81       	ldd	r19, Z+1	; 0x01
    4090:	42 17       	cp	r20, r18
    4092:	53 07       	cpc	r21, r19
    4094:	81 f0       	breq	.+32     	; 0x40b6 <_ZN14HardwareSerial4readEv+0x3c>
    4096:	20 81       	ld	r18, Z
    4098:	31 81       	ldd	r19, Z+1	; 0x01
    409a:	dc 01       	movw	r26, r24
    409c:	a2 0f       	add	r26, r18
    409e:	b3 1f       	adc	r27, r19
    40a0:	8c 91       	ld	r24, X
    40a2:	20 81       	ld	r18, Z
    40a4:	31 81       	ldd	r19, Z+1	; 0x01
    40a6:	2f 5f       	subi	r18, 0xFF	; 255
    40a8:	3f 4f       	sbci	r19, 0xFF	; 255
    40aa:	2f 73       	andi	r18, 0x3F	; 63
    40ac:	33 27       	eor	r19, r19
    40ae:	31 83       	std	Z+1, r19	; 0x01
    40b0:	20 83       	st	Z, r18
    40b2:	90 e0       	ldi	r25, 0x00	; 0
    40b4:	08 95       	ret
    40b6:	8f ef       	ldi	r24, 0xFF	; 255
    40b8:	9f ef       	ldi	r25, 0xFF	; 255
    40ba:	08 95       	ret

000040bc <_ZN14HardwareSerial5flushEv>:
    40bc:	fc 01       	movw	r30, r24
    40be:	81 a1       	ldd	r24, Z+33	; 0x21
    40c0:	88 23       	and	r24, r24
    40c2:	29 f0       	breq	.+10     	; 0x40ce <_ZN14HardwareSerial5flushEv+0x12>
    40c4:	a4 89       	ldd	r26, Z+20	; 0x14
    40c6:	b5 89       	ldd	r27, Z+21	; 0x15
    40c8:	8c 91       	ld	r24, X
    40ca:	86 ff       	sbrs	r24, 6
    40cc:	fb cf       	rjmp	.-10     	; 0x40c4 <_ZN14HardwareSerial5flushEv+0x8>
    40ce:	11 a2       	std	Z+33, r1	; 0x21
    40d0:	08 95       	ret

000040d2 <_ZN14HardwareSerial5writeEh>:
    40d2:	1f 93       	push	r17
    40d4:	cf 93       	push	r28
    40d6:	df 93       	push	r29
    40d8:	ec 01       	movw	r28, r24
    40da:	8e 85       	ldd	r24, Y+14	; 0x0e
    40dc:	9f 85       	ldd	r25, Y+15	; 0x0f
    40de:	fc 01       	movw	r30, r24
    40e0:	e0 5c       	subi	r30, 0xC0	; 192
    40e2:	ff 4f       	sbci	r31, 0xFF	; 255
    40e4:	01 90       	ld	r0, Z+
    40e6:	f0 81       	ld	r31, Z
    40e8:	e0 2d       	mov	r30, r0
    40ea:	31 96       	adiw	r30, 0x01	; 1
    40ec:	ef 73       	andi	r30, 0x3F	; 63
    40ee:	ff 27       	eor	r31, r31
    40f0:	1e 2f       	mov	r17, r30
    40f2:	7f 2f       	mov	r23, r31
    40f4:	dc 01       	movw	r26, r24
    40f6:	ae 5b       	subi	r26, 0xBE	; 190
    40f8:	bf 4f       	sbci	r27, 0xFF	; 255
    40fa:	21 2f       	mov	r18, r17
    40fc:	37 2f       	mov	r19, r23
    40fe:	4d 91       	ld	r20, X+
    4100:	5c 91       	ld	r21, X
    4102:	11 97       	sbiw	r26, 0x01	; 1
    4104:	e4 17       	cp	r30, r20
    4106:	f5 07       	cpc	r31, r21
    4108:	c1 f3       	breq	.-16     	; 0x40fa <_ZN14HardwareSerial5writeEh+0x28>
    410a:	fc 01       	movw	r30, r24
    410c:	e0 5c       	subi	r30, 0xC0	; 192
    410e:	ff 4f       	sbci	r31, 0xFF	; 255
    4110:	40 81       	ld	r20, Z
    4112:	51 81       	ldd	r21, Z+1	; 0x01
    4114:	fc 01       	movw	r30, r24
    4116:	e4 0f       	add	r30, r20
    4118:	f5 1f       	adc	r31, r21
    411a:	60 83       	st	Z, r22
    411c:	ee 85       	ldd	r30, Y+14	; 0x0e
    411e:	ff 85       	ldd	r31, Y+15	; 0x0f
    4120:	e0 5c       	subi	r30, 0xC0	; 192
    4122:	ff 4f       	sbci	r31, 0xFF	; 255
    4124:	31 83       	std	Z+1, r19	; 0x01
    4126:	20 83       	st	Z, r18
    4128:	ee 89       	ldd	r30, Y+22	; 0x16
    412a:	ff 89       	ldd	r31, Y+23	; 0x17
    412c:	40 81       	ld	r20, Z
    412e:	21 e0       	ldi	r18, 0x01	; 1
    4130:	30 e0       	ldi	r19, 0x00	; 0
    4132:	c9 01       	movw	r24, r18
    4134:	0f 8c       	ldd	r0, Y+31	; 0x1f
    4136:	02 c0       	rjmp	.+4      	; 0x413c <_ZN14HardwareSerial5writeEh+0x6a>
    4138:	88 0f       	add	r24, r24
    413a:	99 1f       	adc	r25, r25
    413c:	0a 94       	dec	r0
    413e:	e2 f7       	brpl	.-8      	; 0x4138 <_ZN14HardwareSerial5writeEh+0x66>
    4140:	84 2b       	or	r24, r20
    4142:	80 83       	st	Z, r24
    4144:	81 e0       	ldi	r24, 0x01	; 1
    4146:	89 a3       	std	Y+33, r24	; 0x21
    4148:	ec 89       	ldd	r30, Y+20	; 0x14
    414a:	fd 89       	ldd	r31, Y+21	; 0x15
    414c:	80 81       	ld	r24, Z
    414e:	80 64       	ori	r24, 0x40	; 64
    4150:	80 83       	st	Z, r24
    4152:	81 e0       	ldi	r24, 0x01	; 1
    4154:	90 e0       	ldi	r25, 0x00	; 0
    4156:	df 91       	pop	r29
    4158:	cf 91       	pop	r28
    415a:	1f 91       	pop	r17
    415c:	08 95       	ret

0000415e <__vector_25>:
    415e:	1f 92       	push	r1
    4160:	0f 92       	push	r0
    4162:	0f b6       	in	r0, 0x3f	; 63
    4164:	0f 92       	push	r0
    4166:	11 24       	eor	r1, r1
    4168:	0b b6       	in	r0, 0x3b	; 59
    416a:	0f 92       	push	r0
    416c:	2f 93       	push	r18
    416e:	3f 93       	push	r19
    4170:	4f 93       	push	r20
    4172:	8f 93       	push	r24
    4174:	9f 93       	push	r25
    4176:	af 93       	push	r26
    4178:	bf 93       	push	r27
    417a:	ef 93       	push	r30
    417c:	ff 93       	push	r31
    417e:	80 91 c0 00 	lds	r24, 0x00C0
    4182:	82 fd       	sbrc	r24, 2
    4184:	1a c0       	rjmp	.+52     	; 0x41ba <__vector_25+0x5c>
    4186:	40 91 c6 00 	lds	r20, 0x00C6
    418a:	80 91 eb 11 	lds	r24, 0x11EB
    418e:	90 91 ec 11 	lds	r25, 0x11EC
    4192:	01 96       	adiw	r24, 0x01	; 1
    4194:	8f 73       	andi	r24, 0x3F	; 63
    4196:	99 27       	eor	r25, r25
    4198:	20 91 ed 11 	lds	r18, 0x11ED
    419c:	30 91 ee 11 	lds	r19, 0x11EE
    41a0:	82 17       	cp	r24, r18
    41a2:	93 07       	cpc	r25, r19
    41a4:	61 f0       	breq	.+24     	; 0x41be <__vector_25+0x60>
    41a6:	eb ee       	ldi	r30, 0xEB	; 235
    41a8:	f1 e1       	ldi	r31, 0x11	; 17
    41aa:	a0 81       	ld	r26, Z
    41ac:	b1 81       	ldd	r27, Z+1	; 0x01
    41ae:	a5 55       	subi	r26, 0x55	; 85
    41b0:	be 4e       	sbci	r27, 0xEE	; 238
    41b2:	4c 93       	st	X, r20
    41b4:	91 83       	std	Z+1, r25	; 0x01
    41b6:	80 83       	st	Z, r24
    41b8:	02 c0       	rjmp	.+4      	; 0x41be <__vector_25+0x60>
    41ba:	80 91 c6 00 	lds	r24, 0x00C6
    41be:	ff 91       	pop	r31
    41c0:	ef 91       	pop	r30
    41c2:	bf 91       	pop	r27
    41c4:	af 91       	pop	r26
    41c6:	9f 91       	pop	r25
    41c8:	8f 91       	pop	r24
    41ca:	4f 91       	pop	r20
    41cc:	3f 91       	pop	r19
    41ce:	2f 91       	pop	r18
    41d0:	0f 90       	pop	r0
    41d2:	0b be       	out	0x3b, r0	; 59
    41d4:	0f 90       	pop	r0
    41d6:	0f be       	out	0x3f, r0	; 63
    41d8:	0f 90       	pop	r0
    41da:	1f 90       	pop	r1
    41dc:	18 95       	reti

000041de <__vector_36>:
    41de:	1f 92       	push	r1
    41e0:	0f 92       	push	r0
    41e2:	0f b6       	in	r0, 0x3f	; 63
    41e4:	0f 92       	push	r0
    41e6:	11 24       	eor	r1, r1
    41e8:	0b b6       	in	r0, 0x3b	; 59
    41ea:	0f 92       	push	r0
    41ec:	2f 93       	push	r18
    41ee:	3f 93       	push	r19
    41f0:	4f 93       	push	r20
    41f2:	8f 93       	push	r24
    41f4:	9f 93       	push	r25
    41f6:	af 93       	push	r26
    41f8:	bf 93       	push	r27
    41fa:	ef 93       	push	r30
    41fc:	ff 93       	push	r31
    41fe:	80 91 c8 00 	lds	r24, 0x00C8
    4202:	82 fd       	sbrc	r24, 2
    4204:	1a c0       	rjmp	.+52     	; 0x423a <__vector_36+0x5c>
    4206:	40 91 ce 00 	lds	r20, 0x00CE
    420a:	80 91 63 11 	lds	r24, 0x1163
    420e:	90 91 64 11 	lds	r25, 0x1164
    4212:	01 96       	adiw	r24, 0x01	; 1
    4214:	8f 73       	andi	r24, 0x3F	; 63
    4216:	99 27       	eor	r25, r25
    4218:	20 91 65 11 	lds	r18, 0x1165
    421c:	30 91 66 11 	lds	r19, 0x1166
    4220:	82 17       	cp	r24, r18
    4222:	93 07       	cpc	r25, r19
    4224:	61 f0       	breq	.+24     	; 0x423e <__vector_36+0x60>
    4226:	e3 e6       	ldi	r30, 0x63	; 99
    4228:	f1 e1       	ldi	r31, 0x11	; 17
    422a:	a0 81       	ld	r26, Z
    422c:	b1 81       	ldd	r27, Z+1	; 0x01
    422e:	ad 5d       	subi	r26, 0xDD	; 221
    4230:	be 4e       	sbci	r27, 0xEE	; 238
    4232:	4c 93       	st	X, r20
    4234:	91 83       	std	Z+1, r25	; 0x01
    4236:	80 83       	st	Z, r24
    4238:	02 c0       	rjmp	.+4      	; 0x423e <__vector_36+0x60>
    423a:	80 91 ce 00 	lds	r24, 0x00CE
    423e:	ff 91       	pop	r31
    4240:	ef 91       	pop	r30
    4242:	bf 91       	pop	r27
    4244:	af 91       	pop	r26
    4246:	9f 91       	pop	r25
    4248:	8f 91       	pop	r24
    424a:	4f 91       	pop	r20
    424c:	3f 91       	pop	r19
    424e:	2f 91       	pop	r18
    4250:	0f 90       	pop	r0
    4252:	0b be       	out	0x3b, r0	; 59
    4254:	0f 90       	pop	r0
    4256:	0f be       	out	0x3f, r0	; 63
    4258:	0f 90       	pop	r0
    425a:	1f 90       	pop	r1
    425c:	18 95       	reti

0000425e <__vector_26>:
    425e:	1f 92       	push	r1
    4260:	0f 92       	push	r0
    4262:	0f b6       	in	r0, 0x3f	; 63
    4264:	0f 92       	push	r0
    4266:	11 24       	eor	r1, r1
    4268:	0b b6       	in	r0, 0x3b	; 59
    426a:	0f 92       	push	r0
    426c:	2f 93       	push	r18
    426e:	3f 93       	push	r19
    4270:	8f 93       	push	r24
    4272:	9f 93       	push	r25
    4274:	af 93       	push	r26
    4276:	bf 93       	push	r27
    4278:	ef 93       	push	r30
    427a:	ff 93       	push	r31
    427c:	20 91 a7 11 	lds	r18, 0x11A7
    4280:	30 91 a8 11 	lds	r19, 0x11A8
    4284:	80 91 a9 11 	lds	r24, 0x11A9
    4288:	90 91 aa 11 	lds	r25, 0x11AA
    428c:	28 17       	cp	r18, r24
    428e:	39 07       	cpc	r19, r25
    4290:	31 f4       	brne	.+12     	; 0x429e <__vector_26+0x40>
    4292:	e1 ec       	ldi	r30, 0xC1	; 193
    4294:	f0 e0       	ldi	r31, 0x00	; 0
    4296:	80 81       	ld	r24, Z
    4298:	8f 7d       	andi	r24, 0xDF	; 223
    429a:	80 83       	st	Z, r24
    429c:	10 c0       	rjmp	.+32     	; 0x42be <__vector_26+0x60>
    429e:	e9 ea       	ldi	r30, 0xA9	; 169
    42a0:	f1 e1       	ldi	r31, 0x11	; 17
    42a2:	a0 81       	ld	r26, Z
    42a4:	b1 81       	ldd	r27, Z+1	; 0x01
    42a6:	a9 59       	subi	r26, 0x99	; 153
    42a8:	be 4e       	sbci	r27, 0xEE	; 238
    42aa:	2c 91       	ld	r18, X
    42ac:	80 81       	ld	r24, Z
    42ae:	91 81       	ldd	r25, Z+1	; 0x01
    42b0:	01 96       	adiw	r24, 0x01	; 1
    42b2:	8f 73       	andi	r24, 0x3F	; 63
    42b4:	99 27       	eor	r25, r25
    42b6:	91 83       	std	Z+1, r25	; 0x01
    42b8:	80 83       	st	Z, r24
    42ba:	20 93 c6 00 	sts	0x00C6, r18
    42be:	ff 91       	pop	r31
    42c0:	ef 91       	pop	r30
    42c2:	bf 91       	pop	r27
    42c4:	af 91       	pop	r26
    42c6:	9f 91       	pop	r25
    42c8:	8f 91       	pop	r24
    42ca:	3f 91       	pop	r19
    42cc:	2f 91       	pop	r18
    42ce:	0f 90       	pop	r0
    42d0:	0b be       	out	0x3b, r0	; 59
    42d2:	0f 90       	pop	r0
    42d4:	0f be       	out	0x3f, r0	; 63
    42d6:	0f 90       	pop	r0
    42d8:	1f 90       	pop	r1
    42da:	18 95       	reti

000042dc <__vector_37>:
    42dc:	1f 92       	push	r1
    42de:	0f 92       	push	r0
    42e0:	0f b6       	in	r0, 0x3f	; 63
    42e2:	0f 92       	push	r0
    42e4:	11 24       	eor	r1, r1
    42e6:	0b b6       	in	r0, 0x3b	; 59
    42e8:	0f 92       	push	r0
    42ea:	2f 93       	push	r18
    42ec:	3f 93       	push	r19
    42ee:	8f 93       	push	r24
    42f0:	9f 93       	push	r25
    42f2:	af 93       	push	r26
    42f4:	bf 93       	push	r27
    42f6:	ef 93       	push	r30
    42f8:	ff 93       	push	r31
    42fa:	20 91 1f 11 	lds	r18, 0x111F
    42fe:	30 91 20 11 	lds	r19, 0x1120
    4302:	80 91 21 11 	lds	r24, 0x1121
    4306:	90 91 22 11 	lds	r25, 0x1122
    430a:	28 17       	cp	r18, r24
    430c:	39 07       	cpc	r19, r25
    430e:	31 f4       	brne	.+12     	; 0x431c <__vector_37+0x40>
    4310:	e9 ec       	ldi	r30, 0xC9	; 201
    4312:	f0 e0       	ldi	r31, 0x00	; 0
    4314:	80 81       	ld	r24, Z
    4316:	8f 7d       	andi	r24, 0xDF	; 223
    4318:	80 83       	st	Z, r24
    431a:	10 c0       	rjmp	.+32     	; 0x433c <__vector_37+0x60>
    431c:	e1 e2       	ldi	r30, 0x21	; 33
    431e:	f1 e1       	ldi	r31, 0x11	; 17
    4320:	a0 81       	ld	r26, Z
    4322:	b1 81       	ldd	r27, Z+1	; 0x01
    4324:	a1 52       	subi	r26, 0x21	; 33
    4326:	bf 4e       	sbci	r27, 0xEF	; 239
    4328:	2c 91       	ld	r18, X
    432a:	80 81       	ld	r24, Z
    432c:	91 81       	ldd	r25, Z+1	; 0x01
    432e:	01 96       	adiw	r24, 0x01	; 1
    4330:	8f 73       	andi	r24, 0x3F	; 63
    4332:	99 27       	eor	r25, r25
    4334:	91 83       	std	Z+1, r25	; 0x01
    4336:	80 83       	st	Z, r24
    4338:	20 93 ce 00 	sts	0x00CE, r18
    433c:	ff 91       	pop	r31
    433e:	ef 91       	pop	r30
    4340:	bf 91       	pop	r27
    4342:	af 91       	pop	r26
    4344:	9f 91       	pop	r25
    4346:	8f 91       	pop	r24
    4348:	3f 91       	pop	r19
    434a:	2f 91       	pop	r18
    434c:	0f 90       	pop	r0
    434e:	0b be       	out	0x3b, r0	; 59
    4350:	0f 90       	pop	r0
    4352:	0f be       	out	0x3f, r0	; 63
    4354:	0f 90       	pop	r0
    4356:	1f 90       	pop	r1
    4358:	18 95       	reti

0000435a <__vector_52>:
    435a:	1f 92       	push	r1
    435c:	0f 92       	push	r0
    435e:	0f b6       	in	r0, 0x3f	; 63
    4360:	0f 92       	push	r0
    4362:	11 24       	eor	r1, r1
    4364:	0b b6       	in	r0, 0x3b	; 59
    4366:	0f 92       	push	r0
    4368:	2f 93       	push	r18
    436a:	3f 93       	push	r19
    436c:	8f 93       	push	r24
    436e:	9f 93       	push	r25
    4370:	af 93       	push	r26
    4372:	bf 93       	push	r27
    4374:	ef 93       	push	r30
    4376:	ff 93       	push	r31
    4378:	20 91 97 10 	lds	r18, 0x1097
    437c:	30 91 98 10 	lds	r19, 0x1098
    4380:	80 91 99 10 	lds	r24, 0x1099
    4384:	90 91 9a 10 	lds	r25, 0x109A
    4388:	28 17       	cp	r18, r24
    438a:	39 07       	cpc	r19, r25
    438c:	31 f4       	brne	.+12     	; 0x439a <__vector_52+0x40>
    438e:	e1 ed       	ldi	r30, 0xD1	; 209
    4390:	f0 e0       	ldi	r31, 0x00	; 0
    4392:	80 81       	ld	r24, Z
    4394:	8f 7d       	andi	r24, 0xDF	; 223
    4396:	80 83       	st	Z, r24
    4398:	10 c0       	rjmp	.+32     	; 0x43ba <__vector_52+0x60>
    439a:	e9 e9       	ldi	r30, 0x99	; 153
    439c:	f0 e1       	ldi	r31, 0x10	; 16
    439e:	a0 81       	ld	r26, Z
    43a0:	b1 81       	ldd	r27, Z+1	; 0x01
    43a2:	a9 5a       	subi	r26, 0xA9	; 169
    43a4:	bf 4e       	sbci	r27, 0xEF	; 239
    43a6:	2c 91       	ld	r18, X
    43a8:	80 81       	ld	r24, Z
    43aa:	91 81       	ldd	r25, Z+1	; 0x01
    43ac:	01 96       	adiw	r24, 0x01	; 1
    43ae:	8f 73       	andi	r24, 0x3F	; 63
    43b0:	99 27       	eor	r25, r25
    43b2:	91 83       	std	Z+1, r25	; 0x01
    43b4:	80 83       	st	Z, r24
    43b6:	20 93 d6 00 	sts	0x00D6, r18
    43ba:	ff 91       	pop	r31
    43bc:	ef 91       	pop	r30
    43be:	bf 91       	pop	r27
    43c0:	af 91       	pop	r26
    43c2:	9f 91       	pop	r25
    43c4:	8f 91       	pop	r24
    43c6:	3f 91       	pop	r19
    43c8:	2f 91       	pop	r18
    43ca:	0f 90       	pop	r0
    43cc:	0b be       	out	0x3b, r0	; 59
    43ce:	0f 90       	pop	r0
    43d0:	0f be       	out	0x3f, r0	; 63
    43d2:	0f 90       	pop	r0
    43d4:	1f 90       	pop	r1
    43d6:	18 95       	reti

000043d8 <__vector_55>:
    43d8:	1f 92       	push	r1
    43da:	0f 92       	push	r0
    43dc:	0f b6       	in	r0, 0x3f	; 63
    43de:	0f 92       	push	r0
    43e0:	11 24       	eor	r1, r1
    43e2:	0b b6       	in	r0, 0x3b	; 59
    43e4:	0f 92       	push	r0
    43e6:	2f 93       	push	r18
    43e8:	3f 93       	push	r19
    43ea:	8f 93       	push	r24
    43ec:	9f 93       	push	r25
    43ee:	af 93       	push	r26
    43f0:	bf 93       	push	r27
    43f2:	ef 93       	push	r30
    43f4:	ff 93       	push	r31
    43f6:	20 91 0f 10 	lds	r18, 0x100F
    43fa:	30 91 10 10 	lds	r19, 0x1010
    43fe:	80 91 11 10 	lds	r24, 0x1011
    4402:	90 91 12 10 	lds	r25, 0x1012
    4406:	28 17       	cp	r18, r24
    4408:	39 07       	cpc	r19, r25
    440a:	31 f4       	brne	.+12     	; 0x4418 <__vector_55+0x40>
    440c:	e1 e3       	ldi	r30, 0x31	; 49
    440e:	f1 e0       	ldi	r31, 0x01	; 1
    4410:	80 81       	ld	r24, Z
    4412:	8f 7d       	andi	r24, 0xDF	; 223
    4414:	80 83       	st	Z, r24
    4416:	10 c0       	rjmp	.+32     	; 0x4438 <__vector_55+0x60>
    4418:	e1 e1       	ldi	r30, 0x11	; 17
    441a:	f0 e1       	ldi	r31, 0x10	; 16
    441c:	a0 81       	ld	r26, Z
    441e:	b1 81       	ldd	r27, Z+1	; 0x01
    4420:	a1 53       	subi	r26, 0x31	; 49
    4422:	b0 4f       	sbci	r27, 0xF0	; 240
    4424:	2c 91       	ld	r18, X
    4426:	80 81       	ld	r24, Z
    4428:	91 81       	ldd	r25, Z+1	; 0x01
    442a:	01 96       	adiw	r24, 0x01	; 1
    442c:	8f 73       	andi	r24, 0x3F	; 63
    442e:	99 27       	eor	r25, r25
    4430:	91 83       	std	Z+1, r25	; 0x01
    4432:	80 83       	st	Z, r24
    4434:	20 93 36 01 	sts	0x0136, r18
    4438:	ff 91       	pop	r31
    443a:	ef 91       	pop	r30
    443c:	bf 91       	pop	r27
    443e:	af 91       	pop	r26
    4440:	9f 91       	pop	r25
    4442:	8f 91       	pop	r24
    4444:	3f 91       	pop	r19
    4446:	2f 91       	pop	r18
    4448:	0f 90       	pop	r0
    444a:	0b be       	out	0x3b, r0	; 59
    444c:	0f 90       	pop	r0
    444e:	0f be       	out	0x3f, r0	; 63
    4450:	0f 90       	pop	r0
    4452:	1f 90       	pop	r1
    4454:	18 95       	reti

00004456 <_ZN14HardwareSerialC1EP11ring_bufferS1_PVhS3_S3_S3_S3_S3_hhhhh>:
    4456:	8f 92       	push	r8
    4458:	9f 92       	push	r9
    445a:	af 92       	push	r10
    445c:	bf 92       	push	r11
    445e:	cf 92       	push	r12
    4460:	df 92       	push	r13
    4462:	ef 92       	push	r14
    4464:	ff 92       	push	r15
    4466:	0f 93       	push	r16
    4468:	1f 93       	push	r17
    446a:	cf 93       	push	r28
    446c:	df 93       	push	r29
    446e:	cd b7       	in	r28, 0x3d	; 61
    4470:	de b7       	in	r29, 0x3e	; 62
    4472:	fc 01       	movw	r30, r24
    4474:	13 82       	std	Z+3, r1	; 0x03
    4476:	12 82       	std	Z+2, r1	; 0x02
    4478:	88 ee       	ldi	r24, 0xE8	; 232
    447a:	93 e0       	ldi	r25, 0x03	; 3
    447c:	a0 e0       	ldi	r26, 0x00	; 0
    447e:	b0 e0       	ldi	r27, 0x00	; 0
    4480:	84 83       	std	Z+4, r24	; 0x04
    4482:	95 83       	std	Z+5, r25	; 0x05
    4484:	a6 83       	std	Z+6, r26	; 0x06
    4486:	b7 83       	std	Z+7, r27	; 0x07
    4488:	88 ec       	ldi	r24, 0xC8	; 200
    448a:	92 e0       	ldi	r25, 0x02	; 2
    448c:	91 83       	std	Z+1, r25	; 0x01
    448e:	80 83       	st	Z, r24
    4490:	75 87       	std	Z+13, r23	; 0x0d
    4492:	64 87       	std	Z+12, r22	; 0x0c
    4494:	57 87       	std	Z+15, r21	; 0x0f
    4496:	46 87       	std	Z+14, r20	; 0x0e
    4498:	31 8b       	std	Z+17, r19	; 0x11
    449a:	20 8b       	std	Z+16, r18	; 0x10
    449c:	13 8b       	std	Z+19, r17	; 0x13
    449e:	02 8b       	std	Z+18, r16	; 0x12
    44a0:	f5 8a       	std	Z+21, r15	; 0x15
    44a2:	e4 8a       	std	Z+20, r14	; 0x14
    44a4:	d7 8a       	std	Z+23, r13	; 0x17
    44a6:	c6 8a       	std	Z+22, r12	; 0x16
    44a8:	b1 8e       	std	Z+25, r11	; 0x19
    44aa:	a0 8e       	std	Z+24, r10	; 0x18
    44ac:	93 8e       	std	Z+27, r9	; 0x1b
    44ae:	82 8e       	std	Z+26, r8	; 0x1a
    44b0:	88 89       	ldd	r24, Y+16	; 0x10
    44b2:	84 8f       	std	Z+28, r24	; 0x1c
    44b4:	89 89       	ldd	r24, Y+17	; 0x11
    44b6:	85 8f       	std	Z+29, r24	; 0x1d
    44b8:	8a 89       	ldd	r24, Y+18	; 0x12
    44ba:	86 8f       	std	Z+30, r24	; 0x1e
    44bc:	8b 89       	ldd	r24, Y+19	; 0x13
    44be:	87 8f       	std	Z+31, r24	; 0x1f
    44c0:	8c 89       	ldd	r24, Y+20	; 0x14
    44c2:	80 a3       	std	Z+32, r24	; 0x20
    44c4:	df 91       	pop	r29
    44c6:	cf 91       	pop	r28
    44c8:	1f 91       	pop	r17
    44ca:	0f 91       	pop	r16
    44cc:	ff 90       	pop	r15
    44ce:	ef 90       	pop	r14
    44d0:	df 90       	pop	r13
    44d2:	cf 90       	pop	r12
    44d4:	bf 90       	pop	r11
    44d6:	af 90       	pop	r10
    44d8:	9f 90       	pop	r9
    44da:	8f 90       	pop	r8
    44dc:	08 95       	ret

000044de <_ZN14HardwareSerial5beginEm>:
    44de:	cf 92       	push	r12
    44e0:	df 92       	push	r13
    44e2:	ef 92       	push	r14
    44e4:	ff 92       	push	r15
    44e6:	cf 93       	push	r28
    44e8:	df 93       	push	r29
    44ea:	ec 01       	movw	r28, r24
    44ec:	6a 01       	movw	r12, r20
    44ee:	7b 01       	movw	r14, r22
    44f0:	41 15       	cp	r20, r1
    44f2:	81 ee       	ldi	r24, 0xE1	; 225
    44f4:	58 07       	cpc	r21, r24
    44f6:	61 05       	cpc	r22, r1
    44f8:	71 05       	cpc	r23, r1
    44fa:	01 f1       	breq	.+64     	; 0x453c <_ZN14HardwareSerial5beginEm+0x5e>
    44fc:	ec 89       	ldd	r30, Y+20	; 0x14
    44fe:	fd 89       	ldd	r31, Y+21	; 0x15
    4500:	81 e0       	ldi	r24, 0x01	; 1
    4502:	90 e0       	ldi	r25, 0x00	; 0
    4504:	08 a0       	ldd	r0, Y+32	; 0x20
    4506:	02 c0       	rjmp	.+4      	; 0x450c <_ZN14HardwareSerial5beginEm+0x2e>
    4508:	88 0f       	add	r24, r24
    450a:	99 1f       	adc	r25, r25
    450c:	0a 94       	dec	r0
    450e:	e2 f7       	brpl	.-8      	; 0x4508 <_ZN14HardwareSerial5beginEm+0x2a>
    4510:	80 83       	st	Z, r24
    4512:	60 e0       	ldi	r22, 0x00	; 0
    4514:	79 e0       	ldi	r23, 0x09	; 9
    4516:	8d e3       	ldi	r24, 0x3D	; 61
    4518:	90 e0       	ldi	r25, 0x00	; 0
    451a:	a7 01       	movw	r20, r14
    451c:	96 01       	movw	r18, r12
    451e:	04 d4       	rcall	.+2056   	; 0x4d28 <__udivmodsi4>
    4520:	ba 01       	movw	r22, r20
    4522:	a9 01       	movw	r20, r18
    4524:	41 50       	subi	r20, 0x01	; 1
    4526:	51 09       	sbc	r21, r1
    4528:	61 09       	sbc	r22, r1
    452a:	71 09       	sbc	r23, r1
    452c:	76 95       	lsr	r23
    452e:	67 95       	ror	r22
    4530:	57 95       	ror	r21
    4532:	47 95       	ror	r20
    4534:	41 15       	cp	r20, r1
    4536:	80 e1       	ldi	r24, 0x10	; 16
    4538:	58 07       	cpc	r21, r24
    453a:	a0 f0       	brcs	.+40     	; 0x4564 <_ZN14HardwareSerial5beginEm+0x86>
    453c:	ec 89       	ldd	r30, Y+20	; 0x14
    453e:	fd 89       	ldd	r31, Y+21	; 0x15
    4540:	10 82       	st	Z, r1
    4542:	60 e8       	ldi	r22, 0x80	; 128
    4544:	74 e8       	ldi	r23, 0x84	; 132
    4546:	8e e1       	ldi	r24, 0x1E	; 30
    4548:	90 e0       	ldi	r25, 0x00	; 0
    454a:	a7 01       	movw	r20, r14
    454c:	96 01       	movw	r18, r12
    454e:	ec d3       	rcall	.+2008   	; 0x4d28 <__udivmodsi4>
    4550:	ba 01       	movw	r22, r20
    4552:	a9 01       	movw	r20, r18
    4554:	41 50       	subi	r20, 0x01	; 1
    4556:	51 09       	sbc	r21, r1
    4558:	61 09       	sbc	r22, r1
    455a:	71 09       	sbc	r23, r1
    455c:	76 95       	lsr	r23
    455e:	67 95       	ror	r22
    4560:	57 95       	ror	r21
    4562:	47 95       	ror	r20
    4564:	e8 89       	ldd	r30, Y+16	; 0x10
    4566:	f9 89       	ldd	r31, Y+17	; 0x11
    4568:	50 83       	st	Z, r21
    456a:	ea 89       	ldd	r30, Y+18	; 0x12
    456c:	fb 89       	ldd	r31, Y+19	; 0x13
    456e:	40 83       	st	Z, r20
    4570:	19 a2       	std	Y+33, r1	; 0x21
    4572:	ee 89       	ldd	r30, Y+22	; 0x16
    4574:	ff 89       	ldd	r31, Y+23	; 0x17
    4576:	40 81       	ld	r20, Z
    4578:	81 e0       	ldi	r24, 0x01	; 1
    457a:	90 e0       	ldi	r25, 0x00	; 0
    457c:	9c 01       	movw	r18, r24
    457e:	0c 8c       	ldd	r0, Y+28	; 0x1c
    4580:	02 c0       	rjmp	.+4      	; 0x4586 <_ZN14HardwareSerial5beginEm+0xa8>
    4582:	22 0f       	add	r18, r18
    4584:	33 1f       	adc	r19, r19
    4586:	0a 94       	dec	r0
    4588:	e2 f7       	brpl	.-8      	; 0x4582 <_ZN14HardwareSerial5beginEm+0xa4>
    458a:	24 2b       	or	r18, r20
    458c:	20 83       	st	Z, r18
    458e:	ee 89       	ldd	r30, Y+22	; 0x16
    4590:	ff 89       	ldd	r31, Y+23	; 0x17
    4592:	40 81       	ld	r20, Z
    4594:	9c 01       	movw	r18, r24
    4596:	0d 8c       	ldd	r0, Y+29	; 0x1d
    4598:	02 c0       	rjmp	.+4      	; 0x459e <_ZN14HardwareSerial5beginEm+0xc0>
    459a:	22 0f       	add	r18, r18
    459c:	33 1f       	adc	r19, r19
    459e:	0a 94       	dec	r0
    45a0:	e2 f7       	brpl	.-8      	; 0x459a <_ZN14HardwareSerial5beginEm+0xbc>
    45a2:	24 2b       	or	r18, r20
    45a4:	20 83       	st	Z, r18
    45a6:	ee 89       	ldd	r30, Y+22	; 0x16
    45a8:	ff 89       	ldd	r31, Y+23	; 0x17
    45aa:	40 81       	ld	r20, Z
    45ac:	9c 01       	movw	r18, r24
    45ae:	0e 8c       	ldd	r0, Y+30	; 0x1e
    45b0:	02 c0       	rjmp	.+4      	; 0x45b6 <_ZN14HardwareSerial5beginEm+0xd8>
    45b2:	22 0f       	add	r18, r18
    45b4:	33 1f       	adc	r19, r19
    45b6:	0a 94       	dec	r0
    45b8:	e2 f7       	brpl	.-8      	; 0x45b2 <_ZN14HardwareSerial5beginEm+0xd4>
    45ba:	24 2b       	or	r18, r20
    45bc:	20 83       	st	Z, r18
    45be:	ee 89       	ldd	r30, Y+22	; 0x16
    45c0:	ff 89       	ldd	r31, Y+23	; 0x17
    45c2:	20 81       	ld	r18, Z
    45c4:	0f 8c       	ldd	r0, Y+31	; 0x1f
    45c6:	02 c0       	rjmp	.+4      	; 0x45cc <_ZN14HardwareSerial5beginEm+0xee>
    45c8:	88 0f       	add	r24, r24
    45ca:	99 1f       	adc	r25, r25
    45cc:	0a 94       	dec	r0
    45ce:	e2 f7       	brpl	.-8      	; 0x45c8 <_ZN14HardwareSerial5beginEm+0xea>
    45d0:	80 95       	com	r24
    45d2:	82 23       	and	r24, r18
    45d4:	80 83       	st	Z, r24
    45d6:	df 91       	pop	r29
    45d8:	cf 91       	pop	r28
    45da:	ff 90       	pop	r15
    45dc:	ef 90       	pop	r14
    45de:	df 90       	pop	r13
    45e0:	cf 90       	pop	r12
    45e2:	08 95       	ret

000045e4 <_GLOBAL__sub_I_rx_buffer>:
    45e4:	5f 92       	push	r5
    45e6:	6f 92       	push	r6
    45e8:	7f 92       	push	r7
    45ea:	8f 92       	push	r8
    45ec:	9f 92       	push	r9
    45ee:	af 92       	push	r10
    45f0:	bf 92       	push	r11
    45f2:	cf 92       	push	r12
    45f4:	df 92       	push	r13
    45f6:	ef 92       	push	r14
    45f8:	ff 92       	push	r15
    45fa:	0f 93       	push	r16
    45fc:	1f 93       	push	r17
    45fe:	cf 93       	push	r28
    4600:	df 93       	push	r29
    4602:	55 24       	eor	r5, r5
    4604:	53 94       	inc	r5
    4606:	5f 92       	push	r5
    4608:	0f 2e       	mov	r0, r31
    460a:	f5 e0       	ldi	r31, 0x05	; 5
    460c:	6f 2e       	mov	r6, r31
    460e:	f0 2d       	mov	r31, r0
    4610:	6f 92       	push	r6
    4612:	0f 2e       	mov	r0, r31
    4614:	f7 e0       	ldi	r31, 0x07	; 7
    4616:	7f 2e       	mov	r7, r31
    4618:	f0 2d       	mov	r31, r0
    461a:	7f 92       	push	r7
    461c:	d3 e0       	ldi	r29, 0x03	; 3
    461e:	df 93       	push	r29
    4620:	c4 e0       	ldi	r28, 0x04	; 4
    4622:	cf 93       	push	r28
    4624:	0f 2e       	mov	r0, r31
    4626:	f6 ec       	ldi	r31, 0xC6	; 198
    4628:	8f 2e       	mov	r8, r31
    462a:	91 2c       	mov	r9, r1
    462c:	f0 2d       	mov	r31, r0
    462e:	0f 2e       	mov	r0, r31
    4630:	f2 ec       	ldi	r31, 0xC2	; 194
    4632:	af 2e       	mov	r10, r31
    4634:	b1 2c       	mov	r11, r1
    4636:	f0 2d       	mov	r31, r0
    4638:	0f 2e       	mov	r0, r31
    463a:	f1 ec       	ldi	r31, 0xC1	; 193
    463c:	cf 2e       	mov	r12, r31
    463e:	d1 2c       	mov	r13, r1
    4640:	f0 2d       	mov	r31, r0
    4642:	0f 2e       	mov	r0, r31
    4644:	f0 ec       	ldi	r31, 0xC0	; 192
    4646:	ef 2e       	mov	r14, r31
    4648:	f1 2c       	mov	r15, r1
    464a:	f0 2d       	mov	r31, r0
    464c:	04 ec       	ldi	r16, 0xC4	; 196
    464e:	10 e0       	ldi	r17, 0x00	; 0
    4650:	25 ec       	ldi	r18, 0xC5	; 197
    4652:	30 e0       	ldi	r19, 0x00	; 0
    4654:	47 e6       	ldi	r20, 0x67	; 103
    4656:	51 e1       	ldi	r21, 0x11	; 17
    4658:	6b ea       	ldi	r22, 0xAB	; 171
    465a:	71 e1       	ldi	r23, 0x11	; 17
    465c:	8d ea       	ldi	r24, 0xAD	; 173
    465e:	9f e0       	ldi	r25, 0x0F	; 15
    4660:	fa de       	rcall	.-524    	; 0x4456 <_ZN14HardwareSerialC1EP11ring_bufferS1_PVhS3_S3_S3_S3_S3_hhhhh>
    4662:	5f 92       	push	r5
    4664:	6f 92       	push	r6
    4666:	7f 92       	push	r7
    4668:	df 93       	push	r29
    466a:	cf 93       	push	r28
    466c:	0f 2e       	mov	r0, r31
    466e:	fe ec       	ldi	r31, 0xCE	; 206
    4670:	8f 2e       	mov	r8, r31
    4672:	91 2c       	mov	r9, r1
    4674:	f0 2d       	mov	r31, r0
    4676:	0f 2e       	mov	r0, r31
    4678:	fa ec       	ldi	r31, 0xCA	; 202
    467a:	af 2e       	mov	r10, r31
    467c:	b1 2c       	mov	r11, r1
    467e:	f0 2d       	mov	r31, r0
    4680:	0f 2e       	mov	r0, r31
    4682:	f9 ec       	ldi	r31, 0xC9	; 201
    4684:	cf 2e       	mov	r12, r31
    4686:	d1 2c       	mov	r13, r1
    4688:	f0 2d       	mov	r31, r0
    468a:	0f 2e       	mov	r0, r31
    468c:	f8 ec       	ldi	r31, 0xC8	; 200
    468e:	ef 2e       	mov	r14, r31
    4690:	f1 2c       	mov	r15, r1
    4692:	f0 2d       	mov	r31, r0
    4694:	0c ec       	ldi	r16, 0xCC	; 204
    4696:	10 e0       	ldi	r17, 0x00	; 0
    4698:	2d ec       	ldi	r18, 0xCD	; 205
    469a:	30 e0       	ldi	r19, 0x00	; 0
    469c:	4f ed       	ldi	r20, 0xDF	; 223
    469e:	50 e1       	ldi	r21, 0x10	; 16
    46a0:	63 e2       	ldi	r22, 0x23	; 35
    46a2:	71 e1       	ldi	r23, 0x11	; 17
    46a4:	8b e8       	ldi	r24, 0x8B	; 139
    46a6:	9f e0       	ldi	r25, 0x0F	; 15
    46a8:	d6 de       	rcall	.-596    	; 0x4456 <_ZN14HardwareSerialC1EP11ring_bufferS1_PVhS3_S3_S3_S3_S3_hhhhh>
    46aa:	5f 92       	push	r5
    46ac:	6f 92       	push	r6
    46ae:	7f 92       	push	r7
    46b0:	df 93       	push	r29
    46b2:	cf 93       	push	r28
    46b4:	0f 2e       	mov	r0, r31
    46b6:	f6 ed       	ldi	r31, 0xD6	; 214
    46b8:	8f 2e       	mov	r8, r31
    46ba:	91 2c       	mov	r9, r1
    46bc:	f0 2d       	mov	r31, r0
    46be:	0f 2e       	mov	r0, r31
    46c0:	f2 ed       	ldi	r31, 0xD2	; 210
    46c2:	af 2e       	mov	r10, r31
    46c4:	b1 2c       	mov	r11, r1
    46c6:	f0 2d       	mov	r31, r0
    46c8:	0f 2e       	mov	r0, r31
    46ca:	f1 ed       	ldi	r31, 0xD1	; 209
    46cc:	cf 2e       	mov	r12, r31
    46ce:	d1 2c       	mov	r13, r1
    46d0:	f0 2d       	mov	r31, r0
    46d2:	0f 2e       	mov	r0, r31
    46d4:	f0 ed       	ldi	r31, 0xD0	; 208
    46d6:	ef 2e       	mov	r14, r31
    46d8:	f1 2c       	mov	r15, r1
    46da:	f0 2d       	mov	r31, r0
    46dc:	04 ed       	ldi	r16, 0xD4	; 212
    46de:	10 e0       	ldi	r17, 0x00	; 0
    46e0:	25 ed       	ldi	r18, 0xD5	; 213
    46e2:	30 e0       	ldi	r19, 0x00	; 0
    46e4:	47 e5       	ldi	r20, 0x57	; 87
    46e6:	50 e1       	ldi	r21, 0x10	; 16
    46e8:	6b e9       	ldi	r22, 0x9B	; 155
    46ea:	70 e1       	ldi	r23, 0x10	; 16
    46ec:	89 e6       	ldi	r24, 0x69	; 105
    46ee:	9f e0       	ldi	r25, 0x0F	; 15
    46f0:	b2 de       	rcall	.-668    	; 0x4456 <_ZN14HardwareSerialC1EP11ring_bufferS1_PVhS3_S3_S3_S3_S3_hhhhh>
    46f2:	5f 92       	push	r5
    46f4:	6f 92       	push	r6
    46f6:	7f 92       	push	r7
    46f8:	df 93       	push	r29
    46fa:	cf 93       	push	r28
    46fc:	0f 2e       	mov	r0, r31
    46fe:	f6 e3       	ldi	r31, 0x36	; 54
    4700:	8f 2e       	mov	r8, r31
    4702:	99 24       	eor	r9, r9
    4704:	93 94       	inc	r9
    4706:	f0 2d       	mov	r31, r0
    4708:	0f 2e       	mov	r0, r31
    470a:	f2 e3       	ldi	r31, 0x32	; 50
    470c:	af 2e       	mov	r10, r31
    470e:	bb 24       	eor	r11, r11
    4710:	b3 94       	inc	r11
    4712:	f0 2d       	mov	r31, r0
    4714:	0f 2e       	mov	r0, r31
    4716:	f1 e3       	ldi	r31, 0x31	; 49
    4718:	cf 2e       	mov	r12, r31
    471a:	dd 24       	eor	r13, r13
    471c:	d3 94       	inc	r13
    471e:	f0 2d       	mov	r31, r0
    4720:	0f 2e       	mov	r0, r31
    4722:	f0 e3       	ldi	r31, 0x30	; 48
    4724:	ef 2e       	mov	r14, r31
    4726:	ff 24       	eor	r15, r15
    4728:	f3 94       	inc	r15
    472a:	f0 2d       	mov	r31, r0
    472c:	04 e3       	ldi	r16, 0x34	; 52
    472e:	11 e0       	ldi	r17, 0x01	; 1
    4730:	25 e3       	ldi	r18, 0x35	; 53
    4732:	31 e0       	ldi	r19, 0x01	; 1
    4734:	4f ec       	ldi	r20, 0xCF	; 207
    4736:	5f e0       	ldi	r21, 0x0F	; 15
    4738:	63 e1       	ldi	r22, 0x13	; 19
    473a:	70 e1       	ldi	r23, 0x10	; 16
    473c:	87 e4       	ldi	r24, 0x47	; 71
    473e:	9f e0       	ldi	r25, 0x0F	; 15
    4740:	8a de       	rcall	.-748    	; 0x4456 <_ZN14HardwareSerialC1EP11ring_bufferS1_PVhS3_S3_S3_S3_S3_hhhhh>
    4742:	8d b7       	in	r24, 0x3d	; 61
    4744:	9e b7       	in	r25, 0x3e	; 62
    4746:	44 96       	adiw	r24, 0x14	; 20
    4748:	0f b6       	in	r0, 0x3f	; 63
    474a:	f8 94       	cli
    474c:	9e bf       	out	0x3e, r25	; 62
    474e:	0f be       	out	0x3f, r0	; 63
    4750:	8d bf       	out	0x3d, r24	; 61
    4752:	df 91       	pop	r29
    4754:	cf 91       	pop	r28
    4756:	1f 91       	pop	r17
    4758:	0f 91       	pop	r16
    475a:	ff 90       	pop	r15
    475c:	ef 90       	pop	r14
    475e:	df 90       	pop	r13
    4760:	cf 90       	pop	r12
    4762:	bf 90       	pop	r11
    4764:	af 90       	pop	r10
    4766:	9f 90       	pop	r9
    4768:	8f 90       	pop	r8
    476a:	7f 90       	pop	r7
    476c:	6f 90       	pop	r6
    476e:	5f 90       	pop	r5
    4770:	08 95       	ret

00004772 <_ZN5Print5writeEPKhj>:
    4772:	cf 92       	push	r12
    4774:	df 92       	push	r13
    4776:	ef 92       	push	r14
    4778:	ff 92       	push	r15
    477a:	0f 93       	push	r16
    477c:	1f 93       	push	r17
    477e:	cf 93       	push	r28
    4780:	df 93       	push	r29
    4782:	6c 01       	movw	r12, r24
    4784:	41 15       	cp	r20, r1
    4786:	51 05       	cpc	r21, r1
    4788:	b1 f0       	breq	.+44     	; 0x47b6 <_ZN5Print5writeEPKhj+0x44>
    478a:	06 2f       	mov	r16, r22
    478c:	17 2f       	mov	r17, r23
    478e:	ea 01       	movw	r28, r20
    4790:	e1 2c       	mov	r14, r1
    4792:	f1 2c       	mov	r15, r1
    4794:	d8 01       	movw	r26, r16
    4796:	6d 91       	ld	r22, X+
    4798:	8d 01       	movw	r16, r26
    479a:	d6 01       	movw	r26, r12
    479c:	ed 91       	ld	r30, X+
    479e:	fc 91       	ld	r31, X
    47a0:	01 90       	ld	r0, Z+
    47a2:	f0 81       	ld	r31, Z
    47a4:	e0 2d       	mov	r30, r0
    47a6:	c6 01       	movw	r24, r12
    47a8:	19 95       	eicall
    47aa:	e8 0e       	add	r14, r24
    47ac:	f9 1e       	adc	r15, r25
    47ae:	21 97       	sbiw	r28, 0x01	; 1
    47b0:	20 97       	sbiw	r28, 0x00	; 0
    47b2:	81 f7       	brne	.-32     	; 0x4794 <_ZN5Print5writeEPKhj+0x22>
    47b4:	02 c0       	rjmp	.+4      	; 0x47ba <_ZN5Print5writeEPKhj+0x48>
    47b6:	e1 2c       	mov	r14, r1
    47b8:	f1 2c       	mov	r15, r1
    47ba:	c7 01       	movw	r24, r14
    47bc:	df 91       	pop	r29
    47be:	cf 91       	pop	r28
    47c0:	1f 91       	pop	r17
    47c2:	0f 91       	pop	r16
    47c4:	ff 90       	pop	r15
    47c6:	ef 90       	pop	r14
    47c8:	df 90       	pop	r13
    47ca:	cf 90       	pop	r12
    47cc:	08 95       	ret

000047ce <_ZN5Print5printEPKc>:
    47ce:	61 15       	cp	r22, r1
    47d0:	71 05       	cpc	r23, r1
    47d2:	81 f0       	breq	.+32     	; 0x47f4 <_ZN5Print5printEPKc+0x26>
    47d4:	fb 01       	movw	r30, r22
    47d6:	01 90       	ld	r0, Z+
    47d8:	00 20       	and	r0, r0
    47da:	e9 f7       	brne	.-6      	; 0x47d6 <_ZN5Print5printEPKc+0x8>
    47dc:	31 97       	sbiw	r30, 0x01	; 1
    47de:	af 01       	movw	r20, r30
    47e0:	46 1b       	sub	r20, r22
    47e2:	57 0b       	sbc	r21, r23
    47e4:	dc 01       	movw	r26, r24
    47e6:	ed 91       	ld	r30, X+
    47e8:	fc 91       	ld	r31, X
    47ea:	02 80       	ldd	r0, Z+2	; 0x02
    47ec:	f3 81       	ldd	r31, Z+3	; 0x03
    47ee:	e0 2d       	mov	r30, r0
    47f0:	19 95       	eicall
    47f2:	08 95       	ret
    47f4:	80 e0       	ldi	r24, 0x00	; 0
    47f6:	90 e0       	ldi	r25, 0x00	; 0
    47f8:	08 95       	ret

000047fa <_ZN5Print5printEc>:
    47fa:	dc 01       	movw	r26, r24
    47fc:	ed 91       	ld	r30, X+
    47fe:	fc 91       	ld	r31, X
    4800:	01 90       	ld	r0, Z+
    4802:	f0 81       	ld	r31, Z
    4804:	e0 2d       	mov	r30, r0
    4806:	19 95       	eicall
    4808:	08 95       	ret

0000480a <_ZN5Print7printlnEv>:
    480a:	0f 93       	push	r16
    480c:	1f 93       	push	r17
    480e:	cf 93       	push	r28
    4810:	df 93       	push	r29
    4812:	ec 01       	movw	r28, r24
    4814:	6d e0       	ldi	r22, 0x0D	; 13
    4816:	f1 df       	rcall	.-30     	; 0x47fa <_ZN5Print5printEc>
    4818:	8c 01       	movw	r16, r24
    481a:	6a e0       	ldi	r22, 0x0A	; 10
    481c:	ce 01       	movw	r24, r28
    481e:	ed df       	rcall	.-38     	; 0x47fa <_ZN5Print5printEc>
    4820:	80 0f       	add	r24, r16
    4822:	91 1f       	adc	r25, r17
    4824:	df 91       	pop	r29
    4826:	cf 91       	pop	r28
    4828:	1f 91       	pop	r17
    482a:	0f 91       	pop	r16
    482c:	08 95       	ret

0000482e <_ZN5Print7printlnEPKc>:
    482e:	0f 93       	push	r16
    4830:	1f 93       	push	r17
    4832:	cf 93       	push	r28
    4834:	df 93       	push	r29
    4836:	ec 01       	movw	r28, r24
    4838:	ca df       	rcall	.-108    	; 0x47ce <_ZN5Print5printEPKc>
    483a:	8c 01       	movw	r16, r24
    483c:	ce 01       	movw	r24, r28
    483e:	e5 df       	rcall	.-54     	; 0x480a <_ZN5Print7printlnEv>
    4840:	80 0f       	add	r24, r16
    4842:	91 1f       	adc	r25, r17
    4844:	df 91       	pop	r29
    4846:	cf 91       	pop	r28
    4848:	1f 91       	pop	r17
    484a:	0f 91       	pop	r16
    484c:	08 95       	ret

0000484e <_ZN5Print11printNumberEmh>:
    484e:	6f 92       	push	r6
    4850:	7f 92       	push	r7
    4852:	8f 92       	push	r8
    4854:	9f 92       	push	r9
    4856:	af 92       	push	r10
    4858:	bf 92       	push	r11
    485a:	cf 92       	push	r12
    485c:	df 92       	push	r13
    485e:	ef 92       	push	r14
    4860:	ff 92       	push	r15
    4862:	0f 93       	push	r16
    4864:	1f 93       	push	r17
    4866:	cf 93       	push	r28
    4868:	df 93       	push	r29
    486a:	cd b7       	in	r28, 0x3d	; 61
    486c:	de b7       	in	r29, 0x3e	; 62
    486e:	a1 97       	sbiw	r28, 0x21	; 33
    4870:	0f b6       	in	r0, 0x3f	; 63
    4872:	f8 94       	cli
    4874:	de bf       	out	0x3e, r29	; 62
    4876:	0f be       	out	0x3f, r0	; 63
    4878:	cd bf       	out	0x3d, r28	; 61
    487a:	6c 01       	movw	r12, r24
    487c:	74 2e       	mov	r7, r20
    487e:	35 2f       	mov	r19, r21
    4880:	86 2f       	mov	r24, r22
    4882:	97 2f       	mov	r25, r23
    4884:	62 2e       	mov	r6, r18
    4886:	19 a2       	std	Y+33, r1	; 0x21
    4888:	21 e0       	ldi	r18, 0x01	; 1
    488a:	26 15       	cp	r18, r6
    488c:	20 f0       	brcs	.+8      	; 0x4896 <_ZN5Print11printNumberEmh+0x48>
    488e:	0f 2e       	mov	r0, r31
    4890:	fa e0       	ldi	r31, 0x0A	; 10
    4892:	6f 2e       	mov	r6, r31
    4894:	f0 2d       	mov	r31, r0
    4896:	7e 01       	movw	r14, r28
    4898:	a1 e2       	ldi	r26, 0x21	; 33
    489a:	ea 0e       	add	r14, r26
    489c:	f1 1c       	adc	r15, r1
    489e:	86 2c       	mov	r8, r6
    48a0:	91 2c       	mov	r9, r1
    48a2:	a1 2c       	mov	r10, r1
    48a4:	b1 2c       	mov	r11, r1
    48a6:	67 2d       	mov	r22, r7
    48a8:	73 2f       	mov	r23, r19
    48aa:	a5 01       	movw	r20, r10
    48ac:	94 01       	movw	r18, r8
    48ae:	3c d2       	rcall	.+1144   	; 0x4d28 <__udivmodsi4>
    48b0:	e2 2f       	mov	r30, r18
    48b2:	73 2f       	mov	r23, r19
    48b4:	02 2f       	mov	r16, r18
    48b6:	13 2f       	mov	r17, r19
    48b8:	24 2f       	mov	r18, r20
    48ba:	35 2f       	mov	r19, r21
    48bc:	f7 2d       	mov	r31, r7
    48be:	6e 9e       	mul	r6, r30
    48c0:	f0 19       	sub	r31, r0
    48c2:	11 24       	eor	r1, r1
    48c4:	b1 e0       	ldi	r27, 0x01	; 1
    48c6:	eb 1a       	sub	r14, r27
    48c8:	f1 08       	sbc	r15, r1
    48ca:	fa 30       	cpi	r31, 0x0A	; 10
    48cc:	10 f4       	brcc	.+4      	; 0x48d2 <_ZN5Print11printNumberEmh+0x84>
    48ce:	f0 5d       	subi	r31, 0xD0	; 208
    48d0:	01 c0       	rjmp	.+2      	; 0x48d4 <_ZN5Print11printNumberEmh+0x86>
    48d2:	f9 5c       	subi	r31, 0xC9	; 201
    48d4:	d7 01       	movw	r26, r14
    48d6:	fc 93       	st	X, r31
    48d8:	01 2b       	or	r16, r17
    48da:	02 2b       	or	r16, r18
    48dc:	03 2b       	or	r16, r19
    48de:	29 f0       	breq	.+10     	; 0x48ea <_ZN5Print11printNumberEmh+0x9c>
    48e0:	7e 2e       	mov	r7, r30
    48e2:	37 2f       	mov	r19, r23
    48e4:	84 2f       	mov	r24, r20
    48e6:	95 2f       	mov	r25, r21
    48e8:	de cf       	rjmp	.-68     	; 0x48a6 <_ZN5Print11printNumberEmh+0x58>
    48ea:	e1 14       	cp	r14, r1
    48ec:	f1 04       	cpc	r15, r1
    48ee:	91 f0       	breq	.+36     	; 0x4914 <_ZN5Print11printNumberEmh+0xc6>
    48f0:	f7 01       	movw	r30, r14
    48f2:	01 90       	ld	r0, Z+
    48f4:	00 20       	and	r0, r0
    48f6:	e9 f7       	brne	.-6      	; 0x48f2 <_ZN5Print11printNumberEmh+0xa4>
    48f8:	31 97       	sbiw	r30, 0x01	; 1
    48fa:	af 01       	movw	r20, r30
    48fc:	4e 19       	sub	r20, r14
    48fe:	5f 09       	sbc	r21, r15
    4900:	d6 01       	movw	r26, r12
    4902:	ed 91       	ld	r30, X+
    4904:	fc 91       	ld	r31, X
    4906:	02 80       	ldd	r0, Z+2	; 0x02
    4908:	f3 81       	ldd	r31, Z+3	; 0x03
    490a:	e0 2d       	mov	r30, r0
    490c:	b7 01       	movw	r22, r14
    490e:	c6 01       	movw	r24, r12
    4910:	19 95       	eicall
    4912:	02 c0       	rjmp	.+4      	; 0x4918 <_ZN5Print11printNumberEmh+0xca>
    4914:	80 e0       	ldi	r24, 0x00	; 0
    4916:	90 e0       	ldi	r25, 0x00	; 0
    4918:	a1 96       	adiw	r28, 0x21	; 33
    491a:	0f b6       	in	r0, 0x3f	; 63
    491c:	f8 94       	cli
    491e:	de bf       	out	0x3e, r29	; 62
    4920:	0f be       	out	0x3f, r0	; 63
    4922:	cd bf       	out	0x3d, r28	; 61
    4924:	df 91       	pop	r29
    4926:	cf 91       	pop	r28
    4928:	1f 91       	pop	r17
    492a:	0f 91       	pop	r16
    492c:	ff 90       	pop	r15
    492e:	ef 90       	pop	r14
    4930:	df 90       	pop	r13
    4932:	cf 90       	pop	r12
    4934:	bf 90       	pop	r11
    4936:	af 90       	pop	r10
    4938:	9f 90       	pop	r9
    493a:	8f 90       	pop	r8
    493c:	7f 90       	pop	r7
    493e:	6f 90       	pop	r6
    4940:	08 95       	ret

00004942 <_ZN5Print5printEli>:
    4942:	cf 92       	push	r12
    4944:	df 92       	push	r13
    4946:	ef 92       	push	r14
    4948:	ff 92       	push	r15
    494a:	0f 93       	push	r16
    494c:	1f 93       	push	r17
    494e:	cf 93       	push	r28
    4950:	df 93       	push	r29
    4952:	ec 01       	movw	r28, r24
    4954:	6a 01       	movw	r12, r20
    4956:	7b 01       	movw	r14, r22
    4958:	21 15       	cp	r18, r1
    495a:	31 05       	cpc	r19, r1
    495c:	41 f4       	brne	.+16     	; 0x496e <_ZN5Print5printEli+0x2c>
    495e:	e8 81       	ld	r30, Y
    4960:	f9 81       	ldd	r31, Y+1	; 0x01
    4962:	01 90       	ld	r0, Z+
    4964:	f0 81       	ld	r31, Z
    4966:	e0 2d       	mov	r30, r0
    4968:	64 2f       	mov	r22, r20
    496a:	19 95       	eicall
    496c:	19 c0       	rjmp	.+50     	; 0x49a0 <_ZN5Print5printEli+0x5e>
    496e:	2a 30       	cpi	r18, 0x0A	; 10
    4970:	31 05       	cpc	r19, r1
    4972:	a9 f4       	brne	.+42     	; 0x499e <_ZN5Print5printEli+0x5c>
    4974:	77 23       	and	r23, r23
    4976:	84 f4       	brge	.+32     	; 0x4998 <_ZN5Print5printEli+0x56>
    4978:	6d e2       	ldi	r22, 0x2D	; 45
    497a:	3f df       	rcall	.-386    	; 0x47fa <_ZN5Print5printEc>
    497c:	8c 01       	movw	r16, r24
    497e:	44 27       	eor	r20, r20
    4980:	55 27       	eor	r21, r21
    4982:	ba 01       	movw	r22, r20
    4984:	4c 19       	sub	r20, r12
    4986:	5d 09       	sbc	r21, r13
    4988:	6e 09       	sbc	r22, r14
    498a:	7f 09       	sbc	r23, r15
    498c:	2a e0       	ldi	r18, 0x0A	; 10
    498e:	ce 01       	movw	r24, r28
    4990:	5e df       	rcall	.-324    	; 0x484e <_ZN5Print11printNumberEmh>
    4992:	80 0f       	add	r24, r16
    4994:	91 1f       	adc	r25, r17
    4996:	04 c0       	rjmp	.+8      	; 0x49a0 <_ZN5Print5printEli+0x5e>
    4998:	2a e0       	ldi	r18, 0x0A	; 10
    499a:	59 df       	rcall	.-334    	; 0x484e <_ZN5Print11printNumberEmh>
    499c:	01 c0       	rjmp	.+2      	; 0x49a0 <_ZN5Print5printEli+0x5e>
    499e:	57 df       	rcall	.-338    	; 0x484e <_ZN5Print11printNumberEmh>
    49a0:	df 91       	pop	r29
    49a2:	cf 91       	pop	r28
    49a4:	1f 91       	pop	r17
    49a6:	0f 91       	pop	r16
    49a8:	ff 90       	pop	r15
    49aa:	ef 90       	pop	r14
    49ac:	df 90       	pop	r13
    49ae:	cf 90       	pop	r12
    49b0:	08 95       	ret

000049b2 <_ZN5Print7printlnEii>:
    49b2:	0f 93       	push	r16
    49b4:	1f 93       	push	r17
    49b6:	cf 93       	push	r28
    49b8:	df 93       	push	r29
    49ba:	ec 01       	movw	r28, r24
    49bc:	9a 01       	movw	r18, r20
    49be:	ab 01       	movw	r20, r22
    49c0:	66 27       	eor	r22, r22
    49c2:	57 fd       	sbrc	r21, 7
    49c4:	60 95       	com	r22
    49c6:	76 2f       	mov	r23, r22
    49c8:	bc df       	rcall	.-136    	; 0x4942 <_ZN5Print5printEli>
    49ca:	8c 01       	movw	r16, r24
    49cc:	ce 01       	movw	r24, r28
    49ce:	1d df       	rcall	.-454    	; 0x480a <_ZN5Print7printlnEv>
    49d0:	80 0f       	add	r24, r16
    49d2:	91 1f       	adc	r25, r17
    49d4:	df 91       	pop	r29
    49d6:	cf 91       	pop	r28
    49d8:	1f 91       	pop	r17
    49da:	0f 91       	pop	r16
    49dc:	08 95       	ret

000049de <__vector_23>:
    49de:	1f 92       	push	r1
    49e0:	0f 92       	push	r0
    49e2:	0f b6       	in	r0, 0x3f	; 63
    49e4:	0f 92       	push	r0
    49e6:	11 24       	eor	r1, r1
    49e8:	2f 93       	push	r18
    49ea:	3f 93       	push	r19
    49ec:	8f 93       	push	r24
    49ee:	9f 93       	push	r25
    49f0:	af 93       	push	r26
    49f2:	bf 93       	push	r27
    49f4:	80 91 f0 11 	lds	r24, 0x11F0
    49f8:	90 91 f1 11 	lds	r25, 0x11F1
    49fc:	a0 91 f2 11 	lds	r26, 0x11F2
    4a00:	b0 91 f3 11 	lds	r27, 0x11F3
    4a04:	30 91 ef 11 	lds	r19, 0x11EF
    4a08:	23 e0       	ldi	r18, 0x03	; 3
    4a0a:	23 0f       	add	r18, r19
    4a0c:	2d 37       	cpi	r18, 0x7D	; 125
    4a0e:	20 f4       	brcc	.+8      	; 0x4a18 <__vector_23+0x3a>
    4a10:	01 96       	adiw	r24, 0x01	; 1
    4a12:	a1 1d       	adc	r26, r1
    4a14:	b1 1d       	adc	r27, r1
    4a16:	05 c0       	rjmp	.+10     	; 0x4a22 <__vector_23+0x44>
    4a18:	26 e8       	ldi	r18, 0x86	; 134
    4a1a:	23 0f       	add	r18, r19
    4a1c:	02 96       	adiw	r24, 0x02	; 2
    4a1e:	a1 1d       	adc	r26, r1
    4a20:	b1 1d       	adc	r27, r1
    4a22:	20 93 ef 11 	sts	0x11EF, r18
    4a26:	80 93 f0 11 	sts	0x11F0, r24
    4a2a:	90 93 f1 11 	sts	0x11F1, r25
    4a2e:	a0 93 f2 11 	sts	0x11F2, r26
    4a32:	b0 93 f3 11 	sts	0x11F3, r27
    4a36:	80 91 f4 11 	lds	r24, 0x11F4
    4a3a:	90 91 f5 11 	lds	r25, 0x11F5
    4a3e:	a0 91 f6 11 	lds	r26, 0x11F6
    4a42:	b0 91 f7 11 	lds	r27, 0x11F7
    4a46:	01 96       	adiw	r24, 0x01	; 1
    4a48:	a1 1d       	adc	r26, r1
    4a4a:	b1 1d       	adc	r27, r1
    4a4c:	80 93 f4 11 	sts	0x11F4, r24
    4a50:	90 93 f5 11 	sts	0x11F5, r25
    4a54:	a0 93 f6 11 	sts	0x11F6, r26
    4a58:	b0 93 f7 11 	sts	0x11F7, r27
    4a5c:	bf 91       	pop	r27
    4a5e:	af 91       	pop	r26
    4a60:	9f 91       	pop	r25
    4a62:	8f 91       	pop	r24
    4a64:	3f 91       	pop	r19
    4a66:	2f 91       	pop	r18
    4a68:	0f 90       	pop	r0
    4a6a:	0f be       	out	0x3f, r0	; 63
    4a6c:	0f 90       	pop	r0
    4a6e:	1f 90       	pop	r1
    4a70:	18 95       	reti

00004a72 <millis>:
    4a72:	2f b7       	in	r18, 0x3f	; 63
    4a74:	f8 94       	cli
    4a76:	60 91 f0 11 	lds	r22, 0x11F0
    4a7a:	70 91 f1 11 	lds	r23, 0x11F1
    4a7e:	80 91 f2 11 	lds	r24, 0x11F2
    4a82:	90 91 f3 11 	lds	r25, 0x11F3
    4a86:	2f bf       	out	0x3f, r18	; 63
    4a88:	08 95       	ret

00004a8a <micros>:
    4a8a:	3f b7       	in	r19, 0x3f	; 63
    4a8c:	f8 94       	cli
    4a8e:	80 91 f4 11 	lds	r24, 0x11F4
    4a92:	90 91 f5 11 	lds	r25, 0x11F5
    4a96:	a0 91 f6 11 	lds	r26, 0x11F6
    4a9a:	b0 91 f7 11 	lds	r27, 0x11F7
    4a9e:	26 b5       	in	r18, 0x26	; 38
    4aa0:	a8 9b       	sbis	0x15, 0	; 21
    4aa2:	05 c0       	rjmp	.+10     	; 0x4aae <micros+0x24>
    4aa4:	2f 3f       	cpi	r18, 0xFF	; 255
    4aa6:	19 f0       	breq	.+6      	; 0x4aae <micros+0x24>
    4aa8:	01 96       	adiw	r24, 0x01	; 1
    4aaa:	a1 1d       	adc	r26, r1
    4aac:	b1 1d       	adc	r27, r1
    4aae:	3f bf       	out	0x3f, r19	; 63
    4ab0:	ba 2f       	mov	r27, r26
    4ab2:	a9 2f       	mov	r26, r25
    4ab4:	98 2f       	mov	r25, r24
    4ab6:	88 27       	eor	r24, r24
    4ab8:	82 0f       	add	r24, r18
    4aba:	91 1d       	adc	r25, r1
    4abc:	a1 1d       	adc	r26, r1
    4abe:	b1 1d       	adc	r27, r1
    4ac0:	bc 01       	movw	r22, r24
    4ac2:	cd 01       	movw	r24, r26
    4ac4:	66 0f       	add	r22, r22
    4ac6:	77 1f       	adc	r23, r23
    4ac8:	88 1f       	adc	r24, r24
    4aca:	99 1f       	adc	r25, r25
    4acc:	66 0f       	add	r22, r22
    4ace:	77 1f       	adc	r23, r23
    4ad0:	88 1f       	adc	r24, r24
    4ad2:	99 1f       	adc	r25, r25
    4ad4:	08 95       	ret

00004ad6 <delay>:
    4ad6:	cf 92       	push	r12
    4ad8:	df 92       	push	r13
    4ada:	ef 92       	push	r14
    4adc:	ff 92       	push	r15
    4ade:	cf 93       	push	r28
    4ae0:	df 93       	push	r29
    4ae2:	6b 01       	movw	r12, r22
    4ae4:	7c 01       	movw	r14, r24
    4ae6:	d1 df       	rcall	.-94     	; 0x4a8a <micros>
    4ae8:	eb 01       	movw	r28, r22
    4aea:	c1 14       	cp	r12, r1
    4aec:	d1 04       	cpc	r13, r1
    4aee:	e1 04       	cpc	r14, r1
    4af0:	f1 04       	cpc	r15, r1
    4af2:	91 f0       	breq	.+36     	; 0x4b18 <delay+0x42>
    4af4:	ca df       	rcall	.-108    	; 0x4a8a <micros>
    4af6:	6c 1b       	sub	r22, r28
    4af8:	7d 0b       	sbc	r23, r29
    4afa:	68 3e       	cpi	r22, 0xE8	; 232
    4afc:	73 40       	sbci	r23, 0x03	; 3
    4afe:	38 f0       	brcs	.+14     	; 0x4b0e <delay+0x38>
    4b00:	81 e0       	ldi	r24, 0x01	; 1
    4b02:	c8 1a       	sub	r12, r24
    4b04:	d1 08       	sbc	r13, r1
    4b06:	e1 08       	sbc	r14, r1
    4b08:	f1 08       	sbc	r15, r1
    4b0a:	c8 51       	subi	r28, 0x18	; 24
    4b0c:	dc 4f       	sbci	r29, 0xFC	; 252
    4b0e:	c1 14       	cp	r12, r1
    4b10:	d1 04       	cpc	r13, r1
    4b12:	e1 04       	cpc	r14, r1
    4b14:	f1 04       	cpc	r15, r1
    4b16:	71 f7       	brne	.-36     	; 0x4af4 <delay+0x1e>
    4b18:	df 91       	pop	r29
    4b1a:	cf 91       	pop	r28
    4b1c:	ff 90       	pop	r15
    4b1e:	ef 90       	pop	r14
    4b20:	df 90       	pop	r13
    4b22:	cf 90       	pop	r12
    4b24:	08 95       	ret

00004b26 <init>:
    4b26:	78 94       	sei
    4b28:	84 b5       	in	r24, 0x24	; 36
    4b2a:	82 60       	ori	r24, 0x02	; 2
    4b2c:	84 bd       	out	0x24, r24	; 36
    4b2e:	84 b5       	in	r24, 0x24	; 36
    4b30:	81 60       	ori	r24, 0x01	; 1
    4b32:	84 bd       	out	0x24, r24	; 36
    4b34:	85 b5       	in	r24, 0x25	; 37
    4b36:	82 60       	ori	r24, 0x02	; 2
    4b38:	85 bd       	out	0x25, r24	; 37
    4b3a:	85 b5       	in	r24, 0x25	; 37
    4b3c:	81 60       	ori	r24, 0x01	; 1
    4b3e:	85 bd       	out	0x25, r24	; 37
    4b40:	ee e6       	ldi	r30, 0x6E	; 110
    4b42:	f0 e0       	ldi	r31, 0x00	; 0
    4b44:	80 81       	ld	r24, Z
    4b46:	81 60       	ori	r24, 0x01	; 1
    4b48:	80 83       	st	Z, r24
    4b4a:	e1 e8       	ldi	r30, 0x81	; 129
    4b4c:	f0 e0       	ldi	r31, 0x00	; 0
    4b4e:	10 82       	st	Z, r1
    4b50:	80 81       	ld	r24, Z
    4b52:	82 60       	ori	r24, 0x02	; 2
    4b54:	80 83       	st	Z, r24
    4b56:	80 81       	ld	r24, Z
    4b58:	81 60       	ori	r24, 0x01	; 1
    4b5a:	80 83       	st	Z, r24
    4b5c:	e0 e8       	ldi	r30, 0x80	; 128
    4b5e:	f0 e0       	ldi	r31, 0x00	; 0
    4b60:	80 81       	ld	r24, Z
    4b62:	81 60       	ori	r24, 0x01	; 1
    4b64:	80 83       	st	Z, r24
    4b66:	e1 eb       	ldi	r30, 0xB1	; 177
    4b68:	f0 e0       	ldi	r31, 0x00	; 0
    4b6a:	80 81       	ld	r24, Z
    4b6c:	84 60       	ori	r24, 0x04	; 4
    4b6e:	80 83       	st	Z, r24
    4b70:	e0 eb       	ldi	r30, 0xB0	; 176
    4b72:	f0 e0       	ldi	r31, 0x00	; 0
    4b74:	80 81       	ld	r24, Z
    4b76:	81 60       	ori	r24, 0x01	; 1
    4b78:	80 83       	st	Z, r24
    4b7a:	e1 e9       	ldi	r30, 0x91	; 145
    4b7c:	f0 e0       	ldi	r31, 0x00	; 0
    4b7e:	80 81       	ld	r24, Z
    4b80:	82 60       	ori	r24, 0x02	; 2
    4b82:	80 83       	st	Z, r24
    4b84:	80 81       	ld	r24, Z
    4b86:	81 60       	ori	r24, 0x01	; 1
    4b88:	80 83       	st	Z, r24
    4b8a:	e0 e9       	ldi	r30, 0x90	; 144
    4b8c:	f0 e0       	ldi	r31, 0x00	; 0
    4b8e:	80 81       	ld	r24, Z
    4b90:	81 60       	ori	r24, 0x01	; 1
    4b92:	80 83       	st	Z, r24
    4b94:	e1 ea       	ldi	r30, 0xA1	; 161
    4b96:	f0 e0       	ldi	r31, 0x00	; 0
    4b98:	80 81       	ld	r24, Z
    4b9a:	82 60       	ori	r24, 0x02	; 2
    4b9c:	80 83       	st	Z, r24
    4b9e:	80 81       	ld	r24, Z
    4ba0:	81 60       	ori	r24, 0x01	; 1
    4ba2:	80 83       	st	Z, r24
    4ba4:	e0 ea       	ldi	r30, 0xA0	; 160
    4ba6:	f0 e0       	ldi	r31, 0x00	; 0
    4ba8:	80 81       	ld	r24, Z
    4baa:	81 60       	ori	r24, 0x01	; 1
    4bac:	80 83       	st	Z, r24
    4bae:	e1 e2       	ldi	r30, 0x21	; 33
    4bb0:	f1 e0       	ldi	r31, 0x01	; 1
    4bb2:	80 81       	ld	r24, Z
    4bb4:	82 60       	ori	r24, 0x02	; 2
    4bb6:	80 83       	st	Z, r24
    4bb8:	80 81       	ld	r24, Z
    4bba:	81 60       	ori	r24, 0x01	; 1
    4bbc:	80 83       	st	Z, r24
    4bbe:	e0 e2       	ldi	r30, 0x20	; 32
    4bc0:	f1 e0       	ldi	r31, 0x01	; 1
    4bc2:	80 81       	ld	r24, Z
    4bc4:	81 60       	ori	r24, 0x01	; 1
    4bc6:	80 83       	st	Z, r24
    4bc8:	ea e7       	ldi	r30, 0x7A	; 122
    4bca:	f0 e0       	ldi	r31, 0x00	; 0
    4bcc:	80 81       	ld	r24, Z
    4bce:	84 60       	ori	r24, 0x04	; 4
    4bd0:	80 83       	st	Z, r24
    4bd2:	80 81       	ld	r24, Z
    4bd4:	82 60       	ori	r24, 0x02	; 2
    4bd6:	80 83       	st	Z, r24
    4bd8:	80 81       	ld	r24, Z
    4bda:	81 60       	ori	r24, 0x01	; 1
    4bdc:	80 83       	st	Z, r24
    4bde:	80 81       	ld	r24, Z
    4be0:	80 68       	ori	r24, 0x80	; 128
    4be2:	80 83       	st	Z, r24
    4be4:	10 92 c1 00 	sts	0x00C1, r1
    4be8:	08 95       	ret

00004bea <turnOffPWM>:
    4bea:	90 e0       	ldi	r25, 0x00	; 0
    4bec:	fc 01       	movw	r30, r24
    4bee:	31 97       	sbiw	r30, 0x01	; 1
    4bf0:	e1 31       	cpi	r30, 0x11	; 17
    4bf2:	f1 05       	cpc	r31, r1
    4bf4:	08 f0       	brcs	.+2      	; 0x4bf8 <turnOffPWM+0xe>
    4bf6:	58 c0       	rjmp	.+176    	; 0x4ca8 <turnOffPWM+0xbe>
    4bf8:	e1 58       	subi	r30, 0x81	; 129
    4bfa:	fe 4f       	sbci	r31, 0xFE	; 254
    4bfc:	b7 c0       	rjmp	.+366    	; 0x4d6c <__tablejump2__>
    4bfe:	e0 e8       	ldi	r30, 0x80	; 128
    4c00:	f0 e0       	ldi	r31, 0x00	; 0
    4c02:	80 81       	ld	r24, Z
    4c04:	8f 77       	andi	r24, 0x7F	; 127
    4c06:	80 83       	st	Z, r24
    4c08:	08 95       	ret
    4c0a:	e0 e8       	ldi	r30, 0x80	; 128
    4c0c:	f0 e0       	ldi	r31, 0x00	; 0
    4c0e:	80 81       	ld	r24, Z
    4c10:	8f 7d       	andi	r24, 0xDF	; 223
    4c12:	80 83       	st	Z, r24
    4c14:	08 95       	ret
    4c16:	84 b5       	in	r24, 0x24	; 36
    4c18:	8f 77       	andi	r24, 0x7F	; 127
    4c1a:	84 bd       	out	0x24, r24	; 36
    4c1c:	08 95       	ret
    4c1e:	84 b5       	in	r24, 0x24	; 36
    4c20:	8f 7d       	andi	r24, 0xDF	; 223
    4c22:	84 bd       	out	0x24, r24	; 36
    4c24:	08 95       	ret
    4c26:	e0 eb       	ldi	r30, 0xB0	; 176
    4c28:	f0 e0       	ldi	r31, 0x00	; 0
    4c2a:	80 81       	ld	r24, Z
    4c2c:	8f 77       	andi	r24, 0x7F	; 127
    4c2e:	80 83       	st	Z, r24
    4c30:	08 95       	ret
    4c32:	e0 eb       	ldi	r30, 0xB0	; 176
    4c34:	f0 e0       	ldi	r31, 0x00	; 0
    4c36:	80 81       	ld	r24, Z
    4c38:	8f 7d       	andi	r24, 0xDF	; 223
    4c3a:	80 83       	st	Z, r24
    4c3c:	08 95       	ret
    4c3e:	e0 e9       	ldi	r30, 0x90	; 144
    4c40:	f0 e0       	ldi	r31, 0x00	; 0
    4c42:	80 81       	ld	r24, Z
    4c44:	8f 77       	andi	r24, 0x7F	; 127
    4c46:	80 83       	st	Z, r24
    4c48:	08 95       	ret
    4c4a:	e0 e9       	ldi	r30, 0x90	; 144
    4c4c:	f0 e0       	ldi	r31, 0x00	; 0
    4c4e:	80 81       	ld	r24, Z
    4c50:	8f 7d       	andi	r24, 0xDF	; 223
    4c52:	80 83       	st	Z, r24
    4c54:	08 95       	ret
    4c56:	e0 e9       	ldi	r30, 0x90	; 144
    4c58:	f0 e0       	ldi	r31, 0x00	; 0
    4c5a:	80 81       	ld	r24, Z
    4c5c:	87 7f       	andi	r24, 0xF7	; 247
    4c5e:	80 83       	st	Z, r24
    4c60:	08 95       	ret
    4c62:	e0 ea       	ldi	r30, 0xA0	; 160
    4c64:	f0 e0       	ldi	r31, 0x00	; 0
    4c66:	80 81       	ld	r24, Z
    4c68:	8f 77       	andi	r24, 0x7F	; 127
    4c6a:	80 83       	st	Z, r24
    4c6c:	08 95       	ret
    4c6e:	e0 ea       	ldi	r30, 0xA0	; 160
    4c70:	f0 e0       	ldi	r31, 0x00	; 0
    4c72:	80 81       	ld	r24, Z
    4c74:	8f 7d       	andi	r24, 0xDF	; 223
    4c76:	80 83       	st	Z, r24
    4c78:	08 95       	ret
    4c7a:	e0 ea       	ldi	r30, 0xA0	; 160
    4c7c:	f0 e0       	ldi	r31, 0x00	; 0
    4c7e:	80 81       	ld	r24, Z
    4c80:	87 7f       	andi	r24, 0xF7	; 247
    4c82:	80 83       	st	Z, r24
    4c84:	08 95       	ret
    4c86:	e0 e2       	ldi	r30, 0x20	; 32
    4c88:	f1 e0       	ldi	r31, 0x01	; 1
    4c8a:	80 81       	ld	r24, Z
    4c8c:	8f 77       	andi	r24, 0x7F	; 127
    4c8e:	80 83       	st	Z, r24
    4c90:	08 95       	ret
    4c92:	e0 e2       	ldi	r30, 0x20	; 32
    4c94:	f1 e0       	ldi	r31, 0x01	; 1
    4c96:	80 81       	ld	r24, Z
    4c98:	8f 7d       	andi	r24, 0xDF	; 223
    4c9a:	80 83       	st	Z, r24
    4c9c:	08 95       	ret
    4c9e:	e0 e2       	ldi	r30, 0x20	; 32
    4ca0:	f1 e0       	ldi	r31, 0x01	; 1
    4ca2:	80 81       	ld	r24, Z
    4ca4:	87 7f       	andi	r24, 0xF7	; 247
    4ca6:	80 83       	st	Z, r24
    4ca8:	08 95       	ret

00004caa <digitalWrite>:
    4caa:	1f 93       	push	r17
    4cac:	cf 93       	push	r28
    4cae:	df 93       	push	r29
    4cb0:	c6 2f       	mov	r28, r22
    4cb2:	28 2f       	mov	r18, r24
    4cb4:	30 e0       	ldi	r19, 0x00	; 0
    4cb6:	f9 01       	movw	r30, r18
    4cb8:	e0 5e       	subi	r30, 0xE0	; 224
    4cba:	fc 4f       	sbci	r31, 0xFC	; 252
    4cbc:	84 91       	lpm	r24, Z
    4cbe:	f9 01       	movw	r30, r18
    4cc0:	ea 59       	subi	r30, 0x9A	; 154
    4cc2:	fc 4f       	sbci	r31, 0xFC	; 252
    4cc4:	14 91       	lpm	r17, Z
    4cc6:	f9 01       	movw	r30, r18
    4cc8:	e4 55       	subi	r30, 0x54	; 84
    4cca:	fc 4f       	sbci	r31, 0xFC	; 252
    4ccc:	d4 91       	lpm	r29, Z
    4cce:	dd 23       	and	r29, r29
    4cd0:	c1 f0       	breq	.+48     	; 0x4d02 <digitalWrite+0x58>
    4cd2:	81 11       	cpse	r24, r1
    4cd4:	8a df       	rcall	.-236    	; 0x4bea <turnOffPWM>
    4cd6:	2d 2f       	mov	r18, r29
    4cd8:	30 e0       	ldi	r19, 0x00	; 0
    4cda:	f9 01       	movw	r30, r18
    4cdc:	ee 0f       	add	r30, r30
    4cde:	ff 1f       	adc	r31, r31
    4ce0:	e4 5f       	subi	r30, 0xF4	; 244
    4ce2:	fb 4f       	sbci	r31, 0xFB	; 251
    4ce4:	a5 91       	lpm	r26, Z+
    4ce6:	b4 91       	lpm	r27, Z
    4ce8:	8f b7       	in	r24, 0x3f	; 63
    4cea:	f8 94       	cli
    4cec:	c1 11       	cpse	r28, r1
    4cee:	05 c0       	rjmp	.+10     	; 0x4cfa <digitalWrite+0x50>
    4cf0:	ec 91       	ld	r30, X
    4cf2:	10 95       	com	r17
    4cf4:	1e 23       	and	r17, r30
    4cf6:	1c 93       	st	X, r17
    4cf8:	03 c0       	rjmp	.+6      	; 0x4d00 <digitalWrite+0x56>
    4cfa:	ec 91       	ld	r30, X
    4cfc:	1e 2b       	or	r17, r30
    4cfe:	1c 93       	st	X, r17
    4d00:	8f bf       	out	0x3f, r24	; 63
    4d02:	df 91       	pop	r29
    4d04:	cf 91       	pop	r28
    4d06:	1f 91       	pop	r17
    4d08:	08 95       	ret

00004d0a <__mulsi3>:
    4d0a:	db 01       	movw	r26, r22
    4d0c:	8f 93       	push	r24
    4d0e:	9f 93       	push	r25
    4d10:	42 d0       	rcall	.+132    	; 0x4d96 <__muluhisi3>
    4d12:	bf 91       	pop	r27
    4d14:	af 91       	pop	r26
    4d16:	a2 9f       	mul	r26, r18
    4d18:	80 0d       	add	r24, r0
    4d1a:	91 1d       	adc	r25, r1
    4d1c:	a3 9f       	mul	r26, r19
    4d1e:	90 0d       	add	r25, r0
    4d20:	b2 9f       	mul	r27, r18
    4d22:	90 0d       	add	r25, r0
    4d24:	11 24       	eor	r1, r1
    4d26:	08 95       	ret

00004d28 <__udivmodsi4>:
    4d28:	a1 e2       	ldi	r26, 0x21	; 33
    4d2a:	1a 2e       	mov	r1, r26
    4d2c:	aa 1b       	sub	r26, r26
    4d2e:	bb 1b       	sub	r27, r27
    4d30:	fd 01       	movw	r30, r26
    4d32:	0d c0       	rjmp	.+26     	; 0x4d4e <__udivmodsi4_ep>

00004d34 <__udivmodsi4_loop>:
    4d34:	aa 1f       	adc	r26, r26
    4d36:	bb 1f       	adc	r27, r27
    4d38:	ee 1f       	adc	r30, r30
    4d3a:	ff 1f       	adc	r31, r31
    4d3c:	a2 17       	cp	r26, r18
    4d3e:	b3 07       	cpc	r27, r19
    4d40:	e4 07       	cpc	r30, r20
    4d42:	f5 07       	cpc	r31, r21
    4d44:	20 f0       	brcs	.+8      	; 0x4d4e <__udivmodsi4_ep>
    4d46:	a2 1b       	sub	r26, r18
    4d48:	b3 0b       	sbc	r27, r19
    4d4a:	e4 0b       	sbc	r30, r20
    4d4c:	f5 0b       	sbc	r31, r21

00004d4e <__udivmodsi4_ep>:
    4d4e:	66 1f       	adc	r22, r22
    4d50:	77 1f       	adc	r23, r23
    4d52:	88 1f       	adc	r24, r24
    4d54:	99 1f       	adc	r25, r25
    4d56:	1a 94       	dec	r1
    4d58:	69 f7       	brne	.-38     	; 0x4d34 <__udivmodsi4_loop>
    4d5a:	60 95       	com	r22
    4d5c:	70 95       	com	r23
    4d5e:	80 95       	com	r24
    4d60:	90 95       	com	r25
    4d62:	9b 01       	movw	r18, r22
    4d64:	ac 01       	movw	r20, r24
    4d66:	bd 01       	movw	r22, r26
    4d68:	cf 01       	movw	r24, r30
    4d6a:	08 95       	ret

00004d6c <__tablejump2__>:
    4d6c:	ee 0f       	add	r30, r30
    4d6e:	ff 1f       	adc	r31, r31

00004d70 <__tablejump__>:
    4d70:	05 90       	lpm	r0, Z+
    4d72:	f4 91       	lpm	r31, Z
    4d74:	e0 2d       	mov	r30, r0
    4d76:	19 94       	eijmp

00004d78 <__umulhisi3>:
    4d78:	a2 9f       	mul	r26, r18
    4d7a:	b0 01       	movw	r22, r0
    4d7c:	b3 9f       	mul	r27, r19
    4d7e:	c0 01       	movw	r24, r0
    4d80:	a3 9f       	mul	r26, r19
    4d82:	70 0d       	add	r23, r0
    4d84:	81 1d       	adc	r24, r1
    4d86:	11 24       	eor	r1, r1
    4d88:	91 1d       	adc	r25, r1
    4d8a:	b2 9f       	mul	r27, r18
    4d8c:	70 0d       	add	r23, r0
    4d8e:	81 1d       	adc	r24, r1
    4d90:	11 24       	eor	r1, r1
    4d92:	91 1d       	adc	r25, r1
    4d94:	08 95       	ret

00004d96 <__muluhisi3>:
    4d96:	f0 df       	rcall	.-32     	; 0x4d78 <__umulhisi3>
    4d98:	a5 9f       	mul	r26, r21
    4d9a:	90 0d       	add	r25, r0
    4d9c:	b4 9f       	mul	r27, r20
    4d9e:	90 0d       	add	r25, r0
    4da0:	a4 9f       	mul	r26, r20
    4da2:	80 0d       	add	r24, r0
    4da4:	91 1d       	adc	r25, r1
    4da6:	11 24       	eor	r1, r1
    4da8:	08 95       	ret

00004daa <__tablejump_elpm__>:
    4daa:	07 90       	elpm	r0, Z+
    4dac:	f6 91       	elpm	r31, Z
    4dae:	e0 2d       	mov	r30, r0
    4db0:	19 94       	eijmp

00004db2 <vsprintf>:
    4db2:	0f 93       	push	r16
    4db4:	1f 93       	push	r17
    4db6:	cf 93       	push	r28
    4db8:	df 93       	push	r29
    4dba:	cd b7       	in	r28, 0x3d	; 61
    4dbc:	de b7       	in	r29, 0x3e	; 62
    4dbe:	2e 97       	sbiw	r28, 0x0e	; 14
    4dc0:	0f b6       	in	r0, 0x3f	; 63
    4dc2:	f8 94       	cli
    4dc4:	de bf       	out	0x3e, r29	; 62
    4dc6:	0f be       	out	0x3f, r0	; 63
    4dc8:	cd bf       	out	0x3d, r28	; 61
    4dca:	8c 01       	movw	r16, r24
    4dcc:	86 e0       	ldi	r24, 0x06	; 6
    4dce:	8c 83       	std	Y+4, r24	; 0x04
    4dd0:	1a 83       	std	Y+2, r17	; 0x02
    4dd2:	09 83       	std	Y+1, r16	; 0x01
    4dd4:	8f ef       	ldi	r24, 0xFF	; 255
    4dd6:	9f e7       	ldi	r25, 0x7F	; 127
    4dd8:	9e 83       	std	Y+6, r25	; 0x06
    4dda:	8d 83       	std	Y+5, r24	; 0x05
    4ddc:	ce 01       	movw	r24, r28
    4dde:	01 96       	adiw	r24, 0x01	; 1
    4de0:	10 d0       	rcall	.+32     	; 0x4e02 <vfprintf>
    4de2:	ef 81       	ldd	r30, Y+7	; 0x07
    4de4:	f8 85       	ldd	r31, Y+8	; 0x08
    4de6:	e0 0f       	add	r30, r16
    4de8:	f1 1f       	adc	r31, r17
    4dea:	10 82       	st	Z, r1
    4dec:	2e 96       	adiw	r28, 0x0e	; 14
    4dee:	0f b6       	in	r0, 0x3f	; 63
    4df0:	f8 94       	cli
    4df2:	de bf       	out	0x3e, r29	; 62
    4df4:	0f be       	out	0x3f, r0	; 63
    4df6:	cd bf       	out	0x3d, r28	; 61
    4df8:	df 91       	pop	r29
    4dfa:	cf 91       	pop	r28
    4dfc:	1f 91       	pop	r17
    4dfe:	0f 91       	pop	r16
    4e00:	08 95       	ret

00004e02 <vfprintf>:
    4e02:	2f 92       	push	r2
    4e04:	3f 92       	push	r3
    4e06:	4f 92       	push	r4
    4e08:	5f 92       	push	r5
    4e0a:	6f 92       	push	r6
    4e0c:	7f 92       	push	r7
    4e0e:	8f 92       	push	r8
    4e10:	9f 92       	push	r9
    4e12:	af 92       	push	r10
    4e14:	bf 92       	push	r11
    4e16:	cf 92       	push	r12
    4e18:	df 92       	push	r13
    4e1a:	ef 92       	push	r14
    4e1c:	ff 92       	push	r15
    4e1e:	0f 93       	push	r16
    4e20:	1f 93       	push	r17
    4e22:	cf 93       	push	r28
    4e24:	df 93       	push	r29
    4e26:	cd b7       	in	r28, 0x3d	; 61
    4e28:	de b7       	in	r29, 0x3e	; 62
    4e2a:	2c 97       	sbiw	r28, 0x0c	; 12
    4e2c:	0f b6       	in	r0, 0x3f	; 63
    4e2e:	f8 94       	cli
    4e30:	de bf       	out	0x3e, r29	; 62
    4e32:	0f be       	out	0x3f, r0	; 63
    4e34:	cd bf       	out	0x3d, r28	; 61
    4e36:	7c 01       	movw	r14, r24
    4e38:	6b 01       	movw	r12, r22
    4e3a:	8a 01       	movw	r16, r20
    4e3c:	fc 01       	movw	r30, r24
    4e3e:	17 82       	std	Z+7, r1	; 0x07
    4e40:	16 82       	std	Z+6, r1	; 0x06
    4e42:	83 81       	ldd	r24, Z+3	; 0x03
    4e44:	81 ff       	sbrs	r24, 1
    4e46:	b0 c1       	rjmp	.+864    	; 0x51a8 <vfprintf+0x3a6>
    4e48:	ce 01       	movw	r24, r28
    4e4a:	01 96       	adiw	r24, 0x01	; 1
    4e4c:	4c 01       	movw	r8, r24
    4e4e:	f7 01       	movw	r30, r14
    4e50:	93 81       	ldd	r25, Z+3	; 0x03
    4e52:	f6 01       	movw	r30, r12
    4e54:	93 fd       	sbrc	r25, 3
    4e56:	85 91       	lpm	r24, Z+
    4e58:	93 ff       	sbrs	r25, 3
    4e5a:	81 91       	ld	r24, Z+
    4e5c:	6f 01       	movw	r12, r30
    4e5e:	88 23       	and	r24, r24
    4e60:	09 f4       	brne	.+2      	; 0x4e64 <vfprintf+0x62>
    4e62:	9e c1       	rjmp	.+828    	; 0x51a0 <vfprintf+0x39e>
    4e64:	85 32       	cpi	r24, 0x25	; 37
    4e66:	39 f4       	brne	.+14     	; 0x4e76 <vfprintf+0x74>
    4e68:	93 fd       	sbrc	r25, 3
    4e6a:	85 91       	lpm	r24, Z+
    4e6c:	93 ff       	sbrs	r25, 3
    4e6e:	81 91       	ld	r24, Z+
    4e70:	6f 01       	movw	r12, r30
    4e72:	85 32       	cpi	r24, 0x25	; 37
    4e74:	21 f4       	brne	.+8      	; 0x4e7e <vfprintf+0x7c>
    4e76:	b7 01       	movw	r22, r14
    4e78:	90 e0       	ldi	r25, 0x00	; 0
    4e7a:	c7 d1       	rcall	.+910    	; 0x520a <fputc>
    4e7c:	e8 cf       	rjmp	.-48     	; 0x4e4e <vfprintf+0x4c>
    4e7e:	51 2c       	mov	r5, r1
    4e80:	31 2c       	mov	r3, r1
    4e82:	20 e0       	ldi	r18, 0x00	; 0
    4e84:	20 32       	cpi	r18, 0x20	; 32
    4e86:	a0 f4       	brcc	.+40     	; 0x4eb0 <vfprintf+0xae>
    4e88:	8b 32       	cpi	r24, 0x2B	; 43
    4e8a:	69 f0       	breq	.+26     	; 0x4ea6 <vfprintf+0xa4>
    4e8c:	30 f4       	brcc	.+12     	; 0x4e9a <vfprintf+0x98>
    4e8e:	80 32       	cpi	r24, 0x20	; 32
    4e90:	59 f0       	breq	.+22     	; 0x4ea8 <vfprintf+0xa6>
    4e92:	83 32       	cpi	r24, 0x23	; 35
    4e94:	69 f4       	brne	.+26     	; 0x4eb0 <vfprintf+0xae>
    4e96:	20 61       	ori	r18, 0x10	; 16
    4e98:	2c c0       	rjmp	.+88     	; 0x4ef2 <vfprintf+0xf0>
    4e9a:	8d 32       	cpi	r24, 0x2D	; 45
    4e9c:	39 f0       	breq	.+14     	; 0x4eac <vfprintf+0xaa>
    4e9e:	80 33       	cpi	r24, 0x30	; 48
    4ea0:	39 f4       	brne	.+14     	; 0x4eb0 <vfprintf+0xae>
    4ea2:	21 60       	ori	r18, 0x01	; 1
    4ea4:	26 c0       	rjmp	.+76     	; 0x4ef2 <vfprintf+0xf0>
    4ea6:	22 60       	ori	r18, 0x02	; 2
    4ea8:	24 60       	ori	r18, 0x04	; 4
    4eaa:	23 c0       	rjmp	.+70     	; 0x4ef2 <vfprintf+0xf0>
    4eac:	28 60       	ori	r18, 0x08	; 8
    4eae:	21 c0       	rjmp	.+66     	; 0x4ef2 <vfprintf+0xf0>
    4eb0:	27 fd       	sbrc	r18, 7
    4eb2:	27 c0       	rjmp	.+78     	; 0x4f02 <vfprintf+0x100>
    4eb4:	30 ed       	ldi	r19, 0xD0	; 208
    4eb6:	38 0f       	add	r19, r24
    4eb8:	3a 30       	cpi	r19, 0x0A	; 10
    4eba:	78 f4       	brcc	.+30     	; 0x4eda <vfprintf+0xd8>
    4ebc:	26 ff       	sbrs	r18, 6
    4ebe:	06 c0       	rjmp	.+12     	; 0x4ecc <vfprintf+0xca>
    4ec0:	fa e0       	ldi	r31, 0x0A	; 10
    4ec2:	5f 9e       	mul	r5, r31
    4ec4:	30 0d       	add	r19, r0
    4ec6:	11 24       	eor	r1, r1
    4ec8:	53 2e       	mov	r5, r19
    4eca:	13 c0       	rjmp	.+38     	; 0x4ef2 <vfprintf+0xf0>
    4ecc:	8a e0       	ldi	r24, 0x0A	; 10
    4ece:	38 9e       	mul	r3, r24
    4ed0:	30 0d       	add	r19, r0
    4ed2:	11 24       	eor	r1, r1
    4ed4:	33 2e       	mov	r3, r19
    4ed6:	20 62       	ori	r18, 0x20	; 32
    4ed8:	0c c0       	rjmp	.+24     	; 0x4ef2 <vfprintf+0xf0>
    4eda:	8e 32       	cpi	r24, 0x2E	; 46
    4edc:	21 f4       	brne	.+8      	; 0x4ee6 <vfprintf+0xe4>
    4ede:	26 fd       	sbrc	r18, 6
    4ee0:	5f c1       	rjmp	.+702    	; 0x51a0 <vfprintf+0x39e>
    4ee2:	20 64       	ori	r18, 0x40	; 64
    4ee4:	06 c0       	rjmp	.+12     	; 0x4ef2 <vfprintf+0xf0>
    4ee6:	8c 36       	cpi	r24, 0x6C	; 108
    4ee8:	11 f4       	brne	.+4      	; 0x4eee <vfprintf+0xec>
    4eea:	20 68       	ori	r18, 0x80	; 128
    4eec:	02 c0       	rjmp	.+4      	; 0x4ef2 <vfprintf+0xf0>
    4eee:	88 36       	cpi	r24, 0x68	; 104
    4ef0:	41 f4       	brne	.+16     	; 0x4f02 <vfprintf+0x100>
    4ef2:	f6 01       	movw	r30, r12
    4ef4:	93 fd       	sbrc	r25, 3
    4ef6:	85 91       	lpm	r24, Z+
    4ef8:	93 ff       	sbrs	r25, 3
    4efa:	81 91       	ld	r24, Z+
    4efc:	6f 01       	movw	r12, r30
    4efe:	81 11       	cpse	r24, r1
    4f00:	c1 cf       	rjmp	.-126    	; 0x4e84 <vfprintf+0x82>
    4f02:	98 2f       	mov	r25, r24
    4f04:	9f 7d       	andi	r25, 0xDF	; 223
    4f06:	95 54       	subi	r25, 0x45	; 69
    4f08:	93 30       	cpi	r25, 0x03	; 3
    4f0a:	28 f4       	brcc	.+10     	; 0x4f16 <vfprintf+0x114>
    4f0c:	0c 5f       	subi	r16, 0xFC	; 252
    4f0e:	1f 4f       	sbci	r17, 0xFF	; 255
    4f10:	ff e3       	ldi	r31, 0x3F	; 63
    4f12:	f9 83       	std	Y+1, r31	; 0x01
    4f14:	0d c0       	rjmp	.+26     	; 0x4f30 <vfprintf+0x12e>
    4f16:	83 36       	cpi	r24, 0x63	; 99
    4f18:	31 f0       	breq	.+12     	; 0x4f26 <vfprintf+0x124>
    4f1a:	83 37       	cpi	r24, 0x73	; 115
    4f1c:	71 f0       	breq	.+28     	; 0x4f3a <vfprintf+0x138>
    4f1e:	83 35       	cpi	r24, 0x53	; 83
    4f20:	09 f0       	breq	.+2      	; 0x4f24 <vfprintf+0x122>
    4f22:	57 c0       	rjmp	.+174    	; 0x4fd2 <vfprintf+0x1d0>
    4f24:	21 c0       	rjmp	.+66     	; 0x4f68 <vfprintf+0x166>
    4f26:	f8 01       	movw	r30, r16
    4f28:	80 81       	ld	r24, Z
    4f2a:	89 83       	std	Y+1, r24	; 0x01
    4f2c:	0e 5f       	subi	r16, 0xFE	; 254
    4f2e:	1f 4f       	sbci	r17, 0xFF	; 255
    4f30:	44 24       	eor	r4, r4
    4f32:	43 94       	inc	r4
    4f34:	51 2c       	mov	r5, r1
    4f36:	54 01       	movw	r10, r8
    4f38:	14 c0       	rjmp	.+40     	; 0x4f62 <vfprintf+0x160>
    4f3a:	38 01       	movw	r6, r16
    4f3c:	f2 e0       	ldi	r31, 0x02	; 2
    4f3e:	6f 0e       	add	r6, r31
    4f40:	71 1c       	adc	r7, r1
    4f42:	f8 01       	movw	r30, r16
    4f44:	a0 80       	ld	r10, Z
    4f46:	b1 80       	ldd	r11, Z+1	; 0x01
    4f48:	26 ff       	sbrs	r18, 6
    4f4a:	03 c0       	rjmp	.+6      	; 0x4f52 <vfprintf+0x150>
    4f4c:	65 2d       	mov	r22, r5
    4f4e:	70 e0       	ldi	r23, 0x00	; 0
    4f50:	02 c0       	rjmp	.+4      	; 0x4f56 <vfprintf+0x154>
    4f52:	6f ef       	ldi	r22, 0xFF	; 255
    4f54:	7f ef       	ldi	r23, 0xFF	; 255
    4f56:	c5 01       	movw	r24, r10
    4f58:	2c 87       	std	Y+12, r18	; 0x0c
    4f5a:	4c d1       	rcall	.+664    	; 0x51f4 <strnlen>
    4f5c:	2c 01       	movw	r4, r24
    4f5e:	83 01       	movw	r16, r6
    4f60:	2c 85       	ldd	r18, Y+12	; 0x0c
    4f62:	2f 77       	andi	r18, 0x7F	; 127
    4f64:	22 2e       	mov	r2, r18
    4f66:	16 c0       	rjmp	.+44     	; 0x4f94 <vfprintf+0x192>
    4f68:	38 01       	movw	r6, r16
    4f6a:	f2 e0       	ldi	r31, 0x02	; 2
    4f6c:	6f 0e       	add	r6, r31
    4f6e:	71 1c       	adc	r7, r1
    4f70:	f8 01       	movw	r30, r16
    4f72:	a0 80       	ld	r10, Z
    4f74:	b1 80       	ldd	r11, Z+1	; 0x01
    4f76:	26 ff       	sbrs	r18, 6
    4f78:	03 c0       	rjmp	.+6      	; 0x4f80 <vfprintf+0x17e>
    4f7a:	65 2d       	mov	r22, r5
    4f7c:	70 e0       	ldi	r23, 0x00	; 0
    4f7e:	02 c0       	rjmp	.+4      	; 0x4f84 <vfprintf+0x182>
    4f80:	6f ef       	ldi	r22, 0xFF	; 255
    4f82:	7f ef       	ldi	r23, 0xFF	; 255
    4f84:	c5 01       	movw	r24, r10
    4f86:	2c 87       	std	Y+12, r18	; 0x0c
    4f88:	2a d1       	rcall	.+596    	; 0x51de <strnlen_P>
    4f8a:	2c 01       	movw	r4, r24
    4f8c:	2c 85       	ldd	r18, Y+12	; 0x0c
    4f8e:	20 68       	ori	r18, 0x80	; 128
    4f90:	22 2e       	mov	r2, r18
    4f92:	83 01       	movw	r16, r6
    4f94:	23 fc       	sbrc	r2, 3
    4f96:	19 c0       	rjmp	.+50     	; 0x4fca <vfprintf+0x1c8>
    4f98:	83 2d       	mov	r24, r3
    4f9a:	90 e0       	ldi	r25, 0x00	; 0
    4f9c:	48 16       	cp	r4, r24
    4f9e:	59 06       	cpc	r5, r25
    4fa0:	a0 f4       	brcc	.+40     	; 0x4fca <vfprintf+0x1c8>
    4fa2:	b7 01       	movw	r22, r14
    4fa4:	80 e2       	ldi	r24, 0x20	; 32
    4fa6:	90 e0       	ldi	r25, 0x00	; 0
    4fa8:	30 d1       	rcall	.+608    	; 0x520a <fputc>
    4faa:	3a 94       	dec	r3
    4fac:	f5 cf       	rjmp	.-22     	; 0x4f98 <vfprintf+0x196>
    4fae:	f5 01       	movw	r30, r10
    4fb0:	27 fc       	sbrc	r2, 7
    4fb2:	85 91       	lpm	r24, Z+
    4fb4:	27 fe       	sbrs	r2, 7
    4fb6:	81 91       	ld	r24, Z+
    4fb8:	5f 01       	movw	r10, r30
    4fba:	b7 01       	movw	r22, r14
    4fbc:	90 e0       	ldi	r25, 0x00	; 0
    4fbe:	25 d1       	rcall	.+586    	; 0x520a <fputc>
    4fc0:	31 10       	cpse	r3, r1
    4fc2:	3a 94       	dec	r3
    4fc4:	f1 e0       	ldi	r31, 0x01	; 1
    4fc6:	4f 1a       	sub	r4, r31
    4fc8:	51 08       	sbc	r5, r1
    4fca:	41 14       	cp	r4, r1
    4fcc:	51 04       	cpc	r5, r1
    4fce:	79 f7       	brne	.-34     	; 0x4fae <vfprintf+0x1ac>
    4fd0:	de c0       	rjmp	.+444    	; 0x518e <vfprintf+0x38c>
    4fd2:	84 36       	cpi	r24, 0x64	; 100
    4fd4:	11 f0       	breq	.+4      	; 0x4fda <vfprintf+0x1d8>
    4fd6:	89 36       	cpi	r24, 0x69	; 105
    4fd8:	31 f5       	brne	.+76     	; 0x5026 <vfprintf+0x224>
    4fda:	f8 01       	movw	r30, r16
    4fdc:	27 ff       	sbrs	r18, 7
    4fde:	07 c0       	rjmp	.+14     	; 0x4fee <vfprintf+0x1ec>
    4fe0:	60 81       	ld	r22, Z
    4fe2:	71 81       	ldd	r23, Z+1	; 0x01
    4fe4:	82 81       	ldd	r24, Z+2	; 0x02
    4fe6:	93 81       	ldd	r25, Z+3	; 0x03
    4fe8:	0c 5f       	subi	r16, 0xFC	; 252
    4fea:	1f 4f       	sbci	r17, 0xFF	; 255
    4fec:	08 c0       	rjmp	.+16     	; 0x4ffe <vfprintf+0x1fc>
    4fee:	60 81       	ld	r22, Z
    4ff0:	71 81       	ldd	r23, Z+1	; 0x01
    4ff2:	88 27       	eor	r24, r24
    4ff4:	77 fd       	sbrc	r23, 7
    4ff6:	80 95       	com	r24
    4ff8:	98 2f       	mov	r25, r24
    4ffa:	0e 5f       	subi	r16, 0xFE	; 254
    4ffc:	1f 4f       	sbci	r17, 0xFF	; 255
    4ffe:	2f 76       	andi	r18, 0x6F	; 111
    5000:	b2 2e       	mov	r11, r18
    5002:	97 ff       	sbrs	r25, 7
    5004:	09 c0       	rjmp	.+18     	; 0x5018 <vfprintf+0x216>
    5006:	90 95       	com	r25
    5008:	80 95       	com	r24
    500a:	70 95       	com	r23
    500c:	61 95       	neg	r22
    500e:	7f 4f       	sbci	r23, 0xFF	; 255
    5010:	8f 4f       	sbci	r24, 0xFF	; 255
    5012:	9f 4f       	sbci	r25, 0xFF	; 255
    5014:	20 68       	ori	r18, 0x80	; 128
    5016:	b2 2e       	mov	r11, r18
    5018:	2a e0       	ldi	r18, 0x0A	; 10
    501a:	30 e0       	ldi	r19, 0x00	; 0
    501c:	a4 01       	movw	r20, r8
    501e:	27 d1       	rcall	.+590    	; 0x526e <__ultoa_invert>
    5020:	a8 2e       	mov	r10, r24
    5022:	a8 18       	sub	r10, r8
    5024:	43 c0       	rjmp	.+134    	; 0x50ac <vfprintf+0x2aa>
    5026:	85 37       	cpi	r24, 0x75	; 117
    5028:	29 f4       	brne	.+10     	; 0x5034 <vfprintf+0x232>
    502a:	2f 7e       	andi	r18, 0xEF	; 239
    502c:	b2 2e       	mov	r11, r18
    502e:	2a e0       	ldi	r18, 0x0A	; 10
    5030:	30 e0       	ldi	r19, 0x00	; 0
    5032:	25 c0       	rjmp	.+74     	; 0x507e <vfprintf+0x27c>
    5034:	f2 2f       	mov	r31, r18
    5036:	f9 7f       	andi	r31, 0xF9	; 249
    5038:	bf 2e       	mov	r11, r31
    503a:	8f 36       	cpi	r24, 0x6F	; 111
    503c:	c1 f0       	breq	.+48     	; 0x506e <vfprintf+0x26c>
    503e:	18 f4       	brcc	.+6      	; 0x5046 <vfprintf+0x244>
    5040:	88 35       	cpi	r24, 0x58	; 88
    5042:	79 f0       	breq	.+30     	; 0x5062 <vfprintf+0x260>
    5044:	ad c0       	rjmp	.+346    	; 0x51a0 <vfprintf+0x39e>
    5046:	80 37       	cpi	r24, 0x70	; 112
    5048:	19 f0       	breq	.+6      	; 0x5050 <vfprintf+0x24e>
    504a:	88 37       	cpi	r24, 0x78	; 120
    504c:	21 f0       	breq	.+8      	; 0x5056 <vfprintf+0x254>
    504e:	a8 c0       	rjmp	.+336    	; 0x51a0 <vfprintf+0x39e>
    5050:	2f 2f       	mov	r18, r31
    5052:	20 61       	ori	r18, 0x10	; 16
    5054:	b2 2e       	mov	r11, r18
    5056:	b4 fe       	sbrs	r11, 4
    5058:	0d c0       	rjmp	.+26     	; 0x5074 <vfprintf+0x272>
    505a:	8b 2d       	mov	r24, r11
    505c:	84 60       	ori	r24, 0x04	; 4
    505e:	b8 2e       	mov	r11, r24
    5060:	09 c0       	rjmp	.+18     	; 0x5074 <vfprintf+0x272>
    5062:	24 ff       	sbrs	r18, 4
    5064:	0a c0       	rjmp	.+20     	; 0x507a <vfprintf+0x278>
    5066:	9f 2f       	mov	r25, r31
    5068:	96 60       	ori	r25, 0x06	; 6
    506a:	b9 2e       	mov	r11, r25
    506c:	06 c0       	rjmp	.+12     	; 0x507a <vfprintf+0x278>
    506e:	28 e0       	ldi	r18, 0x08	; 8
    5070:	30 e0       	ldi	r19, 0x00	; 0
    5072:	05 c0       	rjmp	.+10     	; 0x507e <vfprintf+0x27c>
    5074:	20 e1       	ldi	r18, 0x10	; 16
    5076:	30 e0       	ldi	r19, 0x00	; 0
    5078:	02 c0       	rjmp	.+4      	; 0x507e <vfprintf+0x27c>
    507a:	20 e1       	ldi	r18, 0x10	; 16
    507c:	32 e0       	ldi	r19, 0x02	; 2
    507e:	f8 01       	movw	r30, r16
    5080:	b7 fe       	sbrs	r11, 7
    5082:	07 c0       	rjmp	.+14     	; 0x5092 <vfprintf+0x290>
    5084:	60 81       	ld	r22, Z
    5086:	71 81       	ldd	r23, Z+1	; 0x01
    5088:	82 81       	ldd	r24, Z+2	; 0x02
    508a:	93 81       	ldd	r25, Z+3	; 0x03
    508c:	0c 5f       	subi	r16, 0xFC	; 252
    508e:	1f 4f       	sbci	r17, 0xFF	; 255
    5090:	06 c0       	rjmp	.+12     	; 0x509e <vfprintf+0x29c>
    5092:	60 81       	ld	r22, Z
    5094:	71 81       	ldd	r23, Z+1	; 0x01
    5096:	80 e0       	ldi	r24, 0x00	; 0
    5098:	90 e0       	ldi	r25, 0x00	; 0
    509a:	0e 5f       	subi	r16, 0xFE	; 254
    509c:	1f 4f       	sbci	r17, 0xFF	; 255
    509e:	a4 01       	movw	r20, r8
    50a0:	e6 d0       	rcall	.+460    	; 0x526e <__ultoa_invert>
    50a2:	a8 2e       	mov	r10, r24
    50a4:	a8 18       	sub	r10, r8
    50a6:	fb 2d       	mov	r31, r11
    50a8:	ff 77       	andi	r31, 0x7F	; 127
    50aa:	bf 2e       	mov	r11, r31
    50ac:	b6 fe       	sbrs	r11, 6
    50ae:	0b c0       	rjmp	.+22     	; 0x50c6 <vfprintf+0x2c4>
    50b0:	2b 2d       	mov	r18, r11
    50b2:	2e 7f       	andi	r18, 0xFE	; 254
    50b4:	a5 14       	cp	r10, r5
    50b6:	50 f4       	brcc	.+20     	; 0x50cc <vfprintf+0x2ca>
    50b8:	b4 fe       	sbrs	r11, 4
    50ba:	0a c0       	rjmp	.+20     	; 0x50d0 <vfprintf+0x2ce>
    50bc:	b2 fc       	sbrc	r11, 2
    50be:	08 c0       	rjmp	.+16     	; 0x50d0 <vfprintf+0x2ce>
    50c0:	2b 2d       	mov	r18, r11
    50c2:	2e 7e       	andi	r18, 0xEE	; 238
    50c4:	05 c0       	rjmp	.+10     	; 0x50d0 <vfprintf+0x2ce>
    50c6:	7a 2c       	mov	r7, r10
    50c8:	2b 2d       	mov	r18, r11
    50ca:	03 c0       	rjmp	.+6      	; 0x50d2 <vfprintf+0x2d0>
    50cc:	7a 2c       	mov	r7, r10
    50ce:	01 c0       	rjmp	.+2      	; 0x50d2 <vfprintf+0x2d0>
    50d0:	75 2c       	mov	r7, r5
    50d2:	24 ff       	sbrs	r18, 4
    50d4:	0d c0       	rjmp	.+26     	; 0x50f0 <vfprintf+0x2ee>
    50d6:	fe 01       	movw	r30, r28
    50d8:	ea 0d       	add	r30, r10
    50da:	f1 1d       	adc	r31, r1
    50dc:	80 81       	ld	r24, Z
    50de:	80 33       	cpi	r24, 0x30	; 48
    50e0:	11 f4       	brne	.+4      	; 0x50e6 <vfprintf+0x2e4>
    50e2:	29 7e       	andi	r18, 0xE9	; 233
    50e4:	09 c0       	rjmp	.+18     	; 0x50f8 <vfprintf+0x2f6>
    50e6:	22 ff       	sbrs	r18, 2
    50e8:	06 c0       	rjmp	.+12     	; 0x50f6 <vfprintf+0x2f4>
    50ea:	73 94       	inc	r7
    50ec:	73 94       	inc	r7
    50ee:	04 c0       	rjmp	.+8      	; 0x50f8 <vfprintf+0x2f6>
    50f0:	82 2f       	mov	r24, r18
    50f2:	86 78       	andi	r24, 0x86	; 134
    50f4:	09 f0       	breq	.+2      	; 0x50f8 <vfprintf+0x2f6>
    50f6:	73 94       	inc	r7
    50f8:	23 fd       	sbrc	r18, 3
    50fa:	12 c0       	rjmp	.+36     	; 0x5120 <vfprintf+0x31e>
    50fc:	20 ff       	sbrs	r18, 0
    50fe:	06 c0       	rjmp	.+12     	; 0x510c <vfprintf+0x30a>
    5100:	5a 2c       	mov	r5, r10
    5102:	73 14       	cp	r7, r3
    5104:	18 f4       	brcc	.+6      	; 0x510c <vfprintf+0x30a>
    5106:	53 0c       	add	r5, r3
    5108:	57 18       	sub	r5, r7
    510a:	73 2c       	mov	r7, r3
    510c:	73 14       	cp	r7, r3
    510e:	60 f4       	brcc	.+24     	; 0x5128 <vfprintf+0x326>
    5110:	b7 01       	movw	r22, r14
    5112:	80 e2       	ldi	r24, 0x20	; 32
    5114:	90 e0       	ldi	r25, 0x00	; 0
    5116:	2c 87       	std	Y+12, r18	; 0x0c
    5118:	78 d0       	rcall	.+240    	; 0x520a <fputc>
    511a:	73 94       	inc	r7
    511c:	2c 85       	ldd	r18, Y+12	; 0x0c
    511e:	f6 cf       	rjmp	.-20     	; 0x510c <vfprintf+0x30a>
    5120:	73 14       	cp	r7, r3
    5122:	10 f4       	brcc	.+4      	; 0x5128 <vfprintf+0x326>
    5124:	37 18       	sub	r3, r7
    5126:	01 c0       	rjmp	.+2      	; 0x512a <vfprintf+0x328>
    5128:	31 2c       	mov	r3, r1
    512a:	24 ff       	sbrs	r18, 4
    512c:	11 c0       	rjmp	.+34     	; 0x5150 <vfprintf+0x34e>
    512e:	b7 01       	movw	r22, r14
    5130:	80 e3       	ldi	r24, 0x30	; 48
    5132:	90 e0       	ldi	r25, 0x00	; 0
    5134:	2c 87       	std	Y+12, r18	; 0x0c
    5136:	69 d0       	rcall	.+210    	; 0x520a <fputc>
    5138:	2c 85       	ldd	r18, Y+12	; 0x0c
    513a:	22 ff       	sbrs	r18, 2
    513c:	16 c0       	rjmp	.+44     	; 0x516a <vfprintf+0x368>
    513e:	21 ff       	sbrs	r18, 1
    5140:	03 c0       	rjmp	.+6      	; 0x5148 <vfprintf+0x346>
    5142:	88 e5       	ldi	r24, 0x58	; 88
    5144:	90 e0       	ldi	r25, 0x00	; 0
    5146:	02 c0       	rjmp	.+4      	; 0x514c <vfprintf+0x34a>
    5148:	88 e7       	ldi	r24, 0x78	; 120
    514a:	90 e0       	ldi	r25, 0x00	; 0
    514c:	b7 01       	movw	r22, r14
    514e:	0c c0       	rjmp	.+24     	; 0x5168 <vfprintf+0x366>
    5150:	82 2f       	mov	r24, r18
    5152:	86 78       	andi	r24, 0x86	; 134
    5154:	51 f0       	breq	.+20     	; 0x516a <vfprintf+0x368>
    5156:	21 fd       	sbrc	r18, 1
    5158:	02 c0       	rjmp	.+4      	; 0x515e <vfprintf+0x35c>
    515a:	80 e2       	ldi	r24, 0x20	; 32
    515c:	01 c0       	rjmp	.+2      	; 0x5160 <vfprintf+0x35e>
    515e:	8b e2       	ldi	r24, 0x2B	; 43
    5160:	27 fd       	sbrc	r18, 7
    5162:	8d e2       	ldi	r24, 0x2D	; 45
    5164:	b7 01       	movw	r22, r14
    5166:	90 e0       	ldi	r25, 0x00	; 0
    5168:	50 d0       	rcall	.+160    	; 0x520a <fputc>
    516a:	a5 14       	cp	r10, r5
    516c:	30 f4       	brcc	.+12     	; 0x517a <vfprintf+0x378>
    516e:	b7 01       	movw	r22, r14
    5170:	80 e3       	ldi	r24, 0x30	; 48
    5172:	90 e0       	ldi	r25, 0x00	; 0
    5174:	4a d0       	rcall	.+148    	; 0x520a <fputc>
    5176:	5a 94       	dec	r5
    5178:	f8 cf       	rjmp	.-16     	; 0x516a <vfprintf+0x368>
    517a:	aa 94       	dec	r10
    517c:	f4 01       	movw	r30, r8
    517e:	ea 0d       	add	r30, r10
    5180:	f1 1d       	adc	r31, r1
    5182:	80 81       	ld	r24, Z
    5184:	b7 01       	movw	r22, r14
    5186:	90 e0       	ldi	r25, 0x00	; 0
    5188:	40 d0       	rcall	.+128    	; 0x520a <fputc>
    518a:	a1 10       	cpse	r10, r1
    518c:	f6 cf       	rjmp	.-20     	; 0x517a <vfprintf+0x378>
    518e:	33 20       	and	r3, r3
    5190:	09 f4       	brne	.+2      	; 0x5194 <vfprintf+0x392>
    5192:	5d ce       	rjmp	.-838    	; 0x4e4e <vfprintf+0x4c>
    5194:	b7 01       	movw	r22, r14
    5196:	80 e2       	ldi	r24, 0x20	; 32
    5198:	90 e0       	ldi	r25, 0x00	; 0
    519a:	37 d0       	rcall	.+110    	; 0x520a <fputc>
    519c:	3a 94       	dec	r3
    519e:	f7 cf       	rjmp	.-18     	; 0x518e <vfprintf+0x38c>
    51a0:	f7 01       	movw	r30, r14
    51a2:	86 81       	ldd	r24, Z+6	; 0x06
    51a4:	97 81       	ldd	r25, Z+7	; 0x07
    51a6:	02 c0       	rjmp	.+4      	; 0x51ac <vfprintf+0x3aa>
    51a8:	8f ef       	ldi	r24, 0xFF	; 255
    51aa:	9f ef       	ldi	r25, 0xFF	; 255
    51ac:	2c 96       	adiw	r28, 0x0c	; 12
    51ae:	0f b6       	in	r0, 0x3f	; 63
    51b0:	f8 94       	cli
    51b2:	de bf       	out	0x3e, r29	; 62
    51b4:	0f be       	out	0x3f, r0	; 63
    51b6:	cd bf       	out	0x3d, r28	; 61
    51b8:	df 91       	pop	r29
    51ba:	cf 91       	pop	r28
    51bc:	1f 91       	pop	r17
    51be:	0f 91       	pop	r16
    51c0:	ff 90       	pop	r15
    51c2:	ef 90       	pop	r14
    51c4:	df 90       	pop	r13
    51c6:	cf 90       	pop	r12
    51c8:	bf 90       	pop	r11
    51ca:	af 90       	pop	r10
    51cc:	9f 90       	pop	r9
    51ce:	8f 90       	pop	r8
    51d0:	7f 90       	pop	r7
    51d2:	6f 90       	pop	r6
    51d4:	5f 90       	pop	r5
    51d6:	4f 90       	pop	r4
    51d8:	3f 90       	pop	r3
    51da:	2f 90       	pop	r2
    51dc:	08 95       	ret

000051de <strnlen_P>:
    51de:	fc 01       	movw	r30, r24
    51e0:	05 90       	lpm	r0, Z+
    51e2:	61 50       	subi	r22, 0x01	; 1
    51e4:	70 40       	sbci	r23, 0x00	; 0
    51e6:	01 10       	cpse	r0, r1
    51e8:	d8 f7       	brcc	.-10     	; 0x51e0 <strnlen_P+0x2>
    51ea:	80 95       	com	r24
    51ec:	90 95       	com	r25
    51ee:	8e 0f       	add	r24, r30
    51f0:	9f 1f       	adc	r25, r31
    51f2:	08 95       	ret

000051f4 <strnlen>:
    51f4:	fc 01       	movw	r30, r24
    51f6:	61 50       	subi	r22, 0x01	; 1
    51f8:	70 40       	sbci	r23, 0x00	; 0
    51fa:	01 90       	ld	r0, Z+
    51fc:	01 10       	cpse	r0, r1
    51fe:	d8 f7       	brcc	.-10     	; 0x51f6 <strnlen+0x2>
    5200:	80 95       	com	r24
    5202:	90 95       	com	r25
    5204:	8e 0f       	add	r24, r30
    5206:	9f 1f       	adc	r25, r31
    5208:	08 95       	ret

0000520a <fputc>:
    520a:	0f 93       	push	r16
    520c:	1f 93       	push	r17
    520e:	cf 93       	push	r28
    5210:	df 93       	push	r29
    5212:	18 2f       	mov	r17, r24
    5214:	09 2f       	mov	r16, r25
    5216:	eb 01       	movw	r28, r22
    5218:	8b 81       	ldd	r24, Y+3	; 0x03
    521a:	81 fd       	sbrc	r24, 1
    521c:	03 c0       	rjmp	.+6      	; 0x5224 <fputc+0x1a>
    521e:	8f ef       	ldi	r24, 0xFF	; 255
    5220:	9f ef       	ldi	r25, 0xFF	; 255
    5222:	20 c0       	rjmp	.+64     	; 0x5264 <fputc+0x5a>
    5224:	82 ff       	sbrs	r24, 2
    5226:	10 c0       	rjmp	.+32     	; 0x5248 <fputc+0x3e>
    5228:	4e 81       	ldd	r20, Y+6	; 0x06
    522a:	5f 81       	ldd	r21, Y+7	; 0x07
    522c:	2c 81       	ldd	r18, Y+4	; 0x04
    522e:	3d 81       	ldd	r19, Y+5	; 0x05
    5230:	42 17       	cp	r20, r18
    5232:	53 07       	cpc	r21, r19
    5234:	7c f4       	brge	.+30     	; 0x5254 <fputc+0x4a>
    5236:	e8 81       	ld	r30, Y
    5238:	f9 81       	ldd	r31, Y+1	; 0x01
    523a:	9f 01       	movw	r18, r30
    523c:	2f 5f       	subi	r18, 0xFF	; 255
    523e:	3f 4f       	sbci	r19, 0xFF	; 255
    5240:	39 83       	std	Y+1, r19	; 0x01
    5242:	28 83       	st	Y, r18
    5244:	10 83       	st	Z, r17
    5246:	06 c0       	rjmp	.+12     	; 0x5254 <fputc+0x4a>
    5248:	e8 85       	ldd	r30, Y+8	; 0x08
    524a:	f9 85       	ldd	r31, Y+9	; 0x09
    524c:	81 2f       	mov	r24, r17
    524e:	19 95       	eicall
    5250:	89 2b       	or	r24, r25
    5252:	29 f7       	brne	.-54     	; 0x521e <fputc+0x14>
    5254:	2e 81       	ldd	r18, Y+6	; 0x06
    5256:	3f 81       	ldd	r19, Y+7	; 0x07
    5258:	2f 5f       	subi	r18, 0xFF	; 255
    525a:	3f 4f       	sbci	r19, 0xFF	; 255
    525c:	3f 83       	std	Y+7, r19	; 0x07
    525e:	2e 83       	std	Y+6, r18	; 0x06
    5260:	81 2f       	mov	r24, r17
    5262:	90 2f       	mov	r25, r16
    5264:	df 91       	pop	r29
    5266:	cf 91       	pop	r28
    5268:	1f 91       	pop	r17
    526a:	0f 91       	pop	r16
    526c:	08 95       	ret

0000526e <__ultoa_invert>:
    526e:	fa 01       	movw	r30, r20
    5270:	aa 27       	eor	r26, r26
    5272:	28 30       	cpi	r18, 0x08	; 8
    5274:	51 f1       	breq	.+84     	; 0x52ca <__ultoa_invert+0x5c>
    5276:	20 31       	cpi	r18, 0x10	; 16
    5278:	81 f1       	breq	.+96     	; 0x52da <__ultoa_invert+0x6c>
    527a:	e8 94       	clt
    527c:	6f 93       	push	r22
    527e:	6e 7f       	andi	r22, 0xFE	; 254
    5280:	6e 5f       	subi	r22, 0xFE	; 254
    5282:	7f 4f       	sbci	r23, 0xFF	; 255
    5284:	8f 4f       	sbci	r24, 0xFF	; 255
    5286:	9f 4f       	sbci	r25, 0xFF	; 255
    5288:	af 4f       	sbci	r26, 0xFF	; 255
    528a:	b1 e0       	ldi	r27, 0x01	; 1
    528c:	3e d0       	rcall	.+124    	; 0x530a <__ultoa_invert+0x9c>
    528e:	b4 e0       	ldi	r27, 0x04	; 4
    5290:	3c d0       	rcall	.+120    	; 0x530a <__ultoa_invert+0x9c>
    5292:	67 0f       	add	r22, r23
    5294:	78 1f       	adc	r23, r24
    5296:	89 1f       	adc	r24, r25
    5298:	9a 1f       	adc	r25, r26
    529a:	a1 1d       	adc	r26, r1
    529c:	68 0f       	add	r22, r24
    529e:	79 1f       	adc	r23, r25
    52a0:	8a 1f       	adc	r24, r26
    52a2:	91 1d       	adc	r25, r1
    52a4:	a1 1d       	adc	r26, r1
    52a6:	6a 0f       	add	r22, r26
    52a8:	71 1d       	adc	r23, r1
    52aa:	81 1d       	adc	r24, r1
    52ac:	91 1d       	adc	r25, r1
    52ae:	a1 1d       	adc	r26, r1
    52b0:	20 d0       	rcall	.+64     	; 0x52f2 <__ultoa_invert+0x84>
    52b2:	09 f4       	brne	.+2      	; 0x52b6 <__ultoa_invert+0x48>
    52b4:	68 94       	set
    52b6:	3f 91       	pop	r19
    52b8:	2a e0       	ldi	r18, 0x0A	; 10
    52ba:	26 9f       	mul	r18, r22
    52bc:	11 24       	eor	r1, r1
    52be:	30 19       	sub	r19, r0
    52c0:	30 5d       	subi	r19, 0xD0	; 208
    52c2:	31 93       	st	Z+, r19
    52c4:	de f6       	brtc	.-74     	; 0x527c <__ultoa_invert+0xe>
    52c6:	cf 01       	movw	r24, r30
    52c8:	08 95       	ret
    52ca:	46 2f       	mov	r20, r22
    52cc:	47 70       	andi	r20, 0x07	; 7
    52ce:	40 5d       	subi	r20, 0xD0	; 208
    52d0:	41 93       	st	Z+, r20
    52d2:	b3 e0       	ldi	r27, 0x03	; 3
    52d4:	0f d0       	rcall	.+30     	; 0x52f4 <__ultoa_invert+0x86>
    52d6:	c9 f7       	brne	.-14     	; 0x52ca <__ultoa_invert+0x5c>
    52d8:	f6 cf       	rjmp	.-20     	; 0x52c6 <__ultoa_invert+0x58>
    52da:	46 2f       	mov	r20, r22
    52dc:	4f 70       	andi	r20, 0x0F	; 15
    52de:	40 5d       	subi	r20, 0xD0	; 208
    52e0:	4a 33       	cpi	r20, 0x3A	; 58
    52e2:	18 f0       	brcs	.+6      	; 0x52ea <__ultoa_invert+0x7c>
    52e4:	49 5d       	subi	r20, 0xD9	; 217
    52e6:	31 fd       	sbrc	r19, 1
    52e8:	40 52       	subi	r20, 0x20	; 32
    52ea:	41 93       	st	Z+, r20
    52ec:	02 d0       	rcall	.+4      	; 0x52f2 <__ultoa_invert+0x84>
    52ee:	a9 f7       	brne	.-22     	; 0x52da <__ultoa_invert+0x6c>
    52f0:	ea cf       	rjmp	.-44     	; 0x52c6 <__ultoa_invert+0x58>
    52f2:	b4 e0       	ldi	r27, 0x04	; 4
    52f4:	a6 95       	lsr	r26
    52f6:	97 95       	ror	r25
    52f8:	87 95       	ror	r24
    52fa:	77 95       	ror	r23
    52fc:	67 95       	ror	r22
    52fe:	ba 95       	dec	r27
    5300:	c9 f7       	brne	.-14     	; 0x52f4 <__ultoa_invert+0x86>
    5302:	00 97       	sbiw	r24, 0x00	; 0
    5304:	61 05       	cpc	r22, r1
    5306:	71 05       	cpc	r23, r1
    5308:	08 95       	ret
    530a:	9b 01       	movw	r18, r22
    530c:	ac 01       	movw	r20, r24
    530e:	0a 2e       	mov	r0, r26
    5310:	06 94       	lsr	r0
    5312:	57 95       	ror	r21
    5314:	47 95       	ror	r20
    5316:	37 95       	ror	r19
    5318:	27 95       	ror	r18
    531a:	ba 95       	dec	r27
    531c:	c9 f7       	brne	.-14     	; 0x5310 <__ultoa_invert+0xa2>
    531e:	62 0f       	add	r22, r18
    5320:	73 1f       	adc	r23, r19
    5322:	84 1f       	adc	r24, r20
    5324:	95 1f       	adc	r25, r21
    5326:	a0 1d       	adc	r26, r0
    5328:	08 95       	ret

0000532a <_exit>:
    532a:	f8 94       	cli

0000532c <__stop_program>:
    532c:	ff cf       	rjmp	.-2      	; 0x532c <__stop_program>
